openapi: 3.0.0
info:
  title: Merged API
  version: 1.0.0
paths:
  /api/auth/v1/logout:
    post:
      tags:
      - Auth
      summary: User logout, invalidates token which is taken from the cookie
      operationId: logout
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/auth/v1/token/validate:
    get:
      tags:
      - Auth
      summary: Validates token from the cookie, valid token means that user is logged
        in to the system.
      operationId: validate
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/cashout/v3/auto/request-offer:
    post:
      tags:
      - User Cashout API V2
      summary: Auto-Cashout Offer Request
      operationId: requestCashout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_2_PayoutRequest'
        required: true
      responses:
        '500':
          description: Unexpected service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_ErrorResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_ErrorResponse'
        '200':
          description: Cashout offer requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_OfferResponse'
  /api/cashout/v2/request-offer:
    post:
      tags:
      - User Cashout API V2
      summary: Cashout Offer Request
      operationId: requestCashout_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_2_PayoutRequest'
        required: true
      responses:
        '500':
          description: Unexpected service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_ErrorResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_ErrorResponse'
        '200':
          description: Cashout offer requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_OfferResponse'
  /api/cashout/v2/request-offer-polling:
    post:
      tags:
      - User Cashout API V2
      summary: Cashout Request Long-polling
      operationId: longPollingRequestCashout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_2_PayoutRequest'
        required: true
      responses:
        '500':
          description: Unexpected service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_ErrorResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_ErrorResponse'
        '200':
          description: Cashout offer requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_OfferResponse'
  /api/cashout/v2/request-offer-auto:
    post:
      tags:
      - User Cashout API V2
      summary: Cashout Request Auto-polling
      operationId: autoPollingRequestCashout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_2_PayoutRequest'
        required: true
      responses:
        '500':
          description: Unexpected service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_ErrorResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_ErrorResponse'
        '200':
          description: Cashout offer requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_OfferResponse'
  /api/cashout/v2/confirm:
    post:
      tags:
      - User Cashout API V2
      summary: Cashout Confirm
      operationId: confirmCashoutOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_2_ConfirmRequest'
        required: true
      responses:
        '500':
          description: Unexpected service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_ErrorResponse'
        '400':
          description: Cashout offer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_ErrorResponse'
        '200':
          description: Cashout offer confirmed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_OfferStatusResponse'
  /api/cashout/v2/status/{status-id}:
    get:
      tags:
      - User Cashout API V2
      summary: Get confirmation status
      operationId: getConfirmationStatus
      parameters:
      - name: status-id
        in: path
        required: true
        schema:
          type: string
      responses:
        '500':
          description: Unexpected service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_ErrorResponse'
        '200':
          description: Offer status found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_OfferStatusResponse'
        '404':
          description: Offer status not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_2_ErrorResponse'
  /api/brand/v1/countries/{brand-name}:
    get:
      tags:
      - Brands API
      summary: Returns countries where brand operates.
      operationId: getCountries
      parameters:
      - name: brand-name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api_docs_3_CountryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/fixed-odds-bets/v1/betslip/{id}:
    get:
      tags:
      - Betslip API
      summary: Get betslip details by ID
      operationId: getBetslip
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: language
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/api_docs_5_Language'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_5_UserBetslipDetailsResponse'
        '400':
          description: Incorrect arguments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_5_ErrorResponse'
        '500':
          description: Unexpected server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_5_ErrorResponse'
  /api/fixed-odds-bets/v1/betslip/virtual:
    get:
      tags:
      - Betslip API
      summary: List of virtual betslips (paged) for the authenticated user
      operationId: getVirtualBetslips
      parameters:
      - name: skip
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: take
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_5_UserBetslipsResponsePaged'
        '400':
          description: Incorrect arguments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_5_ErrorResponse'
        '500':
          description: Unexpected server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_5_ErrorResponse'
  /api/fixed-odds-bets/v1/betslip/settled:
    get:
      tags:
      - Betslip API
      summary: List of settled betslips (paged) for the authenticated user
      operationId: getSettledBetslips
      parameters:
      - name: skip
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: take
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_5_UserBetslipsResponsePaged'
        '400':
          description: Incorrect arguments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_5_ErrorResponse'
        '500':
          description: Unexpected server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_5_ErrorResponse'
  /api/fixed-odds-bets/v1/betslip/pending:
    get:
      tags:
      - Betslip API
      summary: List of pending betslips (paged) for the authenticated user
      operationId: getPendingBetslips
      parameters:
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: take
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_5_UserBetslipsResponsePaged'
        '400':
          description: Incorrect arguments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_5_ErrorResponse'
        '500':
          description: Unexpected server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_5_ErrorResponse'
  /api/fixed-odds-bets/v1/betslip/pending/count:
    get:
      tags:
      - Betslip API
      summary: Count of pending REAL betslips
      operationId: getPendingBetslipCount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_5_UserBetslipCountResponse'
        '500':
          description: Unexpected server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_5_ErrorResponse'
  /api/integration/v2/launch-url:
    post:
      tags:
      - Game Launch Provider
      operationId: launchGameV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_6_GameLauncherRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_6_GameLauncherResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/integration/v1/session/revoke:
    post:
      tags:
      - Sessions
      summary: Revokes all casino sessions for logged in user
      operationId: revokeUserSessions
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/integration/v1/conversion/top-up:
    post:
      tags:
      - Currency Converter
      summary: Converts currency of the brand identifier to betPawaChips
      operationId: topUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_6_TopUpRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_6_ListResponseBalanceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/integration/v1/conversion/top-up/tax/preview:
    post:
      tags:
      - Currency Converter
      summary: Provides preview of taxes in case of user decides to cash out
      operationId: topUpTaxPreview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_6_TopUpRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_6_TopUpTaxPreviewResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/integration/v1/conversion/cash-in:
    post:
      tags:
      - Currency Converter
      summary: Converts betPawaChips to currency of the brand identifier
      operationId: cashIn
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_6_ListResponseBalanceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/integration/v1/aggregator/games:
    get:
      tags:
      - Games
      summary: Returns ordered list of available games. Ordered by global position.
        Response is cached for 1 minute
      operationId: getGameList_1
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_6_ListResponseGameResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
    post:
      tags:
      - Games
      summary: Returns paginated and sorted list of available games
      operationId: getGameList_2
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_6_GamesSortRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_6_ListResponseGameResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/integration/v1/aggregator/games/{categoryUuid}:
    get:
      tags:
      - Games
      summary: Returns category ordered list of available games. Ordered by category
        position. Response is cached for 1 minute
      operationId: getGameListByCategory
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
      - name: categoryUuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_6_ListResponseGameResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
    post:
      tags:
      - Games
      summary: Returns paginated and sorted list of available games by category
      operationId: getGameListByCategory_1
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
      - name: categoryUuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_6_GamesSortRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_6_ListResponseGameResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/integration/v1/conversion/cash-in/tax/preview:
    get:
      tags:
      - Currency Converter
      summary: Provides preview of taxes in case of user decides to cash out
      operationId: taxPreview
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_6_CashInTaxPreviewResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/ledger/v1/funds/transfer:
    post:
      tags:
      - User Transactions
      summary: Transfer funds between accounts that belong to the same user
      operationId: transfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_8_FundsTransferRequest'
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/ledger/v1/funds/transactions/statement:
    post:
      tags:
      - User Transactions
      summary: Get transactions of logged in user with running balance
      operationId: getTransactionStatement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_8_UserStatementRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_8_UserTransactionsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/ledger/v1/funds/balance:
    get:
      tags:
      - User Balance
      summary: Get balance of default currency. If balance is negative zero amount
        will be returned
      operationId: getBalance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_8_BalanceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
    post:
      tags:
      - User Balance
      summary: Get balance for requested currency, always returns true balance (even
        negative)
      operationId: getBalance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_8_BalanceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_8_BalanceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/messaging/v1/messages/list:
    put:
      tags:
      - User Messaging
      summary: Set new status for user messages
      operationId: updateUserMessageStatuses
      parameters:
      - name: x-pawa-language
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/api_docs_9_UserMessageStatusUpdateRequest'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
    post:
      tags:
      - User Messaging
      summary: Get specified page of user messages with sign-up date validation. Page
        size is 15 messages
      operationId: getUserMessages
      parameters:
      - name: x-pawa-language
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_9_UserMessageViewRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_9_UserMessageViewResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/messaging/v2/messages/active:
    get:
      tags:
      - User Messaging
      summary: Get counter for unread messages and messages with configured 'additional
        view' for the currently logged-in user with sign-up date validation
      operationId: getUserActiveMessagesV2
      parameters:
      - name: x-pawa-language
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_9_CountAndAdditionalViewMessagesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /payment/digmo/callback/user/update:
    post:
      tags:
      - digmo-callback-controller
      operationId: userUpdated
      parameters:
      - name: X-SIGNATURE
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
  /payment/digmo/callback/invitation/update:
    post:
      tags:
      - digmo-callback-controller
      operationId: invitationUpdated
      parameters:
      - name: X-SIGNATURE
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
  /api/payment/v2/withdrawal/cancel:
    post:
      tags:
      - Withdrawal request
      summary: Cancel withdrawal by UUID
      operationId: cancelWithdrawal
      parameters:
      - name: userUuid
        in: header
        required: true
        schema:
          type: string
          format: uuid
      - name: x-pawa-brand
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_10_CancelWithdrawalV2'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_ResponseBoolean'
  /api/payment/v1/payout/request/process:
    post:
      tags:
      - Payout Request
      summary: Process payout request for active type
      operationId: processNewRequest
      parameters:
      - name: x-pawa-brand
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_ResponsePayoutCreationResponse'
  /api/payment/v1/payout/request/disabled/process:
    post:
      tags:
      - Payout Request
      summary: Process payout request for disabled type
      operationId: processDisabledTypeRequest
      parameters:
      - name: x-pawa-brand
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_ResponsePayoutCreationResponse'
  /api/payment/v1/digmo/invitation-link:
    post:
      tags:
      - Digmo integration
      summary: Find active else generate invitation link
      operationId: invitationLink
      parameters:
      - name: userUuid
        in: header
        required: true
        schema:
          type: string
          format: uuid
      - name: x-pawa-brand
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_10_DigmoInvitationLinkRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_docs_10_DigmoInvitationLinkResponse'
  /api/payment/v1/deposit/request/create:
    post:
      tags:
      - Deposit Init
      summary: Initiate deposit with deposit type name
      operationId: initDepositWithName
      parameters:
      - name: userUuid
        in: header
        required: true
        schema:
          type: string
      - name: x-pawa-brand
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_10_InitDepositRequestWithDepositTypeName'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_InitDepositResponse'
  /api/payment/v2/withdrawal/pending:
    get:
      tags:
      - Withdrawal request
      summary: Get pending withdrawals
      operationId: getPendingPayoutsV2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_ResponseListPendingPayoutsResponseV2'
  /api/payment/v2/payout/type/disabled:
    get:
      tags:
      - Payout Type
      summary: Get disabled payout methods
      operationId: getDisabledPayoutMethodsForCurrentUser
      parameters:
      - name: x-pawa-brand
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_ResponsePayoutMethodsResponseV2'
  /api/payment/v2/payout/type/active:
    get:
      tags:
      - Payout Type
      summary: Get active payout methods
      operationId: getPayoutMethodsForCurrentUser
      parameters:
      - name: x-pawa-brand
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_ResponsePayoutMethodsResponseV2'
  /api/payment/v1/withdrawal/list/recent:
    get:
      tags:
      - user-transactions-controller
      summary: Get user withdrawals for the last 30 days
      operationId: findRecentWithdrawals
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_ResponseCollectionUserTransactionDetails'
  /api/payment/v1/payout/request/tax:
    get:
      tags:
      - Payout Request
      summary: Calculate tax for the payout
      operationId: calculateTax
      parameters:
      - name: amount
        in: query
        required: true
        schema:
          type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_ResponseBigDecimal'
  /api/payment/v1/payout/request/pending:
    get:
      tags:
      - Payout Request
      summary: Get pending payout requests
      operationId: getPendingPayouts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_ResponseListPendingPayoutsResponse'
      deprecated: true
  /api/payment/v1/payout-details:
    get:
      tags:
      - user-transactions-controller
      summary: Get payout details for logged in user for last 90 days
      operationId: getPayoutDetails
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api_docs_10_TransactionDetailsResponse'
  /api/payment/v1/digmo/balance/{userUuid}:
    get:
      tags:
      - Digmo integration
      summary: Get user balance in digmo
      operationId: getBalance
      parameters:
      - name: userUuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_docs_10_DigmoUserBalanceResponse'
  /api/payment/v1/deposit/type/{name}/tier-fees:
    get:
      tags:
      - Deposit Type
      summary: Get all deposit tiered fee compensation's
      operationId: getDepositTypeTierFees
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api_docs_10_DepositTypeTierFeesDto'
  /api/payment/v1/deposit/type/details/{depositTypeName}:
    get:
      tags:
      - Deposit Type
      summary: Get deposit type details by name
      operationId: getDepositTypeDetails
      parameters:
      - name: depositTypeName
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_DepositTypeDetailsDto'
  /api/payment/v1/deposit/request/{id}:
    get:
      tags:
      - Deposit Init
      summary: Get status for deposit init by id
      operationId: getDepositStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: userUuid
        in: header
        required: true
        schema:
          type: string
      - name: x-pawa-brand
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_InitDepositStatusResponse'
  /api/payment/v1/deposit/options:
    get:
      tags:
      - Deposit Options
      operationId: getDepositOptions
      parameters:
      - name: userUuid
        in: header
        required: false
        schema:
          type: string
      - name: x-pawa-brand
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_docs_10_ResponseListDepositOptionDto'
  /api/payment/v1/deposit/list/recent:
    get:
      tags:
      - user-transactions-controller
      summary: Get user deposits for the last 30 days
      operationId: findRecentDeposits
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_ResponseCollectionUserTransactionDetails'
  /api/payment/v1/deposit/fee:
    get:
      tags:
      - Deposit Init
      summary: Get compensatable deposit fee amount and compensation size
      operationId: getDepositFee
      parameters:
      - name: amount
        in: query
        required: true
        schema:
          type: number
      - name: depositType
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_DepositCompensatedFeeResponse'
  /api/payment/v1/deposit/chargeable-fee:
    get:
      tags:
      - Deposit Init
      summary: Calculate chargeable deposit fee
      operationId: calculateChargeableFee
      parameters:
      - name: amount
        in: query
        required: true
        schema:
          type: number
      - name: depositType
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_10_DepositChargeableFeeResponse'
  /api/payment/v1/deposit-details:
    get:
      tags:
      - user-transactions-controller
      summary: Get deposit details for logged in user for last 90 days
      operationId: getDepositDetails
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/api_docs_10_TransactionDetailsResponse'
  /api/pool/v1/place-bet:
    post:
      tags:
      - place-bet-controller
      summary: Place bet for the pool
      operationId: placeBet
      parameters:
      - name: deviceType
        in: header
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_11_PlaceBetRequest'
        required: true
      responses:
        '500':
          description: Server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_ErrorResponse'
        '400':
          description: Request has invalid entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_ErrorResponse'
        '200':
          description: Returned Ticket response for bet plced
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_DetailedTicketResponse'
  /api/pool/v1/ticket:
    get:
      tags:
      - Ticket Controller (v1)
      summary: List tickets of the user with pagination
      operationId: listTickets
      parameters:
      - name: skip
        in: query
        required: false
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: take
        in: query
        required: false
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 8
      responses:
        '500':
          description: Server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_ErrorResponse'
        '200':
          description: list of tickets for specified user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_UserTicketsResponse'
  /api/pool/v1/ticket/{id}:
    get:
      tags:
      - Ticket Controller (v1)
      summary: Get user ticket by ticket id
      operationId: getTicket
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Returned ticket details of specified ticket id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_DetailedTicketResponse'
        '500':
          description: Server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_ErrorResponse'
        '400':
          description: Ticket not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_ErrorResponse'
  /api/pool/v1/pool/{id}:
    get:
      tags:
      - Pool Controller
      summary: Get pool by jurisdiction ID and pool ID
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '500':
          description: Server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_ErrorResponse'
        '400':
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_ErrorResponse'
        '200':
          description: Returned pool
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_PoolResponse'
  /api/pool/v1/pool/resulted:
    get:
      tags:
      - Pool Controller
      summary: Get list of resulted pools.
      operationId: results
      parameters:
      - name: skip
        in: query
        required: false
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: take
        in: query
        required: false
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        '500':
          description: Server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_ErrorResponse'
        '200':
          description: resulted pools
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_ResultedPoolsResponse'
  /api/pool/v1/pool/active:
    get:
      tags:
      - Pool Controller
      summary: Get list of active pools.
      operationId: actives
      parameters:
      - name: skip
        in: query
        required: false
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: take
        in: query
        required: false
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 10
      responses:
        '500':
          description: Server error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_ErrorResponse'
        '200':
          description: Returned active pools
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_11_ActivePoolsResponse'
  /api/preference/v1/user-derived-data:
    get:
      tags:
      - User derived data
      summary: Return all derived data for current user
      operationId: getUserDerivedData
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_12_UserDerivedDataResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
    put:
      tags:
      - User derived data
      summary: Add or update user derived value. If key exists then value will be
        overridden
      operationId: addUserDerivedData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_12_AddUserDerivedDataRequest'
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/preference/v1/preregistration:
    put:
      tags:
      - Preregistration
      summary: Stores data of preregistered users in new markets
      operationId: preregisterUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_12_PreregistrationRequest'
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/preference/v1/component-data:
    post:
      tags:
      - Component data
      summary: Aggregates and returns initial settings for front-end and user derived
        data as JSON object
      operationId: componentData
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_12_ComponentDataRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/api_docs_12_JsonNode'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/preference/v1/user-derived-data/{data-key}:
    get:
      tags:
      - User derived data
      summary: Return derived data by key for current user
      operationId: getUserDerivedDataByKey
      parameters:
      - name: data-key
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_12_UserDerivedDataByKeyResponse'
        '404':
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_12_ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/progressive-jackpot/v1/jackpot/last-ended:
    post:
      tags:
      - jackpot-controller
      operationId: findEndedJackpots
      parameters:
      - name: x-pawa-brand
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_13_JackpotsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_docs_13_ListResponseLastEndedJackpotResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/progressive-jackpot/v1/jackpot/active:
    get:
      tags:
      - jackpot-controller
      operationId: findActiveJackpots
      parameters:
      - name: x-pawa-brand
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_docs_13_ActiveJackpotsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/region/v2/regions/{id}/subregions:
    get:
      tags:
      - RegionController (v2)
      summary: Get a list of subregions by region ID sorted by region name
      operationId: getSubRegions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
          minimum: 0
      - name: take
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 20
          minimum: 1
      responses:
        '200':
          description: Returns a list of subregions by provided region id sorted by
            region name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_14_ResponseRegionDto'
        '400':
          description: Subregions by parent id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_14_ErrorResponse'
        '500':
          description: Unexpected service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_14_ErrorResponse'
  /api/region/v1/regions/{id}:
    get:
      tags:
      - regions-controller
      summary: Get a region by ID
      operationId: getRegion
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Returns region info for a specific id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_14_RegionDto'
        '400':
          description: Region by provided id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_14_ErrorResponse'
        '500':
          description: Unexpected service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_14_ErrorResponse'
  /api/region/v1/countries/{id}:
    get:
      tags:
      - regions-controller
      summary: Get a country by ID
      operationId: getCountry
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Returns country info for a specific id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_14_CountryDto'
        '400':
          description: Country by provided id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_14_ErrorResponse'
        '500':
          description: Unexpected service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_14_ErrorResponse'
  /api/sportsbook/virtual/v2/prices/list:
    post:
      tags:
      - PriceController (V2)
      summary: Get a list of prices by selections IDs
      operationId: getPricesBySelections
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_15_SelectionListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_15_GenericListResponseOddsSelectionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/virtual/v2/prices/full/list:
    post:
      tags:
      - PriceController (V2)
      summary: Get a list of events by selections IDs
      operationId: getPricesWithEventInfoBySelections
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_15_SelectionListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_15_GenericListResponseEventSelectionTupleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/virtual/v1/prices/list:
    post:
      tags:
      - PriceController (V1)
      summary: Get a list of prices by selections IDs
      operationId: getPrices
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_15_SelectionListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_15_GenericListResponsePriceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/virtual/v1/prices/full/list:
    post:
      tags:
      - PriceController (V1)
      summary: Get a list of events by selections IDs
      operationId: getAllBySelectionsIds
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_15_SelectionListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_15_GenericListResponseEventSelectionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/virtual/v2/events/list/by-round/{round-id}:
    get:
      tags:
      - Virtual Controller
      summary: Get virtual events by round
      operationId: getByRoundId
      parameters:
      - name: round-id
        in: path
        required: true
        schema:
          type: string
          example: '1'
        example: 1
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_15_GenericListResponseEventWithPricesByMarketResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/virtual/v1/standings/by-season/{season-id}:
    get:
      tags:
      - Standings Controller
      summary: Get actual seasons
      operationId: getBySeasonId
      parameters:
      - name: season-id
        in: path
        required: true
        schema:
          type: string
          example: '1'
        example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_15_StandingResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/virtual/v1/seasons/list/past:
    get:
      tags:
      - Season Controller
      summary: Get all seasons
      operationId: getAll
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_15_GenericListResponseSeasonResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/virtual/v1/seasons/list/actual:
    get:
      tags:
      - Season Controller
      summary: Get actual seasons
      operationId: getActual
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_15_GenericListResponseSeasonResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/virtual/v1/events/list/by-round/{round-id}:
    get:
      tags:
      - Virtual Controller
      summary: Get virtual events by round
      operationId: getByRoundId_1
      parameters:
      - name: round-id
        in: path
        required: true
        schema:
          type: string
          example: '1'
        example: 1
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_15_GenericListResponseEventWithPricesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/v2/search:
    post:
      tags:
      - Search controller (V2)
      summary: Search for events and competitions
      operationId: search
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_16_SearchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_SearchResponseV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/v2/prices/list:
    post:
      tags:
      - PriceController (V2)
      summary: Get a list of prices by selections IDs
      operationId: getPricesBySelections
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_16_SelectionListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_GenericListResponseOddsSelectionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/v2/prices/full/list:
    post:
      tags:
      - PriceController (V2)
      summary: Get a list of events by selections IDs
      operationId: getPricesWithEventInfoBySelections
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_16_SelectionListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_GenericListResponseEventSelectionTupleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/v2/booking-number:
    post:
      tags:
      - Booking Number Controller (V2)
      summary: Creates new Booking-Number by list of selection ids (V2)
      operationId: createBookingNumberV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_16_SelectionListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_BookingCodeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/v1/video-stream/sportradar/authorize:
    post:
      tags:
      - Perform authorization controller (V1)
      operationId: getJwtToken
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_docs_16_JWTResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/v1/video-stream/perform/authorize:
    post:
      tags:
      - Perform authorization controller (V1)
      summary: 'Authorize user to view '
      operationId: getActiveRegionsByCategoryId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_16_PerformAuthorizationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_VideoStreamResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/v1/search:
    post:
      tags:
      - Search controller (V1)
      summary: Search for events and competitions
      operationId: search_1
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_16_SearchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_SearchResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/prices/list:
    post:
      tags:
      - PriceController (V1)
      summary: Get a list of prices by selections IDs
      operationId: getPrices
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_16_SelectionListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_GenericListResponsePriceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/prices/full/list:
    post:
      tags:
      - PriceController (V1)
      summary: Get a list of events by selections IDs
      operationId: getAllBySelectionsIds
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_16_SelectionListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_GenericListResponseEventSelectionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/events/upcoming/lists:
    get:
      tags:
      - Upcoming Controller
      summary: Get upcoming events based on request params
      description: 'Note: All request params is array, size of arrays should be same,
        default take is 4'
      operationId: getFiltered
      parameters:
      - name: q
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/api_docs_16_FilteredUpcomingEventsBatchRequest'
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_FilteredUpcomingEventsBatchResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
    post:
      tags:
      - Upcoming Controller
      summary: Get upcoming events based on request with filters
      operationId: postFiltered
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_16_FilteredUpcomingEventsBatchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_FilteredUpcomingEventsBatchResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/events/short/list/by-query:
    post:
      tags:
      - Events Controller (V1)
      summary: Get filtered upcoming events short response  (e.g. for Mobile)
      operationId: listOfShortEvents
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_16_ShortFilteredUpcomingEventsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_docs_16_GenericListResponseShortEventResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/events/list/by-query:
    get:
      tags:
      - Events Controller (V1)
      summary: Get a event with prices by query request
      description: Check EventsListRequest schema for more details
      operationId: getListOfEventsByCriteria
      parameters:
      - name: q
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/api_docs_16_EventsListRequest'
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_EventsListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
    post:
      tags:
      - Events Controller (V1)
      summary: Get a event with prices by query request
      description: In this endpoint will be able to build a customized query to list
        events with prices
      operationId: postListOfEventsByCriteria
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_16_EventsListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_docs_16_EventsListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/events/list/by-ids:
    post:
      tags:
      - Events Controller (V1)
      summary: Get events with prices by IDs
      operationId: getEventsById
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_16_EventsByIdsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_docs_16_GenericListResponseEventWithPricesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/booking-number:
    post:
      tags:
      - Booking Number Controller (V1)
      summary: Creates new Booking-Number by list of selection ids
      operationId: createBookingNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_16_SelectionListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_BookingCodeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v3/events/{event-id}:
    get:
      tags:
      - Events Controller (V3)
      summary: Get a event with prices by ID
      operationId: getEventById
      parameters:
      - name: event-id
        in: path
        required: true
        schema:
          type: string
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/v3/events/lists/by-queries:
    get:
      tags:
      - Events Controller (V3)
      summary: Get a event with prices by queries request
      operationId: getListOfEventsByCriteria_1
      parameters:
      - name: q
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/api_docs_16_EventsBatchRequest'
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_docs_16_EventsBatchResponseV3'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/v3/categories/list:
    get:
      tags:
      - Categories controller (V3)
      summary: Get all category & regions for requested data
      operationId: getAllCategories
      parameters:
      - name: q
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/api_docs_16_CategoriesRequest'
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_AllCategoriesResponseV3'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/v3/categories/list/{category-id}:
    get:
      tags:
      - Categories controller (V3)
      summary: Get all category & regions for requested data
      operationId: getAllCategoriesAndOnlyOneWithRegions
      parameters:
      - name: category-id
        in: path
        required: true
        schema:
          type: string
          example: '2'
          maxLength: 36
          minLength: 1
        example: 2
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_AllCategoriesResponseV3'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/v2/search/popular:
    get:
      tags:
      - Search controller (V2)
      summary: Search for events and competitions
      operationId: popular
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_SearchResponseV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/v2/events/{event-id}:
    get:
      tags:
      - Events Controller (V2)
      summary: Get a event with prices by ID
      operationId: getEventById_1
      parameters:
      - name: event-id
        in: path
        required: true
        schema:
          type: string
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v2/events/lists/by-queries:
    get:
      tags:
      - Events Controller (V2)
      summary: Get a event with prices by queries request
      operationId: getListOfEventsByCriteria_2
      parameters:
      - name: q
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/api_docs_16_EventsBatchRequest'
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/api_docs_16_EventsBatchResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v2/categories/list:
    get:
      tags:
      - Categories controller (V2)
      summary: Get all category & regions for requested data
      operationId: getAllCategories_1
      parameters:
      - name: q
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/api_docs_16_CategoriesRequest'
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_AllCategoriesResponseV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v2/categories/list/{category-id}:
    get:
      tags:
      - Categories controller (V2)
      summary: Get all category & regions for requested data
      operationId: getAllCategoriesAndOnlyOneWithRegions_1
      parameters:
      - name: category-id
        in: path
        required: true
        schema:
          type: string
          example: '2'
          maxLength: 36
          minLength: 1
        example: 2
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_AllCategoriesResponseV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v2/booking-number/{booking-code}:
    get:
      tags:
      - Booking Number Controller (V2)
      summary: Get booking number selection details
      description: Gets booking number selections by booking code and returns selection
        details
      operationId: getBookingNumberSelectionsV2
      parameters:
      - name: booking-code
        in: path
        required: true
        schema:
          type: string
          example: 1A11A1A
        example: 1A11A1A
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_GenericListResponseEventSelectionTupleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/v1/scoreboards/list/all:
    get:
      tags:
      - Scoreboard controller (V1)
      summary: Get all Scoreboards
      operationId: getAll
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_GenericListResponseScoreboardWithEventResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/results/list/all:
    get:
      tags:
      - Results controller (V1)
      summary: Get all Results
      operationId: getAll_1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_GenericListResponseResultsWithEventResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/sportsbook/v1/events/{event-id}:
    get:
      tags:
      - Events Controller (V1)
      summary: Get a event with prices by ID
      operationId: getEventById_2
      parameters:
      - name: event-id
        in: path
        required: true
        schema:
          type: string
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/events/upcoming/pages/queries:
    get:
      tags:
      - Upcoming Controller
      summary: Get upcoming events based on request params
      description: 'Note: All request params is array, size of arrays should be same,
        default take is 4'
      operationId: getFiltered_1
      parameters:
      - name: q
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/api_docs_16_FilteredUpcomingEventsBatchRequest'
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_FilteredUpcomingEventsBatchResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/events/upcoming/pages/lists:
    get:
      tags:
      - Upcoming Controller
      summary: Get upcoming events based on request params
      description: 'Note: All request params is array, size of arrays should be same,
        default take is 4'
      operationId: getFiltered_2
      parameters:
      - name: q
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/api_docs_16_FilteredUpcomingEventsBatchRequest'
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_FilteredUpcomingEventsBatchResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/events/live/all:
    get:
      tags:
      - Live Controller
      summary: Get live events with prices
      operationId: filtered
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_FilteredUpcomingEventsBatchResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/events/list/pages/query:
    get:
      tags:
      - Events Controller (V1)
      summary: Get a event with prices by query request
      description: Check EventsListRequest schema for more details
      operationId: getListOfEventsByCriteria_3
      parameters:
      - name: q
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/api_docs_16_EventsListRequest'
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_EventsListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/events/list/pages/by-query:
    get:
      tags:
      - Events Controller (V1)
      summary: Get a event with prices by query request
      description: Check EventsListRequest schema for more details
      operationId: getListOfEventsByCriteria_4
      parameters:
      - name: q
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/api_docs_16_EventsListRequest'
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_EventsListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/categories/{category-id}:
    get:
      tags:
      - Categories controller (V1)
      summary: Get active regions with nested competitions for category ID
      operationId: getActiveRegionsByCategoryId_1
      parameters:
      - name: category-id
        in: path
        required: true
        schema:
          type: string
          example: '2'
        example: 2
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_CategoryActiveRegionsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/categories/list:
    get:
      tags:
      - Categories controller (V1)
      summary: Get all categories
      operationId: getAllCategories_2
      parameters:
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_GenericListResponseCategoryEventCount'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/categories/aggregated/{category-id}:
    get:
      tags:
      - Categories controller (V1)
      summary: Get aggregated category response (e.g. for Opera Mini)
      operationId: getAggregatedCategoryResponse
      parameters:
      - name: category-id
        in: path
        required: true
        schema:
          type: string
          example: '2'
        example: 2
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_AggregatedCategoryResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/sportsbook/v1/booking-number/{booking-code}:
    get:
      tags:
      - Booking Number Controller (V1)
      summary: Get booking number selection details
      description: Gets booking number selections by booking code and returns selection
        details
      operationId: getBookingNumberSelections
      parameters:
      - name: booking-code
        in: path
        required: true
        schema:
          type: string
          example: 1A11A1A
        example: 1A11A1A
      - name: x-pawa-language
        in: header
        required: false
        schema:
          type: string
          default: en
          example: en
        example: en
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_16_BookingNumberResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/user/v1/self-exclude:
    put:
      tags:
      - User Account Management
      summary: Self excludes user. User will be logged out and wont be able to log
        in.
      operationId: selfExclude
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_18_SelfExcludeRequest'
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/user/v3/verify-and-authenticate:
    post:
      tags:
      - User Account Management
      summary: Completes user's phone number verification by code send in message
      operationId: verifyAndAuthenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_18_VerifyAndAuthenticateRequest'
        required: true
      responses:
        '200':
          description: Successful Operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_AuthenticationResponseV3'
        '400':
          description: Endpoint will limit requests for user for some time in case
            of too many attempts.
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/user/v3/signup-and-authenticate:
    post:
      tags:
      - Authentication
      summary: Creates and automatically logs in user in the system.
      description: 'Create user with specified phone number and password.

        If sign up is successful and verification isn''t required - response will
        return status code 201 with header `x-pawa-token` and `userUuid` in response
        body.

        If user already exists in system and entered valid password - system will
        automatically login user and return the same response as successful sign up.


        If account verification is required - response will return status code 400
        and error ACCOUNT_NOT_VERIFIED.

        To verify user account `/api/user/v3/request-verification-code` endpoint must
        be used with user phone nuber and desired OTP delivery method.

        Then complete verification here `/api/user/v3/verify-and-authenticate` by
        entering OTP code. If new code is accepted then endpoint return the same response
        as successful sign up.


        To retrieve OTP - user''s last sms could be retrieved on develop `https://api.develop.qa.verekuu.com/sms-for-user/{phoneNumber}`
        and on test `https://api.test.qa.verekuu.com/sms-for-user/{phoneNumber}`.
        E.g. - `curl https://api.test.qa.verekuu.com/sms-for-user/+2348167467552`

        '
      operationId: signUpAndAuthenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_18_SignUpRequestV2'
        required: true
      responses:
        '201':
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_AuthenticationResponseV3'
        '400':
          description: Mandatory fields are missing, validation failure or phone number
            verification is required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/user/v3/request-verification-code:
    post:
      tags:
      - User Account Management
      summary: User requests his verification code from list of available methods.
        The message with code will be send by selected method
      operationId: requestVerificationCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_18_PasswordRequestV3'
        required: true
      responses:
        '200':
          description: Successful Operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_LimitsCollectionResponse'
        '400':
          description: Endpoint will limit requests for user for some time in case
            of too many attempts.
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/user/v3/password/verify-otp:
    post:
      tags:
      - User Account Management
      summary: Checks received OTP code for validity
      operationId: verifyOtpCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_18_VerifyOtpRequest'
        required: true
      responses:
        '200':
          description: Successful Operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_VerifyOtpResponse'
        '400':
          description: Endpoint will limit requests for user for some time in case
            of too many attempts.
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/user/v3/password/update-and-authenticate:
    post:
      tags:
      - User Account Management
      summary: Authenticates user based on provided OTP code. Endpoint will limit
        requests for user.
      operationId: updatePasswordAndAuthenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_18_SetPasswordRequestV3'
        required: true
      responses:
        '200':
          description: Successful Operation. x-pawa-token will be set to cookie. This
            token should be provided for all further requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_AuthenticationResponseV3'
        '400':
          description: Endpoint will limit requests for user for some time in case
            of too many attempts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/user/v3/password/request-otp:
    post:
      tags:
      - User Account Management
      summary: User requests it's password to be reset. One-time password will be
        send according to selected method
      operationId: requestOtpCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_18_PasswordRequestV3'
        required: true
      responses:
        '200':
          description: Successful Operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_LimitsCollectionResponse'
        '400':
          description: Endpoint will limit requests for user for some time in case
            of too many attempts.
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/user/v3/authenticate:
    post:
      tags:
      - Authentication
      summary: Authenticates user based on provided credentials. Endpoint will limit
        requests for user for 60 minutes in case of 10 unsuccessful attempts.
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_18_AuthenticationRequest'
        required: true
      responses:
        '200':
          description: Successful Operation. x-pawa-token will be set to cookie. This
            token should be provided for all further requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_AuthenticationResponseV3'
        '400':
          description: Requests suspended for 60 minutes for the user because of 10
            unsuccessful attempts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/user/v1/switch:
    post:
      tags:
      - Connected Accounts Management
      summary: Authenticates connected user based on the token of existing user. Endpoint
        will limit requests for user for 60 minutes in case of 10 unsuccessful attempts.
      operationId: authenticate_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_18_ConnectedUserAuthenticationRequest'
        required: true
      responses:
        '200':
          description: Successful Operation. x-pawa-token will be set to cookie. This
            token should be provided for all further requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_AuthenticationResponse'
        '400':
          description: Requests suspended for 60 minutes for the user because of 10
            unsuccessful attempts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/user/v1/password:
    post:
      tags:
      - User Account Management
      summary: User change password. In password update form
      operationId: changePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_18_UserChangePasswordRequest'
        required: true
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/user/v1/connection:
    post:
      tags:
      - Connected Accounts Management
      summary: Create connection to other user
      operationId: createUnverifiedConnections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_18_UserConnectionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_ConnectedUsersResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/user/v1/connection/verify:
    post:
      tags:
      - Connected Accounts Management
      summary: Verify connection to other user
      operationId: createVerifiedConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_18_UserConnectionVerificationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_ConnectedUsersResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
  /api/user/v1/authenticate:
    post:
      tags:
      - Authentication
      summary: Authenticates user based on provided credentials. Endpoint will limit
        requests for user for 60 minutes in case of 10 unsuccessful attempts.
      operationId: authenticate_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/api_docs_18_AuthenticationRequest'
        required: true
      responses:
        '200':
          description: Successful Operation. x-pawa-token will be set to cookie. This
            token should be provided for all further requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_AuthenticationResponse'
        '400':
          description: Requests suspended for 60 minutes for the user because of 10
            unsuccessful attempts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_18_ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                  uuid:
                    type: string
                  params:
                    type: array
                    items:
                      type: string
                  payload:
                    type: object
                    additionalProperties:
                      type: object
      deprecated: true
  /api/virtuals/standing/{seasonId}:
    get:
      tags:
      - StandingController
      summary: Get standing for a requested season id
      operationId: getStanding
      parameters:
      - name: seasonId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: arg1
        in: query
        required: true
        schema:
          type: string
          enum:
          - EN
          - FR
      responses:
        '400':
          description: Season not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_19_ErrorResponse'
        '200':
          description: Returns season standings for a requested season id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_19_Standing'
  /api/virtuals/standing/matchUps/{seasonId}:
    get:
      tags:
      - StandingController
      summary: Get match-ups for a requested season id
      operationId: getMatchUps
      parameters:
      - name: seasonId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: arg1
        in: query
        required: true
        schema:
          type: string
          enum:
          - EN
          - FR
      responses:
        '400':
          description: Season not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_19_ErrorResponse'
        '200':
          description: Returns match-ups(teams, rounds, leagues) for a requested season
            id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_19_MatchUps'
  /api/virtuals/standing/matchUps/{seasonId}/{roundId}:
    get:
      tags:
      - StandingController
      summary: Get match-ups for a requested season id and game-round id
      operationId: getMatchUps_1
      parameters:
      - name: seasonId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: roundId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: arg2
        in: query
        required: true
        schema:
          type: string
          enum:
          - EN
          - FR
      responses:
        '400':
          description: Season with round not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_19_ErrorResponse'
        '200':
          description: Returns match-ups(teams, rounds, leagues) for a requested season
            id and game-round id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_19_MatchUps'
  /api/virtuals/in-play:
    get:
      tags:
      - InPlayController
      summary: Get current inplay game-round
      operationId: getCurrent
      parameters:
      - name: arg0
        in: query
        required: true
        schema:
          type: string
          enum:
          - EN
          - FR
      responses:
        '200':
          description: Returns current inplay game-round
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_19_InPlay'
        '400':
          description: Inplay game round not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_19_ErrorResponse'
  /api/virtuals/in-play/{gameRoundId}:
    get:
      tags:
      - InPlayController
      summary: Get current inplay game-round for a requested game-round id
      operationId: getGameRound
      parameters:
      - name: gameRoundId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: arg1
        in: query
        required: true
        schema:
          type: string
          enum:
          - EN
          - FR
      responses:
        '400':
          description: Game round not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_19_ErrorResponse'
        '200':
          description: Returns current inplay game-round for a requested game-round
            id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_19_InPlay'
  /api/virtuals/front-page:
    get:
      tags:
      - FrontPageController
      summary: Generate current time front-page of seasons and game rounds
      operationId: getFrontPage
      responses:
        '200':
          description: Returns front page with seasons and game rounds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api_docs_19_FrontPage'
components:
  schemas:
    api_docs_UserSessionResponse:
      type: object
      properties:
        expiration:
          type: string
    api_docs_2_PayoutRequest:
      type: object
      properties:
        betslipId:
          type: integer
          format: int64
    api_docs_2_ErrorResponse:
      type: object
      properties:
        error:
          type: string
        uuid:
          type: string
        params:
          type: array
          items:
            type: string
        payload:
          type: object
          additionalProperties:
            type: object
    api_docs_2_OfferResponse:
      type: object
      properties:
        expire:
          type: string
          format: date-time
        offerId:
          type: string
        payout:
          $ref: '#/components/schemas/api_docs_2_PayoutResponse'
    api_docs_2_PayoutResponse:
      type: object
      properties:
        gross:
          type: number
        net:
          type: number
        tax:
          type: number
        whtCompensation:
          $ref: '#/components/schemas/api_docs_2_TaxCompensation'
    api_docs_2_TaxCompensation:
      type: object
      properties:
        net:
          type: number
        gross:
          type: number
        tax:
          type: number
    api_docs_2_ConfirmRequest:
      type: object
      properties:
        offerId:
          type: string
    api_docs_2_OfferStatusResponse:
      type: object
      properties:
        confirmed:
          type: boolean
        statusId:
          type: string
        pollingTimeoutSeconds:
          type: integer
          format: int64
    api_docs_2_CashoutAvailabilityDto:
      type: object
      properties:
        available:
          type: boolean
        liveDelaySeconds:
          type: integer
          format: int32
        inPlayOddsCache:
          type: integer
          format: int32
        preMatchOddsCache:
          type: integer
          format: int32
        pollingEnabled:
          type: boolean
        inPlayPollingSeconds:
          type: integer
          format: int32
        inPlayRequestLimit:
          type: integer
          format: int32
        preMatchPollingSeconds:
          type: integer
          format: int32
        preMatchRequestLimit:
          type: integer
          format: int32
    api_docs_2_CashoutConfigurationDto:
      type: object
      properties:
        fixedMargin:
          type: number
          format: double
        marginReAddedLengthWin:
          type: number
          format: double
        extraWinMarginMultiplier:
          type: number
          format: double
        polyDecreaseRateLostBet:
          type: number
          format: double
        maximumCombinationsToCalculate:
          type: integer
          format: int32
        cancellationOfferedMinutes:
          type: integer
          format: int32
        cancellationOfferedMaxRelativeProbabilityChange:
          type: number
          format: double
        logProbabilityCashout:
          type: boolean
        useProbabilityCashout:
          type: boolean
        maxAllowedChangeForConfirmation:
          type: number
          format: double
        offerValiditySeconds:
          type: integer
          format: int32
        minimumOffer:
          type: number
        cashoutAvailability:
          $ref: '#/components/schemas/api_docs_2_CashoutAvailabilityDto'
        allowPreMatchProfit:
          type: boolean
        brand:
          type: string
    api_docs_2_AdminInfo:
      type: object
      properties:
        adminUuid:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
    api_docs_2_ListResponseCashoutConfigurationDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_2_CashoutConfigurationDto'
        total:
          type: integer
          format: int32
    api_docs_2_ConfigurationAuditResponse:
      type: object
      properties:
        revisionDto:
          $ref: '#/components/schemas/api_docs_2_RevisionDto'
        fixedMargin:
          type: string
        marginReAddedLengthWin:
          type: string
        extraWinMarginMultiplier:
          type: string
        polyDecreaseRateLostBet:
          type: string
        maximumCombinationsToCalculate:
          type: string
        cancellationOfferedMinutes:
          type: string
        cancellationOfferedMaxRelativeProbabilityChange:
          type: string
        logProbabilityCashout:
          type: string
        useProbabilityCashout:
          type: string
        allowPreMatchProfit:
          type: string
        maxAllowedChangeForConfirmation:
          type: string
        offerValiditySeconds:
          type: string
        minimumOffer:
          type: string
    api_docs_2_ListResponseConfigurationAuditResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_2_ConfigurationAuditResponse'
        total:
          type: integer
          format: int32
    api_docs_2_RevisionDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
          - ADD
          - MOD
        brand:
          type: string
        timestamp:
          type: string
          format: date-time
        userUuid:
          type: string
          format: uuid
        changes:
          type: array
          items:
            type: string
    api_docs_2_AvailabilityAuditResponse:
      type: object
      properties:
        revisionDto:
          $ref: '#/components/schemas/api_docs_2_RevisionDto'
        available:
          type: string
        liveDelaySeconds:
          type: string
        inPlayOddsCache:
          type: string
        preMatchOddsCache:
          type: string
        pollingEnabled:
          type: string
        inPlayPollingSeconds:
          type: string
        inPlayRequestLimit:
          type: string
        preMatchPollingSeconds:
          type: string
        preMatchRequestLimit:
          type: string
    api_docs_2_ListResponseAvailabilityAuditResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_2_AvailabilityAuditResponse'
        total:
          type: integer
          format: int32
    api_docs_2_CashoutLogDto:
      type: object
      properties:
        betslipId:
          type: string
        offerId:
          type: string
        offerErrorType:
          type: string
        createdAt:
          type: string
          format: date-time
        offerPayoutNet:
          type: number
        events:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_2_EventDetailsDto'
    api_docs_2_EventDetailsDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    api_docs_2_ListResponseCashoutLogDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_2_CashoutLogDto'
        total:
          type: integer
          format: int32
    api_docs_3_BrandPreferenceRequest:
      type: object
      properties:
        preferences:
          type: object
          additionalProperties:
            type: object
          description: Any JSON object is valid for brand preferences
      required:
      - preferences
    api_docs_3_BrandDetails:
      type: object
      properties:
        rootDomain:
          type: string
        isoCountryCode:
          type: string
          maxLength: 2
          minLength: 2
        locale:
          type: array
          description: Set of available locales for brand in "en-US" format. NB!!
            first value will be set as default locale for this brand
          items:
            type: string
            pattern: '[a-z]{2}-[A-Z]{2}'
        currency:
          type: array
          description: Set of available currencies for brand in ISO-4217 code format
            (e.g. USD, UGX). NB!! first value will be set as default currency for
            this brand
          items:
            type: string
            pattern: '[A-Z]{3}'
      required:
      - currency
      - isoCountryCode
      - locale
      - rootDomain
    api_docs_3_UpdateBrandRequest:
      type: object
      properties:
        media:
          type: object
          additionalProperties:
            type: string
        details:
          $ref: '#/components/schemas/api_docs_3_BrandDetails'
        active:
          type: boolean
        multiNumbersSupported:
          type: boolean
    api_docs_3_UpdateLandingPageRequest:
      type: object
      properties:
        active:
          type: boolean
    api_docs_3_CreateBrandRequest:
      type: object
      properties:
        brand:
          type: string
          example: bet247
          pattern: ^([a-zA-Z0-9]+)$
        identifier:
          type: string
          example: bit42-antarctica
          pattern: ^([a-z0-9]+)-([a-z]+)$
        launchDate:
          type: string
          format: date-time
        media:
          type: object
          additionalProperties:
            type: string
        multiNumbersSupported:
          type: boolean
        details:
          $ref: '#/components/schemas/api_docs_3_BrandDetails'
      required:
      - brand
      - identifier
      - launchDate
    api_docs_3_CountryResponse:
      type: object
      properties:
        brandIdentifier:
          type: string
        countryIso2Code:
          type: string
        rootDomain:
          type: string
        landingPageActive:
          type: boolean
    api_docs_3_BrandResponse:
      type: object
      properties:
        identifier:
          type: string
        brand:
          type: string
        launchDate:
          type: string
          format: date-time
        media:
          type: object
          additionalProperties:
            type: string
        preference:
          type: object
          additionalProperties:
            type: object
        details:
          $ref: '#/components/schemas/api_docs_3_BrandDetails'
        active:
          type: boolean
        landingPageActive:
          type: boolean
        multiNumbersSupported:
          type: boolean
    api_docs_3_BrandsResponse:
      type: object
      properties:
        brands:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_3_BrandResponse'
    api_docs_3_LanguageResponse:
      type: object
      properties:
        brandIdentifier:
          type: string
        languages:
          type: array
          items:
            type: string
    api_docs_3_ChangeRecord:
      type: object
      properties:
        changeType:
          type: string
        timestamp:
          type: string
          format: date-time
        propertyName:
          type: string
        left:
          type: object
        right:
          type: object
        author:
          type: string
    api_docs_3_ListResponseLanguageResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_3_LanguageResponse'
    api_docs_4_MarketTypeRequest:
      type: object
      properties:
        includeSelections:
          type: boolean
        includeCategories:
          type: boolean
    api_docs_4_ErrorResponse:
      type: object
      properties:
        error:
          type: string
        uuid:
          type: string
        params:
          type: array
          items:
            type: string
        payload:
          type: object
          additionalProperties:
            type: object
    api_docs_4_CategoryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    api_docs_4_MarketGroup:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    api_docs_4_MarketType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        fullName:
          type: string
        groupedName:
          type: string
        slug:
          type: string
        group:
          $ref: '#/components/schemas/api_docs_4_MarketGroup'
        period:
          $ref: '#/components/schemas/api_docs_4_Period'
        properties:
          $ref: '#/components/schemas/api_docs_4_MarketTypeProperties'
    api_docs_4_MarketTypeProperties:
      type: object
      properties:
        numWinners:
          type: integer
          format: int32
        expectAllSelections:
          type: boolean
        handicapFormat:
          type: string
        expectNoFilteredSelections:
          type: boolean
        participantPosition:
          type: integer
          format: int32
        hasNonSelectionTypes:
          type: boolean
        active:
          type: boolean
        expectHandicapProposition:
          type: boolean
    api_docs_4_MarketTypeResponse:
      type: object
      properties:
        marketType:
          $ref: '#/components/schemas/api_docs_4_MarketType'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_4_CategoryResponse'
        selectionTypes:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_4_SelectionType'
    api_docs_4_Period:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    api_docs_4_SelectionType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        position:
          type: integer
          format: int32
    api_docs_4_MarketTypeListRequest:
      type: object
      properties:
        query:
          type: object
          additionalProperties:
            type: object
        skip:
          type: integer
          format: int32
          minimum: 0
        take:
          type: integer
          format: int32
          maximum: 2147483647
          minimum: 0
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_4_SortParameter'
      required:
      - query
    api_docs_4_SortParameter:
      type: object
      properties:
        fieldName:
          type: string
        direction:
          type: string
    api_docs_4_GenericListResponseMarketTypeResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_4_MarketTypeResponse'
        totalCount:
          type: integer
          format: int64
    api_docs_4_GetByCategoryAndMarketGroupIdRequest:
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        marketGroupId:
          type: integer
          format: int32
    api_docs_4_GenericListResponseMarketType:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_4_MarketType'
        totalCount:
          type: integer
          format: int64
    api_docs_4_GetByIdsRequest:
      type: object
      properties:
        marketTypeIds:
          type: array
          items:
            type: integer
            format: int32
    api_docs_4_UpdateMarketTypeRequest:
      type: object
      properties:
        active:
          type: boolean
    api_docs_4_GenericListResponsePeriodResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_4_PeriodResponse'
        totalCount:
          type: integer
          format: int64
    api_docs_4_PeriodResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        slug:
          type: string
    api_docs_4_GenericListResponseMarketGroupResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_4_MarketGroupResponse'
        totalCount:
          type: integer
          format: int64
    api_docs_4_MarketGroupResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    api_docs_4_GenericListResponseCategoryResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_4_CategoryResponse'
        totalCount:
          type: integer
          format: int64
    api_docs_5_IdRequest:
      type: object
      properties:
        id:
          type: string
          description: Betslip ID
          example: 1
    api_docs_5_ErrorResponse:
      type: object
      properties:
        error:
          type: string
        uuid:
          type: string
        params:
          type: array
          items:
            type: string
        payload:
          type: object
          additionalProperties:
            type: object
    api_docs_5_BooleanResponse:
      type: object
      properties:
        value:
          type: boolean
    api_docs_5_TwoUpTaskIdResponse:
      type: object
      properties:
        taskId:
          type: string
    api_docs_5_TwoUpCheckTaskStatusRequest:
      type: object
      properties:
        taskId:
          type: string
    api_docs_5_TwoUpTaskStatusResponse:
      type: object
      properties:
        status:
          type: string
    api_docs_5_PricingStatsInfoRequest:
      type: object
      properties:
        selectionIds:
          type: array
          items:
            type: integer
            format: int32
    api_docs_5_PricingInfoStatsResponse:
      type: object
      properties:
        selectionPricingInfoStats:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_5_SelectionPricingInfo'
    api_docs_5_SelectionPricingInfo:
      type: object
      properties:
        selectionId:
          type: integer
          format: int32
        averagePrice:
          type: number
          format: double
        outcome:
          type: string
    api_docs_5_PendingBetslipRequest:
      type: object
      properties:
        events:
          type: array
          items:
            type: integer
            format: int64
        brandIdentifier:
          type: string
    api_docs_5_EventPendingDto:
      type: object
      properties:
        eventId:
          type: integer
          format: int64
        pendingCount:
          type: integer
          format: int64
    api_docs_5_PendingBetslipResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_5_EventPendingDto'
    api_docs_5_BetslipsByEventRequest:
      type: object
      properties:
        eventId:
          type: integer
          format: int32
        allJurisdictions:
          type: boolean
    api_docs_5_EventBetslipResponse:
      type: object
      properties:
        time:
          type: string
          format: date-time
        userUuid:
          type: string
        betslipId:
          type: integer
          format: int64
        betslipUuid:
          type: string
        position:
          type: string
        result:
          type: string
        outcome:
          type: string
        stake:
          type: number
        price:
          type: number
        win:
          type: number
        marketTypeName:
          type: string
        formattedMarketName:
          type: string
        live:
          type: boolean
        handicap:
          type: number
          format: double
        cancelled:
          type: boolean
        totalItems:
          type: integer
          format: int32
        currencyCode:
          type: string
        brand:
          type: string
    api_docs_5_GenericListResponseEventBetslipResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_5_EventBetslipResponse'
        total:
          type: integer
          format: int32
    api_docs_5_AdminBetslipRequest:
      type: object
      properties:
        userId:
          type: string
          description: User Id
          example: 1
        status:
          type: string
          description: Status
          example: PLACED
        offset:
          type: integer
          format: int32
          description: Offset
          example: 2
        maxResult:
          type: integer
          format: int32
          description: Max Result
          example: 10
    api_docs_5_AdminBetslipDetailsResponse:
      type: object
      properties:
        id:
          type: string
        uuid:
          type: string
          format: uuid
        placed:
          type: string
          format: date-time
        settled:
          type: string
          format: date-time
        amount:
          type: number
        stake:
          type: number
        status:
          type: string
          enum:
          - PENDING
          - CANCELLED
          - CASHOUT
          - LOST
          - WON
          - PENDING_CUT_PLUS
          - WIN_CUT_PLUS
        payout:
          $ref: '#/components/schemas/api_docs_5_PayoutDetails'
        settlementState:
          $ref: '#/components/schemas/api_docs_5_SettlementState'
        currencyCode:
          type: string
        deviceType:
          type: string
        selections:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_5_BetItemDetailOddsResponse'
        betslipType:
          type: string
          enum:
          - REAL
          - VIRTUAL
        virtualInfo:
          $ref: '#/components/schemas/api_docs_5_VirtualInfo'
        cashoutInfo:
          $ref: '#/components/schemas/api_docs_5_BetslipCashoutInfo'
        taxInfo:
          $ref: '#/components/schemas/api_docs_5_BetslipTaxInfo'
        cutPlusInfo:
          $ref: '#/components/schemas/api_docs_5_BetslipCutPlusInfo'
        archived:
          type: boolean
    api_docs_5_AdminBetslipResponse:
      type: object
      properties:
        details:
          $ref: '#/components/schemas/api_docs_5_AdminBetslipDetailsResponse'
        cancelledAt:
          type: string
          format: date-time
        cancelledBy:
          type: string
        approvedAt:
          type: string
          format: date-time
        approvedBy:
          type: string
    api_docs_5_BetItemDetailOddsResponse:
      type: object
      properties:
        itemId:
          type: integer
          format: int64
        status:
          type: string
        price:
          type: number
        wasInPlay:
          type: boolean
        resultText:
          type: string
        selection:
          $ref: '#/components/schemas/api_docs_5_Selection'
        cashoutable:
          type: boolean
        cancellationReason:
          type: string
        twoUp:
          type: boolean
    api_docs_5_BetslipCashoutInfo:
      type: object
      properties:
        cashoutable:
          type: boolean
        result:
          $ref: '#/components/schemas/api_docs_5_CashoutPayoutResponse'
    api_docs_5_BetslipCutPlusInfo:
      type: object
      properties:
        templateId:
          type: string
        activeCutCount:
          type: integer
          format: int32
        generatedCuts:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_5_GeneratedCut'
    api_docs_5_BetslipTaxInfo:
      type: object
      properties:
        amount:
          type: number
        stakeTax:
          type: number
        enabled:
          type: boolean
        stakeTaxEnabled:
          type: boolean
        percentage:
          type: number
        type:
          type: string
          enum:
          - NET
          - GROSS
          - WHT_NET
          - STAKE
          - WHT_GROSS
          - WHT_NET_TIERED
        whtOffset:
          type: boolean
        compensationType:
          type: string
        compensationAmount:
          type: number
        compensationAmountTax:
          type: number
    api_docs_5_BetslipTotalResponse:
      type: object
      properties:
        total:
          type: integer
          format: int32
        betslips:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_5_AdminBetslipResponse'
    api_docs_5_CashoutPayoutResponse:
      type: object
      properties:
        gross:
          type: number
        net:
          type: number
        tax:
          type: number
        whtCompensation:
          type: number
        whtCompensationTax:
          type: number
        cashoutType:
          type: string
    api_docs_5_GeneratedCut:
      type: object
      properties:
        miss:
          type: integer
          format: int32
        gross:
          type: number
        net:
          type: number
        tax:
          type: number
        grossCompensation:
          type: number
        netCompensation:
          type: number
        taxCompensation:
          type: number
        available:
          type: boolean
    api_docs_5_Handicap:
      type: object
      properties:
        value:
          type: string
        type:
          type: string
          enum:
          - NORMAL
          - ASIAN
          - EUROPEAN
        text:
          type: string
    api_docs_5_IdName:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    api_docs_5_Market:
      type: object
      properties:
        typeId:
          type: integer
          format: int64
        name:
          type: string
        groupName:
          type: string
        groupedName:
          type: string
        handicap:
          $ref: '#/components/schemas/api_docs_5_Handicap'
        displayName:
          type: string
    api_docs_5_PayoutDetails:
      type: object
      properties:
        payout:
          type: number
        grossPossibleWin:
          type: number
        netPossibleWin:
          type: number
        bonus:
          type: number
        bonusType:
          type: string
        oddsMultiplier:
          type: number
        multipliedOdds:
          type: number
        totalOdds:
          type: number
        netCompensation:
          type: number
    api_docs_5_Selection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        category:
          $ref: '#/components/schemas/api_docs_5_IdName'
        region:
          $ref: '#/components/schemas/api_docs_5_IdName'
        competition:
          $ref: '#/components/schemas/api_docs_5_IdName'
        event:
          $ref: '#/components/schemas/api_docs_5_IdName'
        market:
          $ref: '#/components/schemas/api_docs_5_Market'
        inPlay:
          type: boolean
        starts:
          type: string
          format: date-time
    api_docs_5_SettlementState:
      type: object
      properties:
        settled:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
        live:
          type: integer
          format: int32
    api_docs_5_VirtualInfo:
      type: object
      properties:
        seasonId:
          type: integer
          format: int64
        seasonName:
          type: string
        roundName:
          type: string
        roundId:
          type: integer
          format: int64
    api_docs_5_BetslipTransactionsRequest:
      type: object
      properties:
        brand:
          type: string
          description: Brand Identifier
          example: betpawa-uganda
        betslipId:
          type: integer
          format: int64
          description: Betslip Id
          example: 1
        userUuid:
          type: string
          description: User UUID
          example: 8247caf9-bbf6-4b8c-b964-db1a01fc49c5
    api_docs_5_BetslipTransactionsResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_5_TransactionResponse'
    api_docs_5_TransactionResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        currency:
          type: string
        change:
          type: number
        created:
          type: string
          format: date-time
        relatedId:
          type: string
        relatedType:
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
    api_docs_5_BetslipCancellationVerdictRequest:
      type: object
      properties:
        id:
          type: string
          description: Betslip ID
          example: 1
        verdictType:
          type: string
          description: Veredict Type
          enum:
          - APPROVED
          - DECLINED
          example: APPROVED
      required:
      - id
      - verdictType
    api_docs_5_AdminBetslipsIdListRequest:
      type: object
      properties:
        betslipIds:
          type: array
          items:
            type: integer
            format: int64
    api_docs_5_MatchingBetItemsRequest:
      type: object
      properties:
        eventId:
          type: integer
          format: int32
        placedFrom:
          type: string
          format: date-time
        placedTo:
          type: string
          format: date-time
        isLive:
          type: boolean
        betItemStatus:
          type: string
          enum:
          - INVALID_ENUM
          - PENDING
          - CANCELLED
          - LOSE
          - HALF_LOSE_HALF_BACK
          - STAKE_BACK
          - HALF_BACK_HALF_WIN
          - WIN
          - WIN_CUT_PLUS
          - REJECTED
        betslipStatuses:
          type: array
          items:
            type: string
            enum:
            - PENDING
            - CANCELLED
            - SETTLED
            - CASHOUT
            - PENDING_CUT_PLUS
        betslipIds:
          type: array
          items:
            type: integer
            format: int64
        betslipUuids:
          type: array
          items:
            type: string
        brand:
          type: string
    api_docs_5_StringResponse:
      type: object
      properties:
        value:
          type: string
    api_docs_5_RequestEnrichmentRequest:
      type: object
      properties:
        filteredRequestUuid:
          type: string
        selectionIds:
          type: array
          items:
            type: integer
            format: int64
    api_docs_5_BetItemStatsResponse:
      type: object
      properties:
        betslipCount:
          type: integer
          format: int32
        userCount:
          type: integer
          format: int32
        stake:
          type: number
        firstPlaced:
          type: string
          format: date-time
        lastPlaced:
          type: string
          format: date-time
    api_docs_5_EventStatisticsResponse:
      type: object
      properties:
        selectedStatistics:
          $ref: '#/components/schemas/api_docs_5_BetItemStatsResponse'
        totalStatistics:
          $ref: '#/components/schemas/api_docs_5_BetItemStatsResponse'
    api_docs_5_BetSettlementSelectionResponse:
      type: object
      properties:
        selectionId:
          type: integer
          format: int64
        betItemSettlementIds:
          type: array
          items:
            type: integer
            format: int64
        currentEventResult:
          type: string
        lastBetTimestamp:
          type: string
          format: date-time
        currentStatus:
          type: string
          enum:
          - INVALID_ENUM
          - PENDING
          - CANCELLED
          - LOSE
          - HALF_LOSE_HALF_BACK
          - STAKE_BACK
          - HALF_BACK_HALF_WIN
          - WIN
          - WIN_CUT_PLUS
          - REJECTED
        cancellationReason:
          type: string
    api_docs_5_EventResultingResponse:
      type: object
      properties:
        selectedSettlements:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_5_BetSettlementSelectionResponse'
    api_docs_5_AdminBetslipIdRequest:
      type: object
      properties:
        id:
          type: string
          description: Betslip Id
          example: 1
    api_docs_5_Language:
      type: object
      properties:
        languageCode:
          type: string
        country:
          type: string
        variant:
          type: string
    api_docs_5_UserBetslipDetailsResponse:
      type: object
      properties:
        id:
          type: string
        uuid:
          type: string
          format: uuid
        placed:
          type: string
          format: date-time
        settled:
          type: string
          format: date-time
        amount:
          type: number
        stake:
          type: number
        status:
          type: string
          enum:
          - PENDING
          - CANCELLED
          - CASHOUT
          - LOST
          - WON
          - PENDING_CUT_PLUS
          - WIN_CUT_PLUS
        payout:
          $ref: '#/components/schemas/api_docs_5_PayoutDetails'
        settlementState:
          $ref: '#/components/schemas/api_docs_5_SettlementState'
        currencyCode:
          type: string
        deviceType:
          type: string
        selections:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_5_BetItemDetailOddsResponse'
        betslipType:
          type: string
          enum:
          - REAL
          - VIRTUAL
        virtualInfo:
          $ref: '#/components/schemas/api_docs_5_VirtualInfo'
        cashoutInfo:
          $ref: '#/components/schemas/api_docs_5_BetslipCashoutInfo'
        taxInfo:
          $ref: '#/components/schemas/api_docs_5_BetslipTaxInfo'
        cutPlusInfo:
          $ref: '#/components/schemas/api_docs_5_BetslipCutPlusInfo'
    api_docs_5_UserBetslipsResponsePaged:
      type: object
      properties:
        betslips:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_5_UserBetslipDetailsResponse'
        hasMore:
          type: boolean
    api_docs_5_UserBetslipCountResponse:
      type: object
      properties:
        userBetslipCount:
          type: integer
          format: int64
    api_docs_5_SseEmitter:
      type: object
      properties:
        timeout:
          type: integer
          format: int64
    api_docs_5_UserUuidResponse:
      type: object
      properties:
        userUuid:
          type: string
    api_docs_5_UserStatisticsResponse:
      type: object
      properties:
        wonTotal:
          type: string
    api_docs_5_BetslipForCancelResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        uuid:
          type: string
          format: uuid
        clientPhone:
          type: string
        requestedCancelAdminUuid:
          type: string
        requestedCancelAdminName:
          type: string
        status:
          type: string
          enum:
          - PENDING
          - CANCELLED
          - SETTLED
          - CASHOUT
          - PENDING_CUT_PLUS
        requestTime:
          type: string
          format: date-time
    api_docs_5_GenericListResponseBetslipForCancelResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_5_BetslipForCancelResponse'
        total:
          type: integer
          format: int32
    api_docs_5_CancellationSummaryRecordInfo:
      type: object
      properties:
        cancellation:
          type: string
          format: date-time
        totalUniqueUsers:
          type: integer
          format: int64
        totalBetItems:
          type: integer
          format: int32
    api_docs_5_GenericListResponseCancellationSummaryRecordInfo:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_5_CancellationSummaryRecordInfo'
        total:
          type: integer
          format: int32
    api_docs_6_GameUpdateRequest:
      type: object
      properties:
        providerGameId:
          type: string
        lobbyName:
          type: string
        provider:
          type: string
        brandIdentifier:
          type: string
        position:
          type: integer
          format: int32
        enabled:
          type: boolean
      required:
      - brandIdentifier
      - enabled
      - position
      - provider
      - providerGameId
    api_docs_6_GameLauncherRequest:
      type: object
      properties:
        provider:
          type: string
        providerGameId:
          type: string
        lobbyUrl:
          type: string
        mode:
          type: string
          enum:
          - DEMO
          - REAL
      required:
      - lobbyUrl
      - provider
      - providerGameId
    api_docs_6_GameLauncherResponse:
      type: object
      properties:
        launchUrl:
          type: string
    api_docs_6_TopUpRequest:
      type: object
      properties:
        amount:
          type: number
    api_docs_6_BalanceResponse:
      type: object
      properties:
        balance:
          type: number
        currency:
          type: string
    api_docs_6_ListResponseBalanceResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_BalanceResponse'
    api_docs_6_TopUpTaxPreviewResponse:
      type: object
      properties:
        pawaChipsTopUp:
          type: number
        taxAmount:
          type: number
        taxPercentage:
          type: number
        topUpCurrency:
          type: string
    api_docs_6_GamesSortRequest:
      type: object
      properties:
        skip:
          type: integer
          format: int32
          default: '0'
          minimum: 0
        take:
          type: integer
          format: int32
          default: '50'
          maximum: 50
          minimum: 1
        sort:
          type: string
          description: Sort by field
          enum:
          - GAME_POSITION
          - GAME_NAME
        direction:
          type: string
          description: Sort direction
          enum:
          - ASC
          - DESC
    api_docs_6_GameCategoryResponse:
      type: object
      properties:
        categoryUuid:
          type: string
          format: uuid
        gamePosition:
          type: integer
          format: int32
    api_docs_6_GameMasterDataResponse:
      type: object
      properties:
        type:
          type: string
        jackpot:
          type: string
        reels:
          type: string
        betWays:
          type: string
        bonusBuy:
          type: boolean
        freeSpins:
          type: boolean
        scatterSymbols:
          type: boolean
        wilds:
          type: boolean
        theme1:
          type: string
        theme2:
          type: string
        theme3:
          type: string
        theme4:
          type: string
        volatility:
          type: string
        rtp:
          type: number
    api_docs_6_GameResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        lobbyName:
          type: string
          description: Alternative game name added manually
        position:
          type: integer
          format: int32
          description: Used for ordering game list
        provider:
          type: string
          description: 'In case of Alea additional fields will be present: softwareId
            and softwareName'
          example: WAZDAN, BETPAWA, ALEA ....
        providerGameId:
          type: string
        brandIdentifier:
          type: string
        enabled:
          type: boolean
        images:
          type: array
          description: Set of images uploaded via admin
          items:
            $ref: '#/components/schemas/api_docs_6_Image'
        categories:
          type: array
          description: Categories to which game belongs and its absolute position
          items:
            $ref: '#/components/schemas/api_docs_6_GameCategoryResponse'
          uniqueItems: true
        ribbonUuid:
          type: string
          format: uuid
        masterData:
          $ref: '#/components/schemas/api_docs_6_GameMasterDataResponse'
          description: Game master data
        thumbUrl:
          type: array
          description: Set of images provided by provider
          items:
            type: string
    api_docs_6_Image:
      type: object
      properties:
        url:
          type: string
        size:
          type: string
    api_docs_6_ListResponseGameResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_GameResponse'
    api_docs_6_ErrorResponse:
      type: object
      properties:
        error:
          type: string
        uuid:
          type: string
        params:
          type: array
          items:
            type: string
        payload:
          type: object
          additionalProperties:
            type: object
    api_docs_6_UploadImagesRequest:
      type: object
      properties:
        providerGameId:
          type: string
        gameProvider:
          type: string
        brands:
          type: array
          description: Set of brands for which this image is active.
          items:
            type: string
          uniqueItems: true
        imageSize:
          type: string
          enum:
          - SMALL
          - MEDIUM
          - LARGE
          - HOMEPAGE
      required:
      - brands
      - gameProvider
      - imageSize
      - providerGameId
    api_docs_6_ListResponseUploadImagesResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_UploadImagesResponse'
    api_docs_6_UploadImagesResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        imageUrl:
          type: string
    api_docs_6_TestSessionRequest:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        provider:
          type: string
        brandIdentifier:
          type: string
    api_docs_6_TestSessionResponse:
      type: object
      properties:
        sessionId:
          type: string
    api_docs_6_IntegrationSetupModificationRequest:
      type: object
      properties:
        name:
          type: string
        brandIdentifier:
          type: string
        enabled:
          type: boolean
        metadata:
          type: object
          additionalProperties:
            type: object
      required:
      - brandIdentifier
      - metadata
      - name
    api_docs_6_GameMasterDataRequest:
      type: object
      properties:
        language:
          type: string
        skip:
          type: integer
          format: int32
          minimum: 0
        take:
          type: integer
          format: int32
          maximum: 50
          minimum: 1
      required:
      - language
    api_docs_6_ListResponseWithTotalCountGameMasterDataResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_GameMasterDataResponse'
        totalCount:
          type: integer
          format: int64
    api_docs_6_SupplierUploadImageRequest:
      type: object
      properties:
        provider:
          type: string
        supplierExternalId:
          type: string
    api_docs_6_SupplierToggle:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        enabled:
          type: boolean
    api_docs_6_SupplierToggleRequest:
      type: object
      properties:
        toggles:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_SupplierToggle'
    api_docs_6_RibbonExchange:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: Should be filled when modifying existing ribbon
        name:
          type: string
          description: Unique name of the ribbon
        textColor:
          type: string
        backgroundColor:
          type: string
        translations:
          type: object
          additionalProperties:
            type: string
      required:
      - backgroundColor
      - name
      - textColor
      - translations
    api_docs_6_RibbonBulkAssign:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: Should be filled when modifying existing ribbon
        provider:
          type: string
          description: Game provider
        providerGameIds:
          type: array
          items:
            type: string
        brandIdentifiers:
          type: array
          items:
            type: string
        allBrands:
          type: boolean
      required:
      - provider
      - providerGameIds
    api_docs_6_GameImageSearchRequest:
      type: object
      properties:
        skip:
          type: integer
          format: int32
          default: '0'
          minimum: 0
        take:
          type: integer
          format: int32
          default: '50'
          maximum: 50
          minimum: 1
        query:
          $ref: '#/components/schemas/api_docs_6_Query'
    api_docs_6_Query:
      type: object
      properties:
        gameName:
          type: string
        gameProvider:
          type: string
        providerGameId:
          type: string
    api_docs_6_GameImageResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        gameName:
          type: string
        gameProvider:
          type: string
        providerGameId:
          type: string
        brands:
          type: array
          items:
            type: string
          uniqueItems: true
        url:
          type: string
        size:
          type: string
    api_docs_6_ListResponseGameImageResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_GameImageResponse'
    api_docs_6_GameCategoryRequest:
      type: object
      properties:
        name:
          type: string
        position:
          type: integer
          format: int32
        translations:
          type: object
          additionalProperties:
            type: string
          description: key = language, value = translation
        enabled:
          type: boolean
        hidden:
          type: boolean
      required:
      - name
      - translations
    api_docs_6_GameCategoryPositionRequest:
      type: object
      properties:
        gamePositions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_GamePosition'
    api_docs_6_GamePosition:
      type: object
      properties:
        gameId:
          type: integer
          format: int32
        position:
          type: integer
          format: int32
    api_docs_6_BrandEnabled:
      type: object
      properties:
        brandIdentifier:
          type: string
        enabled:
          type: boolean
    api_docs_6_BulkGameUpdateRequest:
      type: object
      properties:
        provider:
          type: string
        providerGameId:
          type: string
        brands:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_BrandEnabled'
        gamePosition:
          type: integer
          format: int32
        categories:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_CategoryPosition'
      required:
      - brands
      - provider
      - providerGameId
    api_docs_6_CategoryPosition:
      type: object
      properties:
        categoryUuid:
          type: string
          format: uuid
        position:
          type: integer
          format: int32
    api_docs_6_UpdateImageRequest:
      type: object
      properties:
        brands:
          type: array
          description: List of brands where image is enabled. Could be empty.
          items:
            type: string
          uniqueItems: true
    api_docs_6_CashInTaxPreviewResponse:
      type: object
      properties:
        pawaChips:
          type: number
        winnings:
          type: number
        taxPercentage:
          type: number
        taxAmount:
          type: number
        payout:
          type: number
        payoutCurrency:
          type: string
    api_docs_6_GameViewResponse:
      type: object
      properties:
        name:
          type: string
        providerGameId:
          type: string
        provider:
          type: string
          example: WAZDAN, BETPAWA ....
        position:
          type: integer
          format: int32
    api_docs_6_ListResponseGameViewResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_GameViewResponse'
    api_docs_6_GameEnabledResponse:
      type: object
      properties:
        brandIdentifier:
          type: string
        enabled:
          type: boolean
    api_docs_6_ListResponseGameEnabledResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_GameEnabledResponse'
    api_docs_6_AleaSetup:
      type: object
      properties:
        name:
          type: string
        brandIdentifier:
          type: string
        enabled:
          type: boolean
        casinoIds:
          type: array
          items:
            type: string
        environmentCredential:
          type: string
        secretApiKey:
          type: string
        url:
          type: string
        launchUrl:
          type: string
        environmentId:
          type: string
        gamesReady:
          type: boolean
      required:
      - casinoIds
      - environmentCredential
      - launchUrl
      - secretApiKey
      - url
    api_docs_6_BetpawaSetup:
      type: object
      properties:
        name:
          type: string
        brandIdentifier:
          type: string
        enabled:
          type: boolean
        gameUrl:
          type: string
      required:
      - gameUrl
    api_docs_6_EvolutionGamingSetup:
      type: object
      properties:
        name:
          type: string
        brandIdentifier:
          type: string
        enabled:
          type: boolean
        launchUrl:
          type: string
        operatorId:
          type: string
        authToken:
          type: string
        secretKey:
          type: string
      required:
      - authToken
      - launchUrl
      - operatorId
      - secretKey
    api_docs_6_IntegrationSetup:
      type: object
      anyOf:
      - $ref: '#/components/schemas/api_docs_6_AleaSetup'
      - $ref: '#/components/schemas/api_docs_6_BetpawaSetup'
      - $ref: '#/components/schemas/api_docs_6_WazdanSetup'
      - $ref: '#/components/schemas/api_docs_6_SmartSoftSetup'
      - $ref: '#/components/schemas/api_docs_6_SpribeSetup'
      - $ref: '#/components/schemas/api_docs_6_KironLiteSetup'
      - $ref: '#/components/schemas/api_docs_6_KironBetmanSetup'
      - $ref: '#/components/schemas/api_docs_6_JellySetup'
      - $ref: '#/components/schemas/api_docs_6_EvolutionGamingSetup'
      properties:
        name:
          type: string
        brandIdentifier:
          type: string
        enabled:
          type: boolean
    api_docs_6_JellySetup:
      type: object
      properties:
        name:
          type: string
        brandIdentifier:
          type: string
        enabled:
          type: boolean
        launchUrl:
          type: string
        siteId:
          type: string
      required:
      - launchUrl
      - siteId
    api_docs_6_KironBetmanSetup:
      type: object
      properties:
        name:
          type: string
        brandIdentifier:
          type: string
        enabled:
          type: boolean
        launchUrl:
          type: string
        operatorId:
          type: string
      required:
      - launchUrl
      - operatorId
    api_docs_6_KironLiteSetup:
      type: object
      properties:
        name:
          type: string
        brandIdentifier:
          type: string
        enabled:
          type: boolean
        appKey:
          type: string
        apiKey:
          type: string
        projectCode:
          type: string
        host:
          type: string
        gameListUrl:
          type: string
      required:
      - apiKey
      - appKey
      - host
      - projectCode
    api_docs_6_ListResponseIntegrationSetup:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_IntegrationSetup'
    api_docs_6_SmartSoftSetup:
      type: object
      properties:
        name:
          type: string
        brandIdentifier:
          type: string
        enabled:
          type: boolean
        secretKey:
          type: string
        gameUrl:
          type: string
        host:
          type: string
        portalName:
          type: string
      required:
      - gameUrl
      - host
      - portalName
      - secretKey
    api_docs_6_SpribeSetup:
      type: object
      properties:
        name:
          type: string
        brandIdentifier:
          type: string
        enabled:
          type: boolean
        gameUrl:
          type: string
        host:
          type: string
        operator:
          type: string
        secretKey:
          type: string
        gameListUrl:
          type: string
      required:
      - gameUrl
      - host
      - operator
      - secretKey
    api_docs_6_WazdanSetup:
      type: object
      properties:
        name:
          type: string
        brandIdentifier:
          type: string
        enabled:
          type: boolean
        proxyUrl:
          type: string
        host:
          type: string
        operator:
          type: string
        partnerCode:
          type: string
        taxSystem:
          type: integer
          format: int32
        license:
          type: string
        licenseBackend:
          type: string
        secretKey:
          type: string
      required:
      - host
      - license
      - licenseBackend
      - operator
      - partnerCode
      - proxyUrl
      - secretKey
    api_docs_6_IntegrationSetupStatistics:
      type: object
      properties:
        integrationSetup:
          $ref: '#/components/schemas/api_docs_6_IntegrationSetup'
        statistics:
          $ref: '#/components/schemas/api_docs_6_Statistics'
    api_docs_6_ListResponseIntegrationSetupStatistics:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_IntegrationSetupStatistics'
    api_docs_6_Statistics:
      type: object
      properties:
        games:
          type: integer
          format: int32
        updated:
          type: string
          format: date-time
        status:
          type: string
    api_docs_6_ListResponseString:
      type: object
      properties:
        result:
          type: array
          items:
            type: string
    api_docs_6_ListResponseSupplierResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_SupplierResponse'
    api_docs_6_SupplierResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        brandIdentifier:
          type: string
        provider:
          type: string
        externalId:
          type: string
        name:
          type: string
        enabled:
          type: boolean
        image:
          type: string
    api_docs_6_ListResponseRibbonExchange:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_RibbonExchange'
    api_docs_6_ListResponseGameCategoryResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_6_GameCategoryResponse'
    api_docs_6_RibbonBulkDelete:
      type: object
      properties:
        provider:
          type: string
          description: Game provider
        providerGameIds:
          type: array
          items:
            type: string
        brandIdentifiers:
          type: array
          items:
            type: string
        allBrands:
          type: boolean
      required:
      - provider
      - providerGameIds
    api_docs_7_ErrorResponse:
      type: object
      properties:
        error:
          type: string
        uuid:
          type: string
        params:
          type: array
          items:
            type: string
        payload:
          type: object
          additionalProperties:
            type: object
    api_docs_7_AgeRuleValueDto:
      type: object
      allOf:
      - $ref: '#/components/schemas/api_docs_7_RuleDto'
      - type: object
        properties:
          years:
            type: integer
            format: int32
    api_docs_7_CarriersBasedPhoneNumberRuleValueDto:
      type: object
      allOf:
      - $ref: '#/components/schemas/api_docs_7_RuleDto'
    api_docs_7_FieldDto:
      type: object
      properties:
        fieldName:
          type: string
          description: During validation process the caller sends validation request
            and it should contain this filed name for validation. Usually fields come
            as is from user interface
          example: firstName
        required:
          type: boolean
          description: Field can be optional if value is 'false' however fields mandatory
            by default
          example: false
        rules:
          type: array
          description: List of rules
          items:
            oneOf:
            - $ref: '#/components/schemas/api_docs_7_AgeRuleValueDto'
            - $ref: '#/components/schemas/api_docs_7_CarriersBasedPhoneNumberRuleValueDto'
            - $ref: '#/components/schemas/api_docs_7_OneOfRuleValueDto'
            - $ref: '#/components/schemas/api_docs_7_PasswordRuleValueDto'
            - $ref: '#/components/schemas/api_docs_7_UserIdentifierRuleValueDto'
      description: The validation fields to be used in the scope of this scenario
    api_docs_7_OneOfRuleValueDto:
      type: object
      allOf:
      - $ref: '#/components/schemas/api_docs_7_RuleDto'
      - type: object
        properties:
          oneOf:
            type: array
            items:
              type: string
    api_docs_7_PasswordRuleValueDto:
      type: object
      allOf:
      - $ref: '#/components/schemas/api_docs_7_RuleDto'
      - type: object
        properties:
          pattern:
            type: string
          minimumLength:
            type: integer
            format: int32
    api_docs_7_RuleDto:
      required:
      - validatorType
      type: object
      properties:
        validatorType:
          type: string
      description: List of rules
      discriminator:
        propertyName: validatorType
        mapping:
          ageRule: '#/components/schemas/api_docs_7_AgeRuleValueDto'
          oneOfRule: '#/components/schemas/api_docs_7_OneOfRuleValueDto'
          carriersBasedPhoneNumberRule: '#/components/schemas/api_docs_7_CarriersBasedPhoneNumberRuleValueDto'
          passwordRule: '#/components/schemas/api_docs_7_PasswordRuleValueDto'
          userIdentifierRule: '#/components/schemas/api_docs_7_UserIdentifierRuleValueDto'
    api_docs_7_ScenarioDto:
      type: object
      properties:
        name:
          type: string
          description: The name of the validation scenario. Used to call from business
            logic (code).
          example: signUp
        brandIdentifier:
          type: string
          description: Brand identifier where the scenario is used
          example: betpawa-uganda
        fields:
          type: array
          description: The validation fields to be used in the scope of this scenario
          items:
            $ref: '#/components/schemas/api_docs_7_FieldDto'
        additionalContext:
          type: object
          additionalProperties:
            type: string
            description: The additional data can be provided to the scenario caller
            example: '{"accountVerificationNeeded":"true"}'
          description: The additional data can be provided to the scenario caller
          example:
            accountVerificationNeeded: 'true'
        blocker:
          type: boolean
        additionalContextFilled:
          type: boolean
      description: A validation scenario is a named set of fields with predefined
        rules
    api_docs_7_UserIdentifierRuleValueDto:
      type: object
      allOf:
      - $ref: '#/components/schemas/api_docs_7_RuleDto'
    api_docs_7_PhoneOperatorPrefixRequest:
      required:
      - brandIdentifier
      - phoneNetwork
      - prefix
      type: object
      properties:
        brandIdentifier:
          type: string
        phoneNetwork:
          type: string
        prefix:
          pattern: ^[0-9]+$
          type: string
    api_docs_7_ValidationRequest:
      type: object
      properties:
        scenarioName:
          type: string
          description: The name of the validation scenario to be used.
          example: signUp
        brandIdentifier:
          type: string
          description: Brand identifier of scenario.
          example: betpawa-uganda
        fieldsToCheck:
          type: object
          additionalProperties:
            type: string
            description: Fields for validation as a key and their data as a value.
            example: '{"identifier", "555555"}'
          description: Fields for validation as a key and their data as a value.
          example: '{"identifier", "555555"}'
    api_docs_7_PhoneOperatorCreateRequest:
      required:
      - brandIdentifier
      - operatorName
      - phoneNetwork
      type: object
      properties:
        brandIdentifier:
          type: string
        operatorName:
          type: string
        phoneNetwork:
          type: string
        signUpAllowed:
          type: boolean
        phoneCountryCode:
          type: integer
          format: int32
    api_docs_7_PhoneOperatorModifyRequest:
      required:
      - brandIdentifier
      - operatorName
      type: object
      properties:
        brandIdentifier:
          type: string
        operatorName:
          type: string
        phoneCountryCode:
          type: integer
          format: int32
        phoneNetwork:
          type: string
        signUpAllowed:
          type: boolean
    api_docs_7_PhoneOperatorDataResponse:
      type: object
      properties:
        operatorName:
          type: string
        network:
          type: string
        phoneOperatorAllowed:
          type: boolean
        prefixes:
          type: array
          items:
            type: string
    api_docs_7_PhoneOperatorSetupResponse:
      type: object
      properties:
        brandIdentifier:
          type: string
        phoneCountryCode:
          type: integer
          format: int32
        phoneOperators:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_7_PhoneOperatorDataResponse'
    api_docs_7_ScenariosList:
      type: object
      properties:
        scenarios:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_7_ScenarioDto'
    api_docs_7_PhoneOperatorPrefixResponse:
      type: object
      properties:
        brandIdentifier:
          type: string
        phoneOperators:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_7_PhoneOperatorResponse'
    api_docs_7_PhoneOperatorResponse:
      type: object
      properties:
        operator:
          type: string
        prefixes:
          type: array
          items:
            type: string
    api_docs_7_ListResponseString:
      type: object
      properties:
        result:
          type: array
          items:
            type: string
    api_docs_7_ChangeRecord:
      type: object
      properties:
        changeType:
          type: string
        timestamp:
          type: string
          format: date-time
        propertyName:
          type: string
        left:
          type: object
        right:
          type: object
        author:
          type: string
    api_docs_7_DeleteScenarioRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the validation scenario
          example: signUp
        brandIdentifier:
          type: string
          description: Brand identifier where the scenario is used
          example: betpawa-uganda
    api_docs_7_PhoneOperatorDeleteRequest:
      type: object
      properties:
        brandIdentifier:
          type: string
        phoneOperatorName:
          type: string
    api_docs_8_FundsTransferRequest:
      type: object
      properties:
        creditor:
          type: string
          format: uuid
          description: UUID of a user who gives funds.
        debtor:
          type: string
          format: uuid
          description: UUID of a user who receives funds.
        amount:
          type: number
          description: The amount of funds being transferred.
        currency:
          type: string
          description: The currency in which the transfer amount is denominated. Must
            follow ISO 4217 (3 characters) standard
      required:
      - amount
      - creditor
      - currency
      - debtor
    api_docs_8_UserStatementRequest:
      type: object
      properties:
        nextPageId:
          type: string
          description: Id for next page that is taken from previous search response.
            Should be null on first request
        pageSize:
          type: integer
          format: int32
          description: How many transactions to load. Default value is 50, max is
            1000
          maximum: 1000
          minimum: 1
        currency:
          type: string
          description: 'If not provided default currency will be used. Format: ISO
            4217 (3 characters) and upper case'
    api_docs_8_TransactionResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        userUuid:
          type: string
          format: uuid
        balance:
          type: number
          description: Used to show running balance when possible
        currency:
          type: string
        change:
          type: number
        created:
          type: string
          format: date-time
        relatedId:
          type: string
        relatedType:
          type: string
        metadata:
          type: string
    api_docs_8_UserTransactionsResponse:
      type: object
      properties:
        nextPageId:
          type: string
          description: Id for next page if there are more transactions to load.
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_8_TransactionResponse'
    api_docs_8_BalanceRequest:
      type: object
      properties:
        currency:
          type: string
          description: Currency should be in ISO 4217 (3 characters) and upper case
      required:
      - currency
    api_docs_8_BalanceResponse:
      type: object
      properties:
        balance:
          type: number
        currency:
          type: string
    api_docs_8_TransactionSearchRequest:
      type: object
      properties:
        brandIdentifier:
          type: string
        relatedId:
          type: string
        relatedType:
          type: string
      required:
      - brandIdentifier
      - relatedId
    api_docs_8_ListResponseTransactionResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_8_TransactionResponse'
    api_docs_8_Query:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        brandIdentifier:
          type: string
        currency:
          type: string
          description: 'If not provided default currency will be used. Format: ISO
            4217 (3 characters) and upper case'
        relatedId:
          type: string
      required:
      - brandIdentifier
      - userUuid
    api_docs_8_UserTransactionsRequest:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/api_docs_8_Query'
        nextPageId:
          type: string
          description: Id for next page that is taken from previous search response.
            Should be null on first request
        pageSize:
          type: integer
          format: int32
          description: How many transactions to load. Default 100
          minimum: 1
      required:
      - query
    api_docs_8_FundsTransferAdminRequest:
      type: object
      properties:
        creditor:
          type: string
          format: uuid
          description: UUID of a user who gives funds.
        debtor:
          type: string
          format: uuid
          description: UUID of a user who receives funds.
        amount:
          type: number
          description: The amount of funds being transferred.
        currency:
          type: string
          description: The currency in which the transfer amount is denominated. Must
            follow ISO 4217 (3 characters) standard
        brandIdentifier:
          type: string
          description: The brand associated with both the creditor and the debtor.
        reason:
          type: string
          enum:
          - NO_ACCESS_TO_OLD_ACCOUNT
          - LEGAL_REQUIREMENT
          - OTHER
          - WITHDRAWAL_ISSUES
        comment:
          type: string
          description: Additional explanation or details regarding the reason for
            the transfer. Required in case of reason OTHER
      required:
      - amount
      - brandIdentifier
      - creditor
      - currency
      - debtor
      - reason
    api_docs_8_ErrorResponse:
      type: object
      properties:
        error:
          type: string
        uuid:
          type: string
        params:
          type: array
          items:
            type: string
        payload:
          type: object
          additionalProperties:
            type: object
    api_docs_8_BalanceAdminRequest:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        brandIdentifier:
          type: string
        currency:
          type: string
          description: Currency should be in ISO 4217 (3 characters) and upper case
      required:
      - brandIdentifier
      - userUuid
    api_docs_8_BalanceAdminResponse:
      type: object
      properties:
        balance:
          type: number
        currency:
          type: string
    api_docs_8_ListResponseBalanceAdminResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_8_BalanceAdminResponse'
    api_docs_8_UserTransactionsExportRequest:
      type: object
      properties:
        limit:
          type: integer
          format: int32
        userUuid:
          type: string
          format: uuid
        brandIdentifier:
          type: string
        currency:
          type: string
        from:
          type: string
          format: date
        to:
          type: string
          format: date
    api_docs_9_UserMessageStatusUpdateRequest:
      type: object
      properties:
        id:
          type: string
          example: 507f191e810c19729de860ea
        messageStatus:
          type: string
          enum:
          - QUEUED
          - DELIVERED
          - SEEN
          - CLICKED
    api_docs_9_UserMessageViewRequest:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
    api_docs_9_AdditionalViewDto:
      type: object
      properties:
        path:
          type: string
    api_docs_9_UserMessageDto:
      type: object
      properties:
        id:
          type: string
        messageText:
          type: string
        ctaText:
          type: string
        ctaLink:
          type: string
        messageType:
          type: string
        messageStatus:
          type: string
          enum:
          - QUEUED
          - DELIVERED
          - SEEN
          - CLICKED
        startTime:
          type: integer
          format: int64
          deprecated: true
        startTimeUtc:
          type: string
          format: date-time
        endTimeUtc:
          type: string
          format: date-time
        additionalView:
          $ref: '#/components/schemas/api_docs_9_AdditionalViewDto'
        expired:
          type: boolean
          readOnly: true
    api_docs_9_UserMessageViewResponse:
      type: object
      properties:
        userMessages:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_9_UserMessageDto'
        currentPage:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int64
        newMessagesCount:
          type: integer
          format: int64
    api_docs_9_MessageCreateRequest:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        texts:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_9_MessageTextDto'
        ctaLink:
          type: string
          description: Call to action link
        messageType:
          type: string
        brandIdentifier:
          type: string
          description: can be provided with multi brand access rights
          example: betpawa-uganda
        userUuidList:
          type: array
          items:
            type: string
            format: uuid
        userUuidsFileId:
          type: string
        messageDeliveryType:
          type: string
          enum:
          - DIRECT
          - BROADCAST
          - SINGLE
        additionalView:
          $ref: '#/components/schemas/api_docs_9_AdditionalViewDto'
      required:
      - messageDeliveryType
      - messageType
      - texts
    api_docs_9_MessageTextDto:
      type: object
      properties:
        language:
          type: string
          description: ISO 639-1 format - two letter long language code
          maxLength: 2
          minLength: 2
        messageText:
          type: string
          maxLength: 220
          minLength: 0
        ctaText:
          type: string
          description: Call to action text, used for ctaLink creation
          maxLength: 220
          minLength: 0
        firebaseTitle:
          type: string
          description: Firebase message title
          maxLength: 220
          minLength: 0
        firebaseBody:
          type: string
          description: Firebase message body
          maxLength: 220
          minLength: 0
      required:
      - language
      - messageText
    api_docs_9_MessageCreateResponse:
      type: object
      properties:
        messageId:
          type: string
    api_docs_9_UserMessageForAdminViewRequest:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        pageNumber:
          type: integer
          format: int32
          example: 0
      required:
      - userUuid
    api_docs_9_UserMessageForAdminDto:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        texts:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_9_MessageTextDto'
        ctaLink:
          type: string
        messageStatus:
          type: string
          enum:
          - QUEUED
          - DELIVERED
          - SEEN
          - CLICKED
    api_docs_9_UserMessageForAdminViewResponse:
      type: object
      properties:
        userMessages:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_9_UserMessageForAdminDto'
        currentPage:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int32
    api_docs_9_MessageViewRequest:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
          example: 1
        userUuid:
          type: string
          format: uuid
        messageType:
          type: string
        brandIdentifier:
          type: string
          example: betpawa-uganda
    api_docs_9_MessageDto:
      type: object
      properties:
        id:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        texts:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_9_MessageTextDto'
        ctaLink:
          type: string
        messageType:
          type: string
        messageDeliveryType:
          type: string
          enum:
          - DIRECT
          - BROADCAST
          - SINGLE
        brandIdentifier:
          type: string
        userUuidsFileId:
          type: string
        cancelled:
          type: boolean
        created:
          type: string
          format: date-time
        createUser:
          type: string
        creationStatus:
          type: string
        statistics:
          $ref: '#/components/schemas/api_docs_9_MessageStatisticsDto'
    api_docs_9_MessageStatisticsDto:
      type: object
      properties:
        delivered:
          type: integer
          format: int64
          readOnly: true
        seen:
          type: integer
          format: int64
          readOnly: true
        clicked:
          type: integer
          format: int64
          readOnly: true
        queued:
          type: integer
          format: int64
          readOnly: true
        total:
          type: integer
          format: int64
          readOnly: true
    api_docs_9_MessageViewResponse:
      type: object
      properties:
        userMessages:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_9_MessageDto'
        currentPage:
          type: integer
          format: int32
          example: 1
        totalPages:
          type: integer
          format: int32
          example: 8
        totalElements:
          type: integer
          format: int64
          example: 115
    api_docs_9_MessageTypeRequest:
      type: object
      properties:
        type:
          type: string
          pattern: '[A-Z0-9_]+'
      required:
      - type
    api_docs_9_MessageTypeDto:
      type: object
      properties:
        type:
          type: string
    api_docs_9_FileUploadResponse:
      type: object
      properties:
        fileId:
          type: string
    api_docs_9_CountAndAdditionalViewMessagesResponse:
      type: object
      properties:
        count:
          type: integer
          format: int64
        pathMessages:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/api_docs_9_UserMessageDto'
    api_docs_9_MessageTypesDto:
      type: object
      properties:
        messageTypes:
          type: array
          items:
            type: string
    api_docs_10_ClientContext:
      required:
      - brandIdentifier
      - clientUuid
      type: object
      properties:
        clientUuid:
          type: string
          format: uuid
        brandIdentifier:
          type: string
    api_docs_10_UpdateUserPreferencesRequest:
      required:
      - values
      type: object
      properties:
        clientContext:
          $ref: '#/components/schemas/api_docs_10_ClientContext'
        values:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_UserPreferencesRecord'
        note:
          type: string
    api_docs_10_UserPreferencesRecord:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    api_docs_10_BooleanResponse:
      type: object
      properties:
        success:
          type: boolean
    api_docs_10_UpdateUserPreferenceValueRequest:
      type: object
      properties:
        clientContext:
          $ref: '#/components/schemas/api_docs_10_ClientContext'
        value:
          type: string
        note:
          type: string
    api_docs_10_DepositTypeTierFeesDto:
      required:
      - operation
      type: object
      properties:
        boundFrom:
          type: number
          description: Lower bound of the deposit tier range
          example: 0.0
        boundTo:
          type: number
          description: Upper bound of the deposit tier range
          example: 1000.0
        amount:
          type: number
          description: Fixed fee amount if percentage is not specified
          example: 10.0
        percentage:
          type: number
          description: Fee percentage to be applied to the deposit amount
          example: 2.5
        operation:
          type: string
          description: 'Operation type: COMPENSATION, DEPOSIT_FEE, ...'
          example: DEPOSIT_FEE
    api_docs_10_WithdrawClientFundsRequest:
      required:
      - brandIdentifier
      - currency
      - msisdn
      - userUuid
      - withdrawAmount
      - withdrawalTypeName
      type: object
      properties:
        brandIdentifier:
          type: string
          example: betpawa-uganda
        userUuid:
          type: string
          example: 00112233-4455-6677-8899-aabbccddeeff
        msisdn:
          type: string
          example: '256787276868'
        withdrawAmount:
          type: string
          description: 'When withdrawal-option allows non-integer amounts > ''withdrawAmount''
            is allowed to be non-integer. And no ''compensationAmount'' is expected.

            When withdrawal-option requires integer amount and client has integer
            balance > integer ''withdrawAmount'' is required. And no ''compensationAmount''
            is expected.

            When withdrawal-option requires integer amount and client has non-integer
            balance > integer ''withdrawAmount'' is required. But ''compensationAmount''
            is expected to round-up the balance.

            '
          example: '12.34'
        currency:
          type: string
          example: UGX
        compensationAmount:
          type: string
          description: 'Max value=''0.999''

            ''compensationAmount'' is expected when withdrawal-option requires integer
            amount and client has non-integer balance. ''compensationAmount'' is expected
            to round-up the balance.

            '
          example: '0.68'
        withdrawalTypeName:
          type: string
          example: UGANDA_PAWAPAY_AIRTEL
        note:
          type: string
          description: Text for user-note, which will be visible for admins.
    api_docs_10_WithdrawClientFundsResponse:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/api_docs_10_WithdrawClientFundsRequest'
        withdrawalId:
          type: integer
          description: Positive in case of success
          format: int32
          example: 1
        failureReason:
          type: string
          description: Empty in case of success
          example: You cannot withdraw more money than you have on your account
    api_docs_10_PayoutPagedRequestWithCrossBrandOption:
      type: object
      properties:
        msisdn:
          type: string
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        sorting:
          type: object
          additionalProperties:
            type: string
            enum:
            - ASC
            - DESC
        crossJurisdictionEnabled:
          type: boolean
          deprecated: true
        crossBrandEnabled:
          type: boolean
        targets:
          type: array
          items:
            type: string
    api_docs_10_PagedResponseWithTotalNumberOfPagesForPayoutsPayoutRequestResponseV2:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_PayoutRequestResponseV2'
        totalCount:
          type: integer
          format: int64
        totalNumberOfPages:
          type: integer
          format: int32
        targets:
          type: array
          items:
            type: string
    api_docs_10_PayoutRequestResponseV2:
      type: object
      properties:
        uuid:
          type: string
        createdDate:
          type: string
          format: date-time
        userIdentifier:
          type: string
        amount:
          type: string
        currencyCode:
          type: string
        amountUsd:
          type: string
        type:
          type: string
        inclusion:
          type: string
        userUuid:
          type: string
          format: uuid
        reason:
          type: string
    api_docs_10_WithdrawalRequestStatusUpdateRequest:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        newStatus:
          type: string
    api_docs_10_ResponseObject:
      type: object
      properties:
        data:
          type: object
    api_docs_10_PagedResponseWithTotalNumberOfPagesForPayoutsPayoutRequestResponseSimplifiedV2:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_PayoutRequestResponseSimplifiedV2'
        totalCount:
          type: integer
          format: int64
        totalNumberOfPages:
          type: integer
          format: int32
        targets:
          type: array
          items:
            type: string
    api_docs_10_PayoutRequestResponseSimplifiedV2:
      type: object
      properties:
        createdDate:
          type: string
          format: date-time
        userUuid:
          type: string
        userIdentifier:
          type: string
        amount:
          type: string
        currencyCode:
          type: string
        amountUsd:
          type: string
        type:
          type: string
    api_docs_10_PayoutRequestProcessResponse:
      type: object
      properties:
        havingQueuedStatus:
          type: boolean
          deprecated: true
        validationPassed:
          type: boolean
        shouldBeReprocessed:
          type: boolean
        status:
          type: string
    api_docs_10_ResponsePayoutRequestProcessResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/api_docs_10_PayoutRequestProcessResponse'
    api_docs_10_WithdrawalUuidsDto:
      type: object
      properties:
        uuids:
          type: array
          items:
            type: string
            format: uuid
    api_docs_10_ResponseWithdrawalsResponseV2Dto:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/api_docs_10_WithdrawalsResponseV2Dto'
    api_docs_10_WithdrawalProcessFailure:
      type: object
      properties:
        withdrawalRequestUuid:
          type: string
          format: uuid
        reason:
          type: string
    api_docs_10_WithdrawalsResponseV2Dto:
      type: object
      properties:
        successfulWithdrawalUuids:
          type: array
          items:
            type: string
            format: uuid
        failures:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_WithdrawalProcessFailure'
    api_docs_10_ResponseBoolean:
      type: object
      properties:
        data:
          type: boolean
    api_docs_10_BooleanRequest:
      type: object
      properties:
        Enable:
          type: boolean
    api_docs_10_AutomaticPayoutTypeResponse:
      type: object
      properties:
        Type:
          type: string
        Name:
          type: string
        AutomaticPayoutsEnabled:
          type: boolean
        brandIdentifier:
          type: string
        telcoName:
          type: string
    api_docs_10_ResponseListAutomaticPayoutTypeResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_AutomaticPayoutTypeResponse'
    api_docs_10_CancelWithdrawalV2:
      type: object
      properties:
        withdrawalUuid:
          type: string
          format: uuid
    api_docs_10_MarkAsSuccessWithdrawalUuidsDto:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        thirdPartyReferenceId:
          type: string
    api_docs_10_DeclineWithdrawalV2Dto:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        rejectionReason:
          type: string
    api_docs_10_ApproveOrDeclineManualDepositRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        status:
          type: string
    api_docs_10_ManualDepositCreationRequestDto:
      required:
      - mobile
      - type
      type: object
      properties:
        comment:
          type: string
        amount:
          type: number
        exIdentifier:
          type: string
        mobile:
          type: string
          description: admin-ui sends value as 'national-number', (excluding country-code
            and '+' sign)
        prefix:
          type: integer
          description: admin-ui sends phone-number-country-code as separate field
          format: int32
        type:
          type: string
    api_docs_10_PayoutCreationResponse:
      required:
      - Status
      type: object
      properties:
        withdrawalUuid:
          type: string
          format: uuid
        Status:
          type: string
          enum:
          - UNKNOWN
          - ACCEPTED
          - REJECTED
          - SUCCESS
          - FAILURE
          - PAID_MANUALLY
          - SENDING
          - QUEUED
          - REMOVE_FROM_QUEUE
          - WAITING_ACCEPTANCE
    api_docs_10_ResponsePayoutCreationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/api_docs_10_PayoutCreationResponse'
    api_docs_10_DigmoInvitationLinkRequest:
      type: object
      properties:
        successfulUrl:
          type: string
        failedUrl:
          type: string
    api_docs_10_DigmoInvitationLinkResponse:
      type: object
      properties:
        invitationUrl:
          type: string
    api_docs_10_InitDepositRequestWithDepositTypeName:
      required:
      - amount
      - depositPaymentSystemName
      type: object
      properties:
        depositPaymentSystemName:
          type: string
        amount:
          type: number
        depositSuccessfulUrl:
          type: string
        depositFailedUrl:
          type: string
    api_docs_10_InitDepositResponse:
      required:
      - DepositInitId
      - StatusType
      type: object
      properties:
        DepositInitId:
          type: integer
          format: int64
        StatusType:
          type: string
          enum:
          - SUCCESS
          - GENERAL_FAILURE
          - PENDING
          - AMOUNT_TOO_SMALL
          - NOT_REGISTERED
          - INSUFFICIENT_FUNDS
          - FAILED
          - INIT
          - PAYER_NOT_FOUND
          - PAYMENT_NOT_APPROVED
          - PAYER_LIMIT_REACHED
          - TRANSACTION_ALREADY_IN_PROCESS
          - CORRESPONDENT_TEMPORARILY_UNAVAILABLE
          - AWAITING_USER_CONFIRMATION
    api_docs_10_DeleteUserPreferenceValueRequest:
      type: object
      properties:
        clientContext:
          $ref: '#/components/schemas/api_docs_10_ClientContext'
        note:
          type: string
    api_docs_10_UserInfoPagedRequest:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        sorting:
          type: object
          additionalProperties:
            type: string
            enum:
            - ASC
            - DESC
        userUuid:
          type: string
          format: uuid
        searchTerm:
          type: string
    api_docs_10_PagedResponseUserPayoutResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_UserPayoutResponse'
        totalCount:
          type: integer
          format: int64
    api_docs_10_UserPayoutResponse:
      required:
      - Amount
      - PayoutRequestId
      - PayoutType
      - RequestTime
      - withdrawalUuid
      type: object
      properties:
        PayoutRequestId:
          type: integer
          format: int32
          deprecated: true
        withdrawalUuid:
          type: string
        Amount:
          type: number
        RequestTime:
          type: string
          format: date-time
        PayoutType:
          type: string
        StatusName:
          type: string
        Status:
          type: string
        externalReferenceId:
          type: string
        externalUrl:
          type: string
        reason:
          type: string
    api_docs_10_PagedResponseUserDepositResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_UserDepositResponse'
        totalCount:
          type: integer
          format: int64
    api_docs_10_UserDepositResponse:
      required:
      - Amount
      - Credited
      - DepositId
      - DepositType
      - ManualDeposit
      - depositUuid
      type: object
      properties:
        depositUuid:
          type: string
          format: uuid
        DepositId:
          type: integer
          format: int64
        Amount:
          type: number
        Credited:
          type: string
          format: date-time
        DepositType:
          type: string
        ManualDeposit:
          type: boolean
        ExternalId:
          type: string
        ExtraData:
          type: string
        externalUrl:
          type: string
    api_docs_10_PagedResponseUserFailedDepositResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_UserFailedDepositResponse'
        totalCount:
          type: integer
          format: int64
    api_docs_10_UserFailedDepositResponse:
      required:
      - Amount
      - Created
      - DepositId
      - DepositType
      type: object
      properties:
        DepositId:
          type: integer
          format: int64
        Amount:
          type: number
        Created:
          type: string
          format: date-time
        DepositType:
          type: string
        ExternalId:
          type: string
        ExStatus:
          type: string
        ExtraData:
          type: string
        externalUrl:
          type: string
    api_docs_10_UserAllDepositsRequest:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        from:
          type: string
          format: date-time
    api_docs_10_UserAllDepositsResponse:
      required:
      - amount
      - created
      - depositId
      - depositType
      type: object
      properties:
        depositId:
          type: integer
          format: int64
        amount:
          type: number
        created:
          type: string
          format: date-time
        depositType:
          type: string
        method:
          type: string
          enum:
          - WEB
          - USSD
          - STATEMENT_IMPORT
          - MANUAL
          - COMPENSATION
          - UNKNOWN
        status:
          type: string
          enum:
          - NEW
          - AWAITING_3RD_PARTY
          - AWAITING_USER_CONFIRMATION
          - FAILURE
          - TIMEOUT
          - SUCCESS
        currency:
          type: string
        externalUrl:
          type: string
    api_docs_10_CreateManualTransactionRequest:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        amount:
          type: number
        currencyCode:
          type: string
        transactionType:
          type: string
          enum:
          - UNKNOWN
          - BET_CASINO
          - DEPOSIT
          - WITHDRAWAL
          - BET_POOL
          - BET_SPORT
          - BET_SPORT_VIRTUAL
          - DEPOSIT_FEE
          - ROLLBACK_DEPOSIT_FEE
          - COMPENSATION_CREDIT
          - COMPENSATION_CORRECTIONAL_DEBIT
          - WITHDRAWAL_FEE
          - ROLLBACK_DEPOSIT
          - ROLLBACK_WITHDRAWAL
          - ROLLBACK_WITHDRAWAL_FEE
          - WITHDRAWAL_TAX
          - ROLLBACK_WITHDRAWAL_TAX
          - KIRON_BET
        relatedId:
          type: string
        text:
          type: string
        brandIdentifier:
          type: string
    api_docs_10_CreateManualTransactionResponse:
      type: object
      properties:
        successfulTransactions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_SuccessfulManualTransactionResponse'
        failed:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_CreateManualTransactionRequest'
    api_docs_10_SuccessfulManualTransactionResponse:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        transactionId:
          type: integer
          format: int64
        currencyCode:
          type: string
        amount:
          type: number
        transactionType:
          type: string
          enum:
          - UNKNOWN
          - BET_CASINO
          - DEPOSIT
          - WITHDRAWAL
          - BET_POOL
          - BET_SPORT
          - BET_SPORT_VIRTUAL
          - DEPOSIT_FEE
          - ROLLBACK_DEPOSIT_FEE
          - COMPENSATION_CREDIT
          - COMPENSATION_CORRECTIONAL_DEBIT
          - WITHDRAWAL_FEE
          - ROLLBACK_DEPOSIT
          - ROLLBACK_WITHDRAWAL
          - ROLLBACK_WITHDRAWAL_FEE
          - WITHDRAWAL_TAX
          - ROLLBACK_WITHDRAWAL_TAX
          - KIRON_BET
        relatedId:
          type: string
        transactionDate:
          type: string
          format: date-time
        text:
          type: string
    api_docs_10_ManualWithdrawalCreationRequest:
      type: object
      properties:
        PhoneNumber:
          type: string
        PayoutType:
          type: string
        Comment:
          type: string
        Amount:
          type: number
    api_docs_10_ManualWithdrawalCreationResponse:
      type: object
      properties:
        withdrawalUuid:
          type: string
        status:
          type: string
        currencyCode:
          type: string
        withdrawAmount:
          type: number
        taxAmount:
          type: number
        feeAmount:
          type: number
    api_docs_10_PayoutTypeUpdateRequest:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        active:
          type: boolean
        automaticPayoutsSupported:
          type: boolean
        automaticPayoutsEnabled:
          type: boolean
        priority:
          type: integer
          format: int32
        numberOfConsumers:
          type: integer
          format: int32
        brandIdentifier:
          type: string
        currencyCode:
          type: string
        phoneOperatorDescription:
          type: string
        pawapayCorrespondent:
          type: string
        text:
          type: string
        maxWithdrawAmount:
          type: integer
          format: int32
        minWithdrawAmount:
          type: integer
          format: int32
        maxAutomaticPayoutsAmount24h:
          type: integer
          format: int32
        freePayoutsCount24h:
          type: integer
          format: int32
        flatFeeAmount:
          type: number
        percentageFeeAmount:
          type: number
        freePayoutsCountPerWeek:
          type: integer
          format: int32
        fractionalSupported:
          type: boolean
        availabilityCheckEnabled:
          type: boolean
        nameLookupEnabled:
          type: boolean
    api_docs_10_PayoutTypeDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        payoutTypeName:
          type: string
        text:
          type: string
        active:
          type: boolean
        automaticPayoutsSupported:
          type: boolean
        automaticPayoutsEnabled:
          type: boolean
        priority:
          type: integer
          format: int32
        consumersCount:
          type: integer
          format: int32
        brandIdentifier:
          type: string
        currencyCode:
          type: string
        phoneOperatorDescription:
          type: string
        pawapayCorrespondent:
          type: string
        maxAllowedWithdrawAmount:
          type: integer
          format: int32
        minAllowedWithdrawAmount:
          type: integer
          format: int32
        maxAutomaticPayoutsAmount24h:
          type: integer
          format: int32
        freePayoutsCount24h:
          type: integer
          format: int32
        flatFee:
          type: number
        percentageFee:
          type: number
        freePayoutsCountPerWeek:
          type: integer
          format: int32
        fractionalSupported:
          type: boolean
        availabilityCheckEnabled:
          type: boolean
        nameLookupEnabled:
          type: boolean
    api_docs_10_PayoutTypeCreateRequest:
      required:
      - id
      - payoutTypeName
      type: object
      properties:
        id:
          type: integer
          format: int32
        active:
          type: boolean
        automaticPayoutsSupported:
          type: boolean
        automaticPayoutsEnabled:
          type: boolean
        priority:
          type: integer
          format: int32
        numberOfConsumers:
          type: integer
          format: int32
        brandIdentifier:
          type: string
        currencyCode:
          type: string
        phoneOperatorDescription:
          type: string
        pawapayCorrespondent:
          type: string
        text:
          type: string
        maxWithdrawAmount:
          type: integer
          format: int32
        minWithdrawAmount:
          type: integer
          format: int32
        maxAutomaticPayoutsAmount24h:
          type: integer
          format: int32
        freePayoutsCount24h:
          type: integer
          format: int32
        flatFeeAmount:
          type: number
        percentageFeeAmount:
          type: number
        freePayoutsCountPerWeek:
          type: integer
          format: int32
        fractionalSupported:
          type: boolean
        availabilityCheckEnabled:
          type: boolean
        nameLookupEnabled:
          type: boolean
        payoutTypeName:
          type: string
    api_docs_10_UpdatePawapayWalletBalanceConfigurationRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        countryCode:
          type: string
        pawapayCorrespondent:
          type: string
        balanceLimit:
          type: number
        enabled:
          type: boolean
        brandIdentifier:
          type: string
    api_docs_10_PawapayWalletBalanceConfigurationResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        countryCode:
          type: string
        pawapayCorrespondent:
          type: string
        balanceLimit:
          type: number
        enabled:
          type: boolean
        brandIdentifier:
          type: string
    api_docs_10_CreatePawapayWalletBalanceConfigurationRequest:
      type: object
      properties:
        countryCode:
          type: string
        pawapayCorrespondent:
          type: string
        balanceLimit:
          type: number
        enabled:
          type: boolean
        brandIdentifier:
          type: string
    api_docs_10_BulkId:
      type: object
      properties:
        id:
          type: integer
          format: int32
    api_docs_10_EntryStatusCount:
      type: object
      properties:
        status:
          type: string
        count:
          type: integer
          format: int64
    api_docs_10_ForcedWithdrawalSummaryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        status:
          type: string
        created:
          type: string
          format: date-time
        entryTotalCount:
          type: integer
          format: int64
        entryStatuses:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_EntryStatusCount'
    api_docs_10_CreateForcedWithdrawalRequest:
      type: object
      properties:
        brandIdentifier:
          type: string
        payoutType:
          type: string
        userUuids:
          type: array
          items:
            type: string
    api_docs_10_DepositStatement:
      type: object
      properties:
        receiptNo:
          type: string
        user:
          type: string
          deprecated: true
        phoneNumber:
          type: string
        amount:
          type: number
        firstName:
          type: string
        lastName:
          type: string
        depositInitId:
          type: string
        depositType:
          type: string
    api_docs_10_DepositStatementsParsedResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_DepositStatement'
        unReadLine:
          type: array
          items:
            type: string
    api_docs_10_ApprovedDepositDTO:
      type: object
      properties:
        phoneNumber:
          type: string
        receiptNo:
          type: string
        amount:
          type: number
          format: double
        firstName:
          type: string
        lastName:
          type: string
        depositInitId:
          type: string
        depositType:
          type: string
    api_docs_10_ApprovedStatementDTO:
      required:
      - type
      type: object
      properties:
        approvedDeposits:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_ApprovedDepositDTO'
        type:
          type: string
        channel:
          type: string
    api_docs_10_DepositTypeUpdateRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        allowManual:
          type: boolean
        priority:
          type: integer
          format: int32
        exIdentifierNeeded:
          type: boolean
        depositUrl:
          type: string
        descriptionText:
          type: string
        pawapayCorrespondent:
          type: string
        maxDepositAmount:
          type: integer
          format: int32
        minDepositAmount:
          type: integer
          format: int32
        enabled:
          type: boolean
        isUssd:
          type: boolean
        importStatementSupported:
          type: boolean
        pawapayImportStatementTelcoName:
          type: string
        brandIdentifier:
          type: string
        currencyCode:
          type: string
        phoneOperatorDescription:
          type: string
        compensatedFeeStructure:
          type: string
        compensatedFeeAmount:
          type: number
        minDepositAmountForFeeCompensation:
          type: number
        chargeableFeeStructure:
          type: string
        chargeableFeeAmount:
          type: number
        chargeableFeeName:
          type: string
        availabilityCheckEnabled:
          type: boolean
        webAvailable:
          type: boolean
        ussdAvailable:
          type: boolean
        fractionalSupported:
          type: boolean
    api_docs_10_DepositTypeDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        depositType:
          type: string
        enabled:
          type: boolean
        brandIdentifier:
          type: string
        allowedToClients:
          type: boolean
        externalIdentifierRequired:
          type: boolean
        priorityWithinBrand:
          type: integer
          format: int32
        depositUrl:
          type: string
        description:
          type: string
        pawapayCorrespondent:
          type: string
        minDepositAmount:
          type: integer
          format: int32
        maxDepositAmount:
          type: integer
          format: int32
        pawapayImportStatementTelcoName:
          type: string
        phoneOperatorDescription:
          type: string
        webAvailable:
          type: boolean
        ussdAvailable:
          type: boolean
        supportingImportStatements:
          type: boolean
        compensatedFeeStructure:
          type: string
          enum:
          - FIXED
          - PERCENTAGE
          - TIERED
        compensatedFeeAmount:
          type: number
        minDepositAmountForFeeCompensation:
          type: number
        fractionalSupported:
          type: boolean
        chargeableFeeStructure:
          type: string
          enum:
          - FIXED
          - PERCENTAGE
          - TIERED
        chargeableFeeAmount:
          type: number
        chargeableFeeName:
          type: string
        availabilityCheckEnabled:
          type: boolean
        disabled:
          type: boolean
    api_docs_10_DepositTypeCreateRequest:
      required:
      - depositType
      type: object
      properties:
        id:
          type: integer
          format: int32
        allowManual:
          type: boolean
        priority:
          type: integer
          format: int32
        exIdentifierNeeded:
          type: boolean
        depositUrl:
          type: string
        descriptionText:
          type: string
        pawapayCorrespondent:
          type: string
        maxDepositAmount:
          type: integer
          format: int32
        minDepositAmount:
          type: integer
          format: int32
        enabled:
          type: boolean
        isUssd:
          type: boolean
        importStatementSupported:
          type: boolean
        pawapayImportStatementTelcoName:
          type: string
        brandIdentifier:
          type: string
        currencyCode:
          type: string
        phoneOperatorDescription:
          type: string
        compensatedFeeStructure:
          type: string
        compensatedFeeAmount:
          type: number
        minDepositAmountForFeeCompensation:
          type: number
        chargeableFeeStructure:
          type: string
        chargeableFeeAmount:
          type: number
        chargeableFeeName:
          type: string
        availabilityCheckEnabled:
          type: boolean
        webAvailable:
          type: boolean
        ussdAvailable:
          type: boolean
        fractionalSupported:
          type: boolean
        depositType:
          type: string
    api_docs_10_BrandConfigurationRequest:
      type: object
      properties:
        brandIdentifier:
          type: string
        automaticCompensationThreshold:
          type: integer
          format: int32
        currencyCode:
          type: string
        currencyFormat:
          type: string
        currentTimeZone:
          type: string
        maxTotalCompAmountPerDay:
          type: integer
          format: int32
        approximateCurrencyRateToUsd:
          type: integer
          format: int32
        suspiciousBetCheckEnabled:
          type: boolean
        kycRequiredForDeposit:
          type: boolean
        kycRequiredForWithdrawal:
          type: boolean
        countingSuccessfulWithdrawalsEnabled:
          type: boolean
    api_docs_10_BrandConfigurationResponse:
      type: object
      properties:
        brandIdentifier:
          type: string
        automaticCompensationThreshold:
          type: integer
          format: int32
        currencyCode:
          type: string
        currencyFormat:
          type: string
        currentTimeZone:
          type: string
        maxTotalCompAmountPerDay:
          type: integer
          format: int32
        approximateCurrencyRateToUsd:
          type: integer
          format: int32
        suspiciousBetCheckEnabled:
          type: boolean
        kycRequiredForDeposit:
          type: boolean
        kycRequiredForWithdrawal:
          type: boolean
        countingSuccessfulWithdrawalsEnabled:
          type: boolean
    api_docs_10_RecalculateUserWithdrawalStatisticsRequest:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        brandIdentifier:
          type: string
    api_docs_10_RecalculateDepositStatisticsRequest:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        brandIdentifier:
          type: string
    api_docs_10_DeleteTriggersRequest:
      type: object
      properties:
        jobClassName:
          type: string
        includeNonFiredTriggers:
          type: boolean
    api_docs_10_MaintainTriggersResponse:
      type: object
      properties:
        operation:
          type: string
        stats:
          $ref: '#/components/schemas/api_docs_10_TriggersStats'
    api_docs_10_TriggersStats:
      type: object
      properties:
        jobClassName:
          type: string
        jobDetailsCount:
          type: integer
          format: int64
        triggersCount:
          type: integer
          format: int64
        simpleTriggersCount:
          type: integer
          format: int64
    api_docs_10_DeletePawapayDepositTriggersRequest:
      type: object
      properties:
        includeNonFiredTriggers:
          type: boolean
    api_docs_10_PayoutTransactionOverviewResponseV2:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        identifier:
          type: string
        balance:
          type: string
        address:
          type: string
        date:
          type: string
          format: date-time
        amount:
          type: string
        taxAmount:
          type: string
        feeAmount:
          type: string
        type:
          type: string
        currency:
          type: string
        deposits:
          type: integer
          format: int64
        netRevenue:
          type: string
        betsPlaced:
          type: integer
          format: int32
        details:
          type: string
        userCountryIso:
          type: string
        userUuid:
          type: string
        bankAccount:
          type: string
        bankInfo:
          type: string
        userBrandIdentifier:
          type: string
    api_docs_10_PendingPayoutsResponseV2:
      type: object
      properties:
        uuid:
          type: string
        created:
          type: string
          format: date-time
        amount:
          type: string
        currencyCode:
          type: string
        taxAmount:
          type: string
        feeAmount:
          type: string
    api_docs_10_ResponseListPendingPayoutsResponseV2:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_PendingPayoutsResponseV2'
    api_docs_10_PayoutMethodsResponse:
      required:
      - CmsComponentId
      - PayoutType
      - PayoutTypeName
      - PayoutTypeStrategy
      type: object
      properties:
        PayoutType:
          type: string
        CmsComponentId:
          type: integer
          format: int32
        PayoutTypeName:
          type: string
        PayoutTypeStrategy:
          type: string
        ExtraData:
          type: object
          additionalProperties:
            type: object
        FirstName:
          type: string
        LastName:
          type: string
        Nationality:
          type: string
        NationalIdentificationNumber:
          type: string
        DocumentNumber:
          type: string
        isPersonalDataSet:
          type: boolean
        channel:
          type: string
        minAmount:
          type: integer
          format: int32
        maxAmount:
          type: integer
          format: int32
        currencyCode:
          type: string
        state:
          type: string
        paymentProvider:
          type: string
        status:
          type: string
        freeWithdrawalsCount24h:
          type: integer
          format: int32
        percentageFee:
          type: number
        flatFee:
          type: number
        freeWithdrawalsCountPerWeek:
          type: integer
          format: int32
        fractionalSupported:
          type: boolean
    api_docs_10_PayoutMethodsResponseV2:
      type: object
      properties:
        successfulPayoutsToday:
          type: integer
          format: int32
        thisWeeksSuccessfulPayoutsCount:
          type: integer
          format: int32
        payoutMethods:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_PayoutMethodsResponse'
    api_docs_10_ResponsePayoutMethodsResponseV2:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/api_docs_10_PayoutMethodsResponseV2'
    api_docs_10_ManualDepositDtoV2:
      type: object
      properties:
        id:
          type: integer
          format: int32
        creator:
          type: string
        creatorUuid:
          type: string
        created:
          type: string
          format: date-time
        recipient:
          type: string
        amount:
          type: string
        currencyCode:
          type: string
        type:
          type: string
        comment:
          type: string
        exIdentifier:
          type: string
        userUuid:
          type: string
        userBrandIdentifier:
          type: string
    api_docs_10_ResponseListManualDepositDtoV2:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_ManualDepositDtoV2'
    api_docs_10_ResponseCollectionUserTransactionDetails:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_UserTransactionDetails'
    api_docs_10_UserTransactionDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        amount:
          type: number
        currencyCode:
          type: string
        datetime:
          type: string
          format: date-time
        type:
          type: string
    api_docs_10_ResponseBigDecimal:
      type: object
      properties:
        data:
          type: number
    api_docs_10_PendingPayoutsResponse:
      type: object
      properties:
        uuid:
          type: string
        createdIsoInstant:
          type: string
          format: date-time
        amountUnformatted:
          type: string
        currencyCode:
          type: string
        taxAmount:
          type: string
        feeAmount:
          type: string
    api_docs_10_ResponseListPendingPayoutsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_PendingPayoutsResponse'
    api_docs_10_TransactionDetailsResponse:
      type: object
      properties:
        amount:
          type: number
        currency:
          type: string
        dateTime:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - SUCCESS
          - PENDING
          - FAILURE
    api_docs_10_DigmoBalance:
      type: object
      properties:
        available:
          type: string
        currency:
          type: string
        country:
          type: string
    api_docs_10_DigmoUserBalanceResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        userId:
          type: string
        referenceUserId:
          type: string
        balances:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_DigmoBalance'
    api_docs_10_DepositTypeDetailsDto:
      type: object
      properties:
        limit:
          $ref: '#/components/schemas/api_docs_10_PaymentSystemLimit'
        status:
          type: string
    api_docs_10_PaymentSystemLimit:
      type: object
      properties:
        max:
          type: integer
          format: int32
        min:
          type: integer
          format: int32
        currencyCode:
          type: string
    api_docs_10_InitDepositStatusResponse:
      required:
      - DepositInitId
      - StatusType
      type: object
      properties:
        DepositInitId:
          type: integer
          format: int64
        StatusType:
          type: string
        redirectUrl:
          type: string
    api_docs_10_DepositOptionDto:
      type: object
      properties:
        depositTypeName:
          type: string
        pageUrl:
          type: string
        text:
          type: string
        paymentProvider:
          type: string
        status:
          type: string
        minDepositAmount:
          type: integer
          format: int32
        maxDepositAmount:
          type: integer
          format: int32
        sorting:
          type: integer
          format: int32
        phoneOperatorDescription:
          type: string
        currencyCode:
          type: string
        webAvailable:
          type: boolean
        ussdAvailable:
          type: boolean
        applicableForUserTelco:
          type: boolean
        feeStructure:
          type: string
        feeAmount:
          type: number
        minDepositAmountForFeeCompensation:
          type: number
        chargeableFeeStructure:
          type: string
        chargeableFeeAmount:
          type: number
        chargeableFeeName:
          type: string
        fractionalSupported:
          type: boolean
    api_docs_10_ResponseListDepositOptionDto:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_DepositOptionDto'
    api_docs_10_DepositCompensatedFeeResponse:
      type: object
      properties:
        depositType:
          type: string
        amount:
          type: number
        feeAmount:
          type: number
        compensationAmount:
          type: number
        currency:
          type: string
    api_docs_10_DepositChargeableFeeResponse:
      type: object
      properties:
        feeName:
          type: string
        initialAmount:
          type: number
        feeAmount:
          type: number
        finalAmount:
          type: number
        currency:
          type: string
    api_docs_10_UserUuidsResponse:
      type: object
      properties:
        userUuids:
          type: array
          items:
            type: string
    api_docs_10_UserPaymentSummary:
      type: object
      properties:
        totalDepositsCount:
          type: integer
          format: int32
        totalWithdrawalsCount:
          type: integer
          format: int32
        totalDepositsAmount:
          type: number
        totalWithdrawalsAmount:
          type: number
        firstDeposit:
          type: string
          format: date-time
        lastDeposit:
          type: string
          format: date-time
    api_docs_10_ImportStatementType:
      type: object
      properties:
        value:
          type: string
        viewValue:
          type: string
        brandIdentifier:
          type: string
    api_docs_10_ResponseListImportStatementType:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_ImportStatementType'
    api_docs_10_DepositTypeResponse:
      type: object
      properties:
        DepositType:
          type: string
        DepositTypeId:
          type: integer
          format: int32
        ExIdRequired:
          type: boolean
    api_docs_10_ResponseListDepositTypeResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_DepositTypeResponse'
    api_docs_10_WithdrawalTypeReplacement:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        forAmountStrictlyLessThan:
          type: number
        valid:
          type: boolean
    api_docs_10_WithdrawalTypeReplacingProperties:
      type: object
      properties:
        featureDisabled:
          type: boolean
        replacements:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_WithdrawalTypeReplacement'
    api_docs_10_DepositTypeReplacement:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        forAmountStrictlyLessThan:
          type: number
        valid:
          type: boolean
    api_docs_10_DepositTypeReplacingProperties:
      type: object
      properties:
        featureDisabled:
          type: boolean
        replacements:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_DepositTypeReplacement'
    api_docs_10_WithdrawClientFundsSuggestion:
      type: object
      properties:
        brandIdentifier:
          type: string
          description: Expected in creation-request
          example: betpawa-uganda
        userUuid:
          type: string
          description: Expected in creation-request
          example: 00112233-4455-6677-8899-aabbccddeeff
        msisdn:
          type: string
          description: Expected in creation-request
          example: '256787276868'
        withdrawAmount:
          type: string
          description: Expected in creation-request
          example: '13'
        currency:
          type: string
          description: Expected in creation-request
          example: UGX
        compensationAmount:
          type: string
          description: Expected in creation-request
          example: '0.68'
        preferredWithdrawalTypeName:
          type: string
          description: Default value for 'withdrawalTypeName' in creation-request
          example: UGANDA_PAWAPAY_AIRTEL
        allActiveWithdrawalTypes:
          type: array
          description: Alternative values for 'withdrawalTypeName' in creation-request
          example: '[UGANDA_PAWAPAY_AIRTEL, ...]'
          items:
            type: string
            description: Alternative values for 'withdrawalTypeName' in creation-request
            example: '[UGANDA_PAWAPAY_AIRTEL, ...]'
    api_docs_10_RabbitListenerData:
      type: object
      properties:
        id:
          type: string
        isRunning:
          type: boolean
        extra:
          type: string
    api_docs_10_GatewayStatusReport:
      type: object
      properties:
        name:
          type: string
        status:
          type: string
        updatedAt:
          type: string
        manuallyOverridden:
          type: boolean
    api_docs_10_TriggersSummary:
      type: object
      properties:
        stats:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_10_TriggersStats'
    api_docs_11_PoolEditRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        nameTranslations:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_TranslatedTextRequest'
        description:
          type: string
        descriptionTranslations:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_TranslatedTextRequest'
        offset:
          type: integer
          format: int64
        prizes:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_PrizeEditRequest'
        openTime:
          type: string
          format: date-time
        closeTime:
          type: string
          format: date-time
        priorityOrder:
          type: integer
          format: int32
        presentation:
          type: string
    api_docs_11_PrizeEditRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        guaranteed:
          type: number
        rolled:
          type: number
    api_docs_11_TranslatedTextRequest:
      type: object
      properties:
        language:
          type: string
        text:
          type: string
    api_docs_11_ErrorResponse:
      type: object
      properties:
        error:
          type: string
        uuid:
          type: string
        params:
          type: array
          items:
            type: string
        payload:
          type: object
          additionalProperties:
            type: object
    api_docs_11_PoolDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          $ref: '#/components/schemas/api_docs_11_TranslationDto'
        description:
          $ref: '#/components/schemas/api_docs_11_TranslationDto'
        resulter:
          type: string
          format: uuid
        confirmer:
          type: string
          format: uuid
        templateId:
          type: integer
          format: int64
        openTime:
          type: string
          format: date-time
        closeTime:
          type: string
          format: date-time
        priorityOrder:
          type: integer
          format: int32
        presentation:
          type: string
    api_docs_11_TranslationDto:
      type: object
      properties:
        english:
          type: string
        translationsByLanguageCode:
          type: object
          additionalProperties:
            type: string
    api_docs_11_PlaceBetItemDto:
      type: object
      properties:
        position:
          type: integer
          format: int32
        outcomes:
          type: array
          items:
            type: integer
            format: int32
    api_docs_11_PlaceBetRequest:
      type: object
      properties:
        poolId:
          type: string
        uniqueTicketId:
          maxLength: 70
          minLength: 0
          type: string
        selections:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_PlaceBetItemDto'
        tiebreakers:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_PlaceBetTiebreakerDto'
    api_docs_11_PlaceBetTiebreakerDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        value:
          type: integer
          format: int32
    api_docs_11_DetailedTicketResponse:
      type: object
      properties:
        id:
          type: string
        purchaseDate:
          type: string
          format: date-time
        pool:
          $ref: '#/components/schemas/api_docs_11_PoolDto'
        status:
          type: string
          enum:
          - PENDING
          - LOST
          - WON
          - CANCELLED
        payoutDetails:
          $ref: '#/components/schemas/api_docs_11_PayoutDetails'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_TicketRow'
        tiebreaker:
          $ref: '#/components/schemas/api_docs_11_TicketTiebreaker'
        freeTicketsUsed:
          type: integer
          format: int32
    api_docs_11_PayoutDetails:
      type: object
      properties:
        prize:
          type: number
        payout:
          type: number
        tax:
          type: number
        payoutTime:
          type: string
          format: date-time
        hitCountMax:
          type: integer
          format: int32
    api_docs_11_TicketRow:
      type: object
      properties:
        position:
          type: integer
          format: int32
        outcomes:
          type: array
          items:
            type: integer
            format: int32
    api_docs_11_TicketTiebreaker:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/api_docs_11_TicketTiebreakerResult'
        answers:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_TiebreakerAnswer'
    api_docs_11_TicketTiebreakerResult:
      type: object
      properties:
        tiebreakerWinner:
          type: boolean
    api_docs_11_TiebreakerAnswer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        answer:
          type: integer
          format: int32
    api_docs_11_PoolConfigurationRequest:
      type: object
      properties:
        enabled:
          type: boolean
        jackpotMinStakeAmount:
          type: number
    api_docs_11_PoolConfigurationResponse:
      type: object
      properties:
        brandIdentifier:
          type: string
        enabled:
          type: boolean
        jackpotMinStakeAmount:
          type: number
    api_docs_11_AdminPoolRowUpdateRequest:
      type: object
      properties:
        poolId:
          type: integer
          format: int64
        rowId:
          type: integer
          format: int64
        result:
          type: integer
          format: int32
        cancelled:
          type: boolean
    api_docs_11_AdminJackpotRowDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        poolId:
          type: integer
          format: int64
        result:
          type: string
        cancelled:
          type: boolean
        position:
          type: integer
          format: int32
    api_docs_11_AdminEventResultRequest:
      type: object
      properties:
        poolId:
          type: integer
          format: int64
        eventId:
          type: integer
          format: int64
        scoreHome:
          type: integer
          format: int32
        scoreAway:
          type: integer
          format: int32
        cancelled:
          type: boolean
    api_docs_11_EventDto:
      type: object
      properties:
        eventId:
          type: integer
          format: int64
        position:
          type: integer
          format: int32
        scoreHome:
          type: integer
          format: int32
        scoreAway:
          type: integer
          format: int32
        cancelled:
          type: boolean
        resulted:
          type: boolean
    api_docs_11_TiebreakerResultRequest:
      required:
      - result
      type: object
      properties:
        id:
          type: integer
          format: int64
        result:
          type: integer
          format: int32
    api_docs_11_UpdateTiebreakersResultsRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tiebreakers:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_TiebreakerResultRequest'
    api_docs_11_AdminTiebreakerResultDto:
      type: object
      properties:
        tiebreakerId:
          type: integer
          format: int64
        result:
          type: integer
          format: int32
    api_docs_11_GenericListResponseAdminTiebreakerResultDto:
      type: object
      properties:
        count:
          type: integer
          format: int64
        dataList:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_AdminTiebreakerResultDto'
    api_docs_11_BasicPagination:
      type: object
      properties:
        skip:
          type: integer
          format: int32
        take:
          type: integer
          format: int32
    api_docs_11_TicketListRequest:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        pagination:
          $ref: '#/components/schemas/api_docs_11_BasicPagination'
    api_docs_11_AdminTicketSummaryDto:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        freeTicketsUsed:
          type: integer
          format: int32
        listedTicketDto:
          $ref: '#/components/schemas/api_docs_11_ListedTicketDto'
    api_docs_11_GenericListResponseAdminTicketSummaryDto:
      type: object
      properties:
        count:
          type: integer
          format: int64
        dataList:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_AdminTicketSummaryDto'
    api_docs_11_ListedTicketDto:
      type: object
      properties:
        id:
          type: string
        purchaseDate:
          type: string
          format: date-time
        pool:
          $ref: '#/components/schemas/api_docs_11_PoolSummaryDto'
        status:
          type: string
          enum:
          - PENDING
          - LOST
          - WON
          - CANCELLED
        rows:
          type: integer
          format: int32
        selection:
          type: string
    api_docs_11_PoolSummaryDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        poolStatus:
          type: string
          enum:
          - CLOSED
          - ACTIVE
          - SCHEDULED
          - IN_CANCELLATION
          - IN_CONFIRMATION
          - CANCELLED
          - CONFIRMED
        openTime:
          type: string
          format: date-time
        closeTime:
          type: string
          format: date-time
        type:
          type: string
          enum:
          - MULTI_EVENTS
          - SINGLE_EVENT
          - FREE_FORM
          - MULTIJURISDICTION
        fee:
          type: number
        currencyCode:
          type: string
        maxPrize:
          type: number
        rowCount:
          type: integer
          format: int32
    api_docs_11_TemplateEditRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    api_docs_11_TemplateDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        active:
          type: boolean
        strategy:
          type: string
        eventCount:
          type: integer
          format: int32
    api_docs_11_GenericListRequest:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/api_docs_11_BasicPagination'
    api_docs_11_GenericListResponseTemplateDetailedDto:
      type: object
      properties:
        count:
          type: integer
          format: int64
        dataList:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_TemplateDetailedDto'
    api_docs_11_TemplateDetailedDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        templatePrizes:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_TemplatePrizeDto'
        name:
          type: string
        active:
          type: boolean
        strategy:
          type: string
        eventCount:
          type: integer
          format: int32
    api_docs_11_TemplatePrizeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        templateId:
          type: integer
          format: int64
        mistakes:
          type: integer
          format: int32
        prizePercentage:
          type: integer
          format: int32
    api_docs_11_TemplateAddRequest:
      type: object
      properties:
        cut:
          type: integer
          format: int32
        name:
          type: string
        eventCount:
          type: integer
          format: int32
        mistakes:
          type: integer
          format: int32
        strategy:
          type: string
        prizePercentages:
          type: array
          items:
            type: integer
            format: int32
    api_docs_11_TemplateAddResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        active:
          type: boolean
        strategy:
          type: string
        eventCount:
          type: integer
          format: int32
        templatePrizes:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_TemplatePrizeDto'
    api_docs_11_PoolResultRequest:
      type: object
      properties:
        poolId:
          type: integer
          format: int64
        events:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_EventDto'
    api_docs_11_BooleanResponse:
      type: object
      properties:
        value:
          type: boolean
    api_docs_11_PoolAdminRequest:
      type: object
      properties:
        skip:
          type: integer
          format: int32
        take:
          type: integer
          format: int32
        orderBy:
          type: string
        direction:
          type: boolean
        status:
          type: string
    api_docs_11_GenericListResponsePoolListDto:
      type: object
      properties:
        count:
          type: integer
          format: int64
        dataList:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_PoolListDto'
    api_docs_11_PoolListDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        jurisdictionNames:
          type: array
          items:
            type: string
        name:
          type: string
        openTime:
          type: string
          format: date-time
        closeTime:
          type: string
          format: date-time
        templateName:
          type: string
        resultedBy:
          type: string
        confirmedBy:
          type: string
    api_docs_11_BrandSettingsRequest:
      type: object
      properties:
        brands:
          type: array
          items:
            type: string
    api_docs_11_BrandSettingsResponse:
      type: object
      properties:
        brandsSettings:
          type: object
          additionalProperties:
            type: number
    api_docs_11_CategoryAddRequest:
      type: object
      properties:
        name:
          type: string
        values:
          type: array
          items:
            type: string
        translations:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_CategoryTranslationAddRequest'
    api_docs_11_CategoryTranslationAddRequest:
      type: object
      properties:
        name:
          type: string
        values:
          type: array
          items:
            type: string
        language:
          type: string
    api_docs_11_CurrencyRateDto:
      type: object
      properties:
        brandIdentifier:
          type: string
        rate:
          type: number
    api_docs_11_PoolBrandAddDto:
      type: object
      properties:
        fee:
          type: number
        prizes:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_PrizeAddRequest'
        brandIdentifier:
          type: string
    api_docs_11_PoolCreationDto:
      type: object
      properties:
        name:
          type: string
        nameTranslations:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_TranslatedTextRequest'
        offset:
          type: integer
          format: int64
        templateId:
          type: integer
          format: int64
        description:
          type: string
        descriptionTranslations:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_TranslatedTextRequest'
        openDate:
          type: string
          format: date-time
        closeDate:
          type: string
          format: date-time
        priorityOrder:
          type: integer
          format: int32
        presentation:
          type: string
    api_docs_11_PoolCreationRequest:
      type: object
      properties:
        poolCreationDto:
          $ref: '#/components/schemas/api_docs_11_PoolCreationDto'
        eventIds:
          type: array
          items:
            type: integer
            format: int64
        poolJurisdictions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_PoolBrandAddDto'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_CategoryAddRequest'
        payouts:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_PrizeAddRequest'
        fee:
          type: number
        exchangeRates:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_CurrencyRateDto'
        tiebreakersData:
          $ref: '#/components/schemas/api_docs_11_TiebreakersDataRequest'
    api_docs_11_PrizeAddRequest:
      type: object
      properties:
        templatePrizeId:
          type: integer
          format: int64
        seed:
          type: integer
          format: int32
        rolledOver:
          type: integer
          format: int32
    api_docs_11_TieLosersConfigDto:
      type: object
      properties:
        minimumTieloserPercent:
          type: number
        minimumTieloserPayout:
          type: number
    api_docs_11_TiebreakerCreationRequest:
      type: object
      properties:
        defaultText:
          type: string
        position:
          type: integer
          format: int32
        translations:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_TranslatedTextRequest'
    api_docs_11_TiebreakersDataRequest:
      type: object
      properties:
        tielosersConfig:
          $ref: '#/components/schemas/api_docs_11_TieLosersConfigDto'
        tiebreakers:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_TiebreakerCreationRequest'
    api_docs_11_PoolCancellationVerdictRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        verdictType:
          type: string
          enum:
          - APPROVED
          - DECLINED
    api_docs_11_FreeTicketRequest:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        pagination:
          $ref: '#/components/schemas/api_docs_11_BasicPagination'
    api_docs_11_FreeTicketSummaryDto:
      type: object
      properties:
        poolName:
          type: string
        ticketCount:
          type: integer
          format: int32
        usedCount:
          type: integer
          format: int32
        validFromTime:
          type: string
          format: date-time
    api_docs_11_GenericListResponseFreeTicketSummaryDto:
      type: object
      properties:
        count:
          type: integer
          format: int64
        dataList:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_FreeTicketSummaryDto'
    api_docs_11_FreeTicketAddRequest:
      type: object
      properties:
        poolId:
          type: integer
          format: int64
        brandIdentifier:
          type: string
        ticketCount:
          type: integer
          format: int32
        userIds:
          type: array
          items:
            type: string
            format: uuid
        validFromTime:
          type: string
          format: date-time
          example: '2022-02-14T13:00:00Z'
        duplicatesCheck:
          type: boolean
    api_docs_11_FreeTicketAddResponse:
      type: object
      properties:
        userIds:
          type: array
          items:
            type: string
            format: uuid
    api_docs_11_UserSearchRequest:
      type: object
      properties:
        poolTicketId:
          type: integer
          format: int64
    api_docs_11_UserSearchResponse:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        found:
          type: boolean
    api_docs_11_CorrectCountDownloadRequest:
      required:
      - minCorrect
      - poolJurisdictionIds
      type: object
      properties:
        minCorrect:
          type: integer
          format: int32
        poolJurisdictionIds:
          type: array
          items:
            type: integer
            format: int64
    api_docs_11_RollbackRequest:
      type: object
      properties:
        poolId:
          type: integer
          format: int64
    api_docs_11_AdminInfo:
      type: object
      properties:
        adminUuid:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
    api_docs_11_UserTicketsResponse:
      type: object
      properties:
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_ListedTicketDto'
        hasMore:
          type: boolean
    api_docs_11_LegacySupport:
      type: object
      properties:
        currencyFormat:
          type: string
        strategy:
          type: string
        jurisdiction:
          type: string
    api_docs_11_MarketingDto:
      type: object
      properties:
        priorityOrder:
          type: integer
          format: int32
        presentation:
          type: string
    api_docs_11_PoolResponse:
      type: object
      properties:
        pool:
          $ref: '#/components/schemas/api_docs_11_PoolDto'
        marketing:
          $ref: '#/components/schemas/api_docs_11_MarketingDto'
        user:
          $ref: '#/components/schemas/api_docs_11_PoolUserDto'
        legacySupport:
          $ref: '#/components/schemas/api_docs_11_LegacySupport'
    api_docs_11_PoolUserDto:
      type: object
      properties:
        freeTicketCount:
          type: integer
          format: int32
    api_docs_11_ResultedPoolsResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_PoolResponse'
        total:
          type: integer
          format: int64
    api_docs_11_ActivePoolsResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_PoolResponse'
        total:
          type: integer
          format: int64
    api_docs_11_EventDetail:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        live:
          type: boolean
        started:
          type: boolean
        groupName:
          type: string
        scoreHome:
          type: integer
          format: int32
        scoreAway:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        marketId:
          type: integer
          format: int64
    api_docs_11_EventHitsDto:
      type: object
      properties:
        row:
          type: integer
          format: int32
        hits:
          type: integer
          format: int32
    api_docs_11_EventsDetailedDto:
      type: object
      properties:
        eventDetail:
          $ref: '#/components/schemas/api_docs_11_EventDetail'
        position:
          type: integer
          format: int32
    api_docs_11_Hits:
      type: object
      properties:
        row:
          type: integer
          format: int32
        hits:
          type: integer
          format: int32
    api_docs_11_JackpotRowDto:
      type: object
      properties:
        name:
          type: string
        picks:
          type: array
          items:
            type: string
        result:
          type: string
    api_docs_11_PrizeDetailedDto:
      type: object
      properties:
        prizeDto:
          $ref: '#/components/schemas/api_docs_11_PrizeDto'
        mistakes:
          type: integer
          format: int32
        prizePercentage:
          type: integer
          format: int32
        hits:
          $ref: '#/components/schemas/api_docs_11_EventHitsDto'
        currencyCode:
          type: string
        taxAmount:
          type: number
    api_docs_11_PrizeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        poolJurisdictionId:
          type: integer
          format: int64
        seed:
          type: number
        rolledOver:
          type: number
        templatePrizeId:
          type: integer
          format: int64
        wonPerTicket:
          type: number
        wonTickets:
          type: integer
          format: int32
    api_docs_11_TicketDetailsResponse:
      type: object
      properties:
        listedTicketDto:
          $ref: '#/components/schemas/api_docs_11_ListedTicketDto'
        freeTicketsUsed:
          type: integer
          format: int32
        eventsDetailedDtos:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_EventsDetailedDto'
        prizeDetailedDtos:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_PrizeDetailedDto'
        hits:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_Hits'
        jackpotRowDtos:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_JackpotRowDto'
        tiebreakers:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_TiebreakerUserAnswersDto'
        tiebreakersParticipant:
          type: boolean
        tiewinner:
          type: boolean
        tiebreakersStatistics:
          $ref: '#/components/schemas/api_docs_11_TiebreakersStatisticsResponse'
    api_docs_11_TiebreakerUserAnswersDto:
      required:
      - question
      type: object
      properties:
        tiebreakerId:
          type: integer
          format: int64
        position:
          type: integer
          format: int32
        question:
          type: string
        answer:
          type: integer
          format: int32
        correctAnswer:
          type: integer
          format: int32
        isAnswerCorrect:
          type: boolean
    api_docs_11_TiebreakersStatisticsResponse:
      type: object
      properties:
        tiebreakersWinners:
          type: integer
          format: int64
        tiebreakersWinnersPayout:
          type: number
        tiebreakerLosers:
          type: integer
          format: int64
        tiebreakersLosersPayout:
          type: number
    api_docs_11_AdminDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        brandId:
          type: string
    api_docs_11_EventDetailedDto:
      type: object
      properties:
        eventInfo:
          $ref: '#/components/schemas/api_docs_11_EventDto'
        name:
          type: string
        live:
          type: boolean
        started:
          type: boolean
        groupName:
          type: string
        poolId:
          type: integer
          format: int64
        startDate:
          type: string
          format: date-time
    api_docs_11_JackpotRowDetailedDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        position:
          type: integer
          format: int32
        result:
          type: string
        cancelled:
          type: boolean
        values:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_RowOutcomeDto'
        translations:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_RowTranslation'
    api_docs_11_MultiJurisdictionExtension:
      type: object
      properties:
        exchangeRates:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_CurrencyRateDto'
        payoutTime:
          type: string
          format: date-time
        fee:
          type: number
        prizes:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_PrizeDto'
    api_docs_11_PoolDetailedDto:
      type: object
      properties:
        poolDto:
          $ref: '#/components/schemas/api_docs_11_PoolDto'
        admin1:
          $ref: '#/components/schemas/api_docs_11_AdminDto'
        admin2:
          $ref: '#/components/schemas/api_docs_11_AdminDto'
        template:
          $ref: '#/components/schemas/api_docs_11_TemplateDetailedDto'
        events:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_EventDetailedDto'
        jackpotRows:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_JackpotRowDetailedDto'
        poolJurisdictions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_PoolJurisdictionDetailedDto'
        poolType:
          type: string
        poolStatus:
          type: string
          enum:
          - CLOSED
          - ACTIVE
          - SCHEDULED
          - IN_CANCELLATION
          - IN_CONFIRMATION
          - CANCELLED
          - CONFIRMED
        multiJurisdictionExtension:
          $ref: '#/components/schemas/api_docs_11_MultiJurisdictionExtension'
        tiebreakersData:
          $ref: '#/components/schemas/api_docs_11_TiebreakersDataResponse'
        cancellationRequestedBy:
          type: string
          format: uuid
        cancellationConfirmedBy:
          type: string
          format: uuid
    api_docs_11_PoolJurisdictionDetailedDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        poolId:
          type: integer
          format: int64
        fee:
          type: number
        currencyId:
          type: integer
          format: int32
        brandId:
          type: string
        payoutTime:
          type: string
          format: date-time
        currencyCode:
          type: string
        prizes:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_PrizeDto'
    api_docs_11_RowOutcomeDto:
      type: object
      properties:
        value:
          type: string
        position:
          type: integer
          format: int32
    api_docs_11_RowTranslation:
      type: object
      properties:
        language:
          type: string
        name:
          type: string
        values:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_RowOutcomeDto'
    api_docs_11_TiebreakerAdminViewDto:
      required:
      - question
      type: object
      properties:
        tiebreakerId:
          type: integer
          format: int64
        position:
          type: integer
          format: int32
        question:
          $ref: '#/components/schemas/api_docs_11_TranslationDto'
        correctAnswer:
          type: integer
          format: int32
    api_docs_11_TiebreakersDataResponse:
      type: object
      properties:
        tieLosersConfig:
          $ref: '#/components/schemas/api_docs_11_TieLosersConfigDto'
        tiebreakers:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_11_TiebreakerAdminViewDto'
    api_docs_12_AddUserDerivedDataRequest:
      type: object
      properties:
        key:
          type: string
          description: Use service/team/brand prefix to avoid colliding with already
            existing keys
          example: language
        value:
          type: string
      required:
      - key
      - value
    api_docs_12_PreregistrationRequest:
      type: object
      properties:
        phoneNumber:
          type: string
      required:
      - phoneNumber
    api_docs_12_DerivedDataMetadataDto:
      type: object
      properties:
        keyName:
          type: string
          description: Immutable Key name for 'UserDerivedData' values
        accessModifier:
          type: string
          description: Access modifier for 'UserDerivedData' values
          enum:
          - PUBLIC
          - PROTECTED
          - PRIVATE
        specification:
          type: string
          description: Description for 'UserDerivedData' values
        type:
          type: string
          description: Type of the value
          enum:
          - BOOLEAN
          - NUMBER
          - STRING
      required:
      - accessModifier
      - keyName
    api_docs_12_UserComponentRequest:
      type: object
      properties:
        host:
          type: string
        port:
          type: integer
          format: int32
        cacheInSeconds:
          type: integer
          format: int32
        brandIdentifier:
          type: string
      required:
      - brandIdentifier
      - cacheInSeconds
      - host
      - port
    api_docs_12_BrandComponentRequest:
      type: object
      properties:
        brandIdentifier:
          type: string
        language:
          type: string
          description: Leave it blank if no translations needed
        data:
          type: string
          description: Static data as JSON for the component.
          example:
            key: value
      required:
      - brandIdentifier
      - data
      - language
    api_docs_12_ComponentDataRequest:
      type: object
      properties:
        components:
          type: array
          description: Set of component names to load
          items:
            type: string
          uniqueItems: true
    api_docs_12_JsonNode:
      type: object
    api_docs_12_DerivedDataMetadataForMultipleBrandsRequest:
      type: object
      properties:
        brands:
          type: array
          items:
            type: string
        derivedDataMetadataDto:
          $ref: '#/components/schemas/api_docs_12_DerivedDataMetadataDto'
      required:
      - brands
    api_docs_12_MetadataChangesSearchRequest:
      type: object
      properties:
        key:
          type: string
    api_docs_12_ChangeRecord:
      type: object
      properties:
        changeType:
          type: string
        timestamp:
          type: string
          format: date-time
        propertyName:
          type: string
        left:
          type: object
        right:
          type: object
        author:
          type: string
    api_docs_12_MetadataChanges:
      type: object
      properties:
        changes:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_12_ChangeRecord'
    api_docs_12_UserDerivedDataResponse:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: string
    api_docs_12_ErrorResponse:
      type: object
      properties:
        error:
          type: string
        uuid:
          type: string
        params:
          type: array
          items:
            type: string
        payload:
          type: object
          additionalProperties:
            type: object
    api_docs_12_UserDerivedDataByKeyResponse:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    api_docs_12_MetadataList:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_12_DerivedDataMetadataDto'
    api_docs_12_AbstractComponentResponse:
      type: object
      properties:
        name:
          type: string
        brandIdentifier:
          type: string
    api_docs_12_DeleteDerivedDataMetadataDto:
      type: object
      properties:
        keyName:
          type: string
          description: Immutable Key name for 'UserDerivedData' values
      required:
      - keyName
    api_docs_13_CreateUpdateConfigurationRuleRequest:
      required:
      - filterValue
      - stakedAmountRate
      - transactionFilter
      type: object
      properties:
        stakedAmountRate:
          minimum: 0.0
          exclusiveMinimum: true
          type: number
          description: Percent of staked amount to be accumulated into jackpot amount
        transactionFilter:
          type: string
          description: Progressive jackpot transaction filter
          enum:
          - CATEGORY
          - TRANSACTION_TYPE
          - CASINO_PROVIDER
          - CASINO_GAME
        filterValue:
          type: string
          description: Progressive jackpot transaction filter value
    api_docs_13_ConfigurationRuleResponse:
      type: object
      properties:
        uuid:
          type: string
          description: Progressive jackpot rule UUID
          format: uuid
        stakedAmountRate:
          type: number
          description: Percent of staked amount to be accumulated into jackpot amount
        transactionFilter:
          type: string
          description: Progressive jackpot transaction filter
          enum:
          - CATEGORY
          - TRANSACTION_TYPE
          - CASINO_PROVIDER
          - CASINO_GAME
        filterValue:
          type: string
          description: Progressive jackpot transaction filter value
        configurationUuid:
          type: string
          description: Progressive jackpot configuration UUID
          format: uuid
    api_docs_13_JackpotsRequest:
      required:
      - take
      type: object
      properties:
        jackpotType:
          type: string
          enum:
          - SPORT
          - CASINO
          - VIRTUALS
        take:
          maximum: 30
          minimum: 1
          type: integer
          format: int32
    api_docs_13_DisplayNameDs:
      type: object
      properties:
        language:
          type: string
        name:
          type: string
      description: Jackpot user facing name
    api_docs_13_LastEndedJackpotResponse:
      type: object
      properties:
        uuid:
          type: string
          description: Jackpot UUID
          format: uuid
        amount:
          type: number
          description: Won jackpot value
        winnerPhone:
          type: string
          description: Partly hidden phone number of the winner
        winnerName:
          type: string
          description: Full name of the winner
        displayName:
          type: array
          description: Jackpot user facing name
          items:
            $ref: '#/components/schemas/api_docs_13_DisplayNameDs'
        type:
          type: string
          description: Jackpot type
          enum:
          - SPORT
          - CASINO
          - VIRTUALS
        finalized:
          type: string
          description: Progressive jackpot completion date time in UTC
          format: date-time
    api_docs_13_ListResponseLastEndedJackpotResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_13_LastEndedJackpotResponse'
    api_docs_13_JackpotCreationRequest:
      required:
      - configurationUuid
      - startTime
      type: object
      properties:
        configurationUuid:
          type: string
          format: uuid
        startTime:
          type: string
          description: Progressive jackpot start time in UTC
          format: date-time
    api_docs_13_JackpotConfigurationRuleSnapshotResponse:
      type: object
      properties:
        uuid:
          type: string
          description: Progressive jackpot rule UUID
          format: uuid
        stakedAmountRate:
          type: number
          description: Percent of staked amount to be accumulated into jackpot amount
        transactionFilter:
          type: string
          description: Progressive jackpot transaction filter
          enum:
          - CATEGORY
          - TRANSACTION_TYPE
          - CASINO_PROVIDER
          - CASINO_GAME
        filterValue:
          type: string
          description: Progressive jackpot transaction filter value
      description: Progressive jackpot rules
    api_docs_13_JackpotResponse:
      type: object
      properties:
        uuid:
          type: string
          description: Progressive jackpot UUID
          format: uuid
        configurationUuid:
          type: string
          description: Progressive jackpot configuration UUID
          format: uuid
        amount:
          type: number
          description: Progressive jackpot accumulated amount
        bonusAmount:
          type: number
          description: Progressive jackpot accumulated bonus amount
        bonusPerSecond:
          type: number
          description: Progressive jackpot bonus over time
        created:
          type: string
          description: Progressive jackpot creation date time in UTC
          format: date-time
        started:
          type: string
          description: Progressive jackpot start date time in UTC
          format: date-time
          nullable: true
        deadline:
          type: string
          description: Progressive jackpot deadline date time in UTC
          format: date-time
          nullable: true
        finalized:
          type: string
          description: Progressive jackpot completion date time in UTC
          format: date-time
          nullable: true
        status:
          type: string
          description: Progressive jackpot status
          enum:
          - INACTIVE
          - ACTIVE
          - WINNER_SELECTION
          - WINNER_PAYOUT
          - SUSPENDED
          - COMPLETED
        winnerUuid:
          type: string
          description: Winner uuid
          format: uuid
          nullable: true
        dryRun:
          type: boolean
          description: Progressive jackpot dry run indicator. Default true
        name:
          type: string
          description: Progressive jackpot configuration name
        brandIdentifier:
          type: string
          description: Progressive jackpot brand
        amountLimit:
          type: number
          description: Progressive jackpot accumulated amount limit
          nullable: true
        rules:
          type: array
          description: Progressive jackpot rules
          items:
            $ref: '#/components/schemas/api_docs_13_JackpotConfigurationRuleSnapshotResponse'
    api_docs_13_JackpotSummaryQuery:
      type: object
      properties:
        brandIdentifier:
          type: string
        configurationUuid:
          type: string
          format: uuid
        configurationName:
          type: string
        status:
          type: string
          enum:
          - INACTIVE
          - ACTIVE
          - WINNER_SELECTION
          - WINNER_PAYOUT
          - SUSPENDED
          - COMPLETED
        dryRun:
          type: boolean
    api_docs_13_JackpotSummaryRequest:
      required:
      - query
      type: object
      properties:
        skip:
          minimum: 0
          type: integer
          description: Page number taken from previous search response. Default 0
          format: int32
        take:
          minimum: 1
          type: integer
          description: How many configurations to load. Default 100
          format: int32
        query:
          $ref: '#/components/schemas/api_docs_13_JackpotSummaryQuery'
        sortField:
          type: string
          description: Sort by field. Defaults to start time.
          enum:
          - START_TIME
        sortDirection:
          type: string
          description: Sort direction. Defaults to DESC.
          enum:
          - ASC
          - DESC
    api_docs_13_JackpotSummaryRowResponse:
      type: object
      properties:
        uuid:
          type: string
          description: Progressive jackpot configuration UUID
          format: uuid
        brandIdentifier:
          type: string
          description: Progressive jackpot brand
        configurationName:
          type: string
          description: Progressive jackpot configuration name
        startTime:
          type: string
          description: Progressive jackpot start time
          format: date-time
          nullable: true
        amount:
          type: number
          description: Progressive jackpot accumulated amount
        bonusAmount:
          type: number
          description: Progressive jackpot accumulated time based bonus amount
        status:
          type: string
          description: Progressive jackpot status
          enum:
          - INACTIVE
          - ACTIVE
          - WINNER_SELECTION
          - WINNER_PAYOUT
          - SUSPENDED
          - COMPLETED
        dryRun:
          type: boolean
          description: Progressive jackpot dry run flag
      description: Progressive jackpots summary
    api_docs_13_JackpotsSummaryResponse:
      type: object
      properties:
        configurations:
          type: array
          description: Progressive jackpots summary
          items:
            $ref: '#/components/schemas/api_docs_13_JackpotSummaryRowResponse'
    api_docs_13_CreateConfigurationRequest:
      required:
      - brandIdentifier
      - name
      - rules
      type: object
      properties:
        name:
          type: string
          description: Progressive jackpot configuration name
        brandIdentifier:
          type: string
          description: Progressive jackpot brand
        initialAmount:
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Progressive jackpot initial amount. Default is 0
          nullable: true
        amountLimit:
          minimum: 0.0
          exclusiveMinimum: true
          type: number
          description: Progressive jackpot accumulated amount limit
          nullable: true
        bonusPerSecond:
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Progressive Jackpot bonus additionally added each second
          nullable: true
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            zero:
              type: boolean
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  durationEstimated:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                  timeBased:
                    type: boolean
                  dateBased:
                    type: boolean
          description: Jackpot duration expression based on the ISO-8601 duration
            format
          nullable: true
        durationOffset:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            zero:
              type: boolean
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  durationEstimated:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                  timeBased:
                    type: boolean
                  dateBased:
                    type: boolean
          description: Jackpot duration offset based on the ISO-8601 duration format
          nullable: true
        enabled:
          type: boolean
          description: Progressive jackpot enabled indicator. Default true
          nullable: true
        dryRun:
          type: boolean
          description: Progressive jackpot dry run indicator. Default true
          nullable: true
        jackpotSubtype:
          maxLength: 30
          minLength: 0
          type: string
          description: Subtype, e.g. Aviator, JetX, etc
        highlightColor:
          maxLength: 7
          minLength: 0
          type: string
          description: 'Color picker for highlight colour in HEX, e.g. #00FF00'
        textColor:
          maxLength: 7
          minLength: 0
          type: string
          description: 'Color picker for text colour in HEX, e.g. #00FF00'
        rules:
          maxItems: 2147483647
          minItems: 1
          type: array
          description: Progressive jackpot rules. At least one rule must be present
            for the configuration
          items:
            $ref: '#/components/schemas/api_docs_13_CreateUpdateConfigurationRuleRequest'
        triggerConditionSet:
          type: boolean
        timeLimitCorrectlySet:
          type: boolean
        durationOffsetValid:
          type: boolean
        durationValid:
          type: boolean
    api_docs_13_ConfigurationResponse:
      type: object
      properties:
        uuid:
          type: string
          description: Progressive jackpot configuration UUID
          format: uuid
        name:
          type: string
          description: Progressive jackpot configuration name
        brandIdentifier:
          type: string
          description: Progressive jackpot brand
        initialAmount:
          type: number
          description: Progressive jackpot initial amount. Default is 0
        amountLimit:
          type: number
          description: Progressive jackpot accumulated amount limit
          nullable: true
        bonusPerSecond:
          type: number
          description: Progressive jackpot additional bonus added each second
        timeLimitFrom:
          type: string
          description: Progressive jackpot time limit from in UTC
          format: date-time
          nullable: true
        timeLimitTo:
          type: string
          description: Progressive jackpot time limit to in UTC
          format: date-time
          nullable: true
        enabled:
          type: boolean
          description: Progressive jackpot configuration enabled indicator. Default
            true
        dryRun:
          type: boolean
          description: Progressive jackpot configuration dry run indicator. Default
            true
        rules:
          type: array
          description: Progressive jackpot rules
          items:
            $ref: '#/components/schemas/api_docs_13_ConfigurationRuleResponse'
        jackpotSubtype:
          type: string
          description: Subtype, e.g. Aviator, JetX, etc
        highlightColor:
          type: string
          description: 'Color picker for highlight color in HEX, e.g. #00FF00'
        textColor:
          type: string
          description: 'Color picker for text color in HEX, e.g. #00FF00'
        imageUrl:
          type: string
          description: Progressive jackpot image url
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            zero:
              type: boolean
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  durationEstimated:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                  timeBased:
                    type: boolean
                  dateBased:
                    type: boolean
          description: Jackpot duration expression based on the ISO-8601 duration
            format
          nullable: true
        durationOffset:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            zero:
              type: boolean
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  durationEstimated:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                  timeBased:
                    type: boolean
                  dateBased:
                    type: boolean
          description: Jackpot duration offset based on the ISO-8601 duration format
          nullable: true
    api_docs_13_ConfigurationSummaryQuery:
      type: object
      properties:
        brandIdentifier:
          type: string
        name:
          type: string
    api_docs_13_ConfigurationSummaryRequest:
      required:
      - query
      type: object
      properties:
        skip:
          minimum: 0
          type: integer
          description: Page number taken from previous search response. Default 0
          format: int32
        take:
          minimum: 1
          type: integer
          description: How many configurations to load. Default 100
          format: int32
        query:
          $ref: '#/components/schemas/api_docs_13_ConfigurationSummaryQuery'
    api_docs_13_ConfigurationSummaryRowResponse:
      type: object
      properties:
        uuid:
          type: string
          description: Progressive jackpot configuration UUID
          format: uuid
        name:
          type: string
          description: Progressive jackpot configuration name
        brandIdentifier:
          type: string
          description: Progressive jackpot brand
        enabled:
          type: boolean
          description: Progressive jackpot configuration enabled indicator. Default
            true
      description: Progressive jackpot configurations summary
    api_docs_13_ConfigurationsSummaryResponse:
      type: object
      properties:
        configurations:
          type: array
          description: Progressive jackpot configurations summary
          items:
            $ref: '#/components/schemas/api_docs_13_ConfigurationSummaryRowResponse'
    api_docs_13_BlockedParticipantExchange:
      required:
      - userUuids
      type: object
      properties:
        userUuids:
          type: array
          items:
            type: string
            format: uuid
    api_docs_13_UpdateConfigurationRequest:
      required:
      - brandIdentifier
      - name
      type: object
      properties:
        name:
          type: string
          description: Progressive jackpot configuration name
        brandIdentifier:
          type: string
          description: Progressive jackpot brand
        initialAmount:
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Progressive jackpot initial amount. Default is 0
          nullable: true
        amountLimit:
          minimum: 0.0
          exclusiveMinimum: true
          type: number
          description: Progressive jackpot accumulated amount limit
          nullable: true
        bonusPerSecond:
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          description: Progressive Jackpot bonus additionally added each second
          nullable: true
        duration:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            zero:
              type: boolean
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  durationEstimated:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                  timeBased:
                    type: boolean
                  dateBased:
                    type: boolean
          description: Jackpot duration expression based on the ISO-8601 duration
            format
          nullable: true
        durationOffset:
          type: object
          properties:
            seconds:
              type: integer
              format: int64
            zero:
              type: boolean
            nano:
              type: integer
              format: int32
            negative:
              type: boolean
            positive:
              type: boolean
            units:
              type: array
              items:
                type: object
                properties:
                  durationEstimated:
                    type: boolean
                  duration:
                    type: object
                    properties:
                      seconds:
                        type: integer
                        format: int64
                      zero:
                        type: boolean
                      nano:
                        type: integer
                        format: int32
                      negative:
                        type: boolean
                      positive:
                        type: boolean
                  timeBased:
                    type: boolean
                  dateBased:
                    type: boolean
          description: Jackpot duration offset based on the ISO-8601 duration format
          nullable: true
        enabled:
          type: boolean
          description: Progressive jackpot enabled indicator. Default true
          nullable: true
        dryRun:
          type: boolean
          description: Progressive jackpot dry run indicator. Default true
          nullable: true
        jackpotSubtype:
          maxLength: 30
          minLength: 0
          type: string
          description: Subtype, e.g. Aviator, JetX, etc
        highlightColor:
          maxLength: 7
          minLength: 0
          type: string
          description: 'Color picker for highlight colour in HEX, e.g. #00FF00'
        textColor:
          maxLength: 7
          minLength: 0
          type: string
          description: 'Color picker for text colour in HEX, e.g. #00FF00'
        triggerConditionSet:
          type: boolean
        timeLimitCorrectlySet:
          type: boolean
        durationOffsetValid:
          type: boolean
        durationValid:
          type: boolean
    api_docs_13_ActiveJackpotsResponse:
      type: object
      properties:
        jackpots:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_13_JackpotParticipantResponse'
    api_docs_13_JackpotParticipantResponse:
      type: object
      properties:
        uuid:
          type: string
          description: Unique identifier of Jackpot instance
          format: uuid
        amount:
          type: number
          description: Current Jackpot amount
        jackpotSubtype:
          type: string
          description: Subtype, e.g. Aviator, JetX, etc
        jackpotSubtypeHighlightColor:
          type: string
          description: 'Color picker for highlight color in HEX, e.g. #00FF00'
        textColor:
          type: string
          description: 'Color picker for text color in HEX, e.g. #00FF00'
        imageUrl:
          type: string
          description: Progressive jackpot image url
        participant:
          type: boolean
          description: Current user is participant of Jackpot instance
    api_docs_13_ConfigurationFieldsResponse:
      type: object
      properties:
        transactionFilters:
          type: array
          description: Progressive jackpot configuration transaction transactionFilters
            with possible values
          items:
            $ref: '#/components/schemas/api_docs_13_FilterResponse'
        jackpotTypes:
          type: array
          description: Progressive jackpot types
          items:
            type: string
            description: Progressive jackpot types
            enum:
            - SPORT
            - CASINO
            - VIRTUALS
        jackpotFrequencies:
          type: array
          description: Progressive jackpot frequency types
          items:
            type: string
            description: Progressive jackpot frequency types
            enum:
            - HOURLY
            - DAILY
            - WEEKLY
            - MONTHLY
    api_docs_13_FilterResponse:
      type: object
      properties:
        filter:
          type: string
          description: Progressive jackpot configuration transaction filter
          enum:
          - CATEGORY
          - TRANSACTION_TYPE
          - CASINO_PROVIDER
          - CASINO_GAME
        predefinedValues:
          uniqueItems: true
          type: array
          description: Predefined values for filter. If present - values should be
            used for input. If predefined values are missing (null or empty) - text
            input should be used.
          items:
            type: string
            description: Predefined values for filter. If present - values should
              be used for input. If predefined values are missing (null or empty)
              - text input should be used.
      description: Progressive jackpot configuration transaction transactionFilters
        with possible values
    api_docs_14_ErrorResponse:
      type: object
      properties:
        error:
          type: string
        uuid:
          type: string
        params:
          type: array
          items:
            type: string
        payload:
          type: object
          additionalProperties:
            type: object
    api_docs_14_RegionDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        parentId:
          type: integer
          format: int32
        iso:
          type: string
    api_docs_14_ResponseRegionDto:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_14_RegionDto'
        totalCount:
          type: integer
          format: int32
    api_docs_14_CountryDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        iso:
          type: string
        regionId:
          type: integer
          format: int32
    api_docs_15_SelectionListRequest:
      type: object
      properties:
        selections:
          type: array
          example:
          - 100500
          items:
            type: string
          maxItems: 100
          minItems: 1
      required:
      - selections
    api_docs_15_GenericListResponseOddsSelectionResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_OddsSelectionResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_15_OddsSelectionResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        typeId:
          type: string
        price:
          type: number
        suspended:
          type: boolean
        handicap:
          type: string
        probability:
          $ref: '#/components/schemas/api_docs_15_Probability'
    api_docs_15_Probability:
      type: object
      properties:
        win:
          type: number
          format: double
        refund:
          type: number
          format: double
    api_docs_15_EventSelectionTupleResponse:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/api_docs_15_EventShortInfo'
        market:
          $ref: '#/components/schemas/api_docs_15_MarketShortInfo'
        price:
          $ref: '#/components/schemas/api_docs_15_PriceResponse'
    api_docs_15_EventShortAdditionalInfo:
      type: object
      properties:
        live:
          type: boolean
    api_docs_15_EventShortInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        startTime:
          type: string
          format: date-time
        additionalInfo:
          $ref: '#/components/schemas/api_docs_15_EventShortAdditionalInfo'
    api_docs_15_GenericListResponseEventSelectionTupleResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_EventSelectionTupleResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_15_MarketShortAdditionalInfo:
      type: object
      properties:
        cashoutable:
          type: boolean
        twoUp:
          type: boolean
    api_docs_15_MarketShortInfo:
      type: object
      properties:
        marketType:
          $ref: '#/components/schemas/api_docs_15_MarketTypeShortInfo'
        handicap:
          type: integer
          format: int32
        handicapType:
          type: string
        additionalInfo:
          $ref: '#/components/schemas/api_docs_15_MarketShortAdditionalInfo'
    api_docs_15_MarketTypeShortInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
    api_docs_15_PriceAdditionalInfo:
      type: object
      properties:
        hot:
          type: boolean
    api_docs_15_PriceResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        typeId:
          type: string
        price:
          type: number
        suspended:
          type: boolean
        handicap:
          type: string
        position:
          type: integer
          format: int32
        displayName:
          type: string
        additionalInfo:
          $ref: '#/components/schemas/api_docs_15_PriceAdditionalInfo'
        probability:
          $ref: '#/components/schemas/api_docs_15_Probability'
    api_docs_15_GenericListResponsePriceResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_PriceResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_15_EventSelectionAdditionalInfo:
      type: object
      properties:
        live:
          type: boolean
        cashoutable:
          type: boolean
        twoUp:
          type: boolean
    api_docs_15_EventSelectionResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        typeId:
          type: string
        category:
          $ref: '#/components/schemas/api_docs_15_IdName'
        region:
          $ref: '#/components/schemas/api_docs_15_IdName'
        competition:
          $ref: '#/components/schemas/api_docs_15_IdName'
        event:
          $ref: '#/components/schemas/api_docs_15_IdName'
        startTime:
          type: string
          format: date-time
        market:
          $ref: '#/components/schemas/api_docs_15_ShortMarketInfo'
        price:
          type: number
        additionalInfo:
          $ref: '#/components/schemas/api_docs_15_EventSelectionAdditionalInfo'
    api_docs_15_GenericListResponseEventSelectionResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_EventSelectionResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_15_Handicap:
      type: object
      properties:
        value:
          type: integer
          format: int32
        type:
          type: string
        text:
          type: string
    api_docs_15_IdName:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    api_docs_15_ShortMarketInfo:
      type: object
      properties:
        typeId:
          type: string
        name:
          type: string
        displayName:
          type: string
        handicap:
          $ref: '#/components/schemas/api_docs_15_Handicap'
    api_docs_15_DisplayResponse:
      type: object
      properties:
        minute:
          type: string
        currentPeriod:
          $ref: '#/components/schemas/api_docs_15_PeriodResponse'
        currentServer:
          type: string
    api_docs_15_EventAdditionalInfo:
      type: object
      properties:
        live:
          type: boolean
    api_docs_15_EventWithPricesByMarketResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        results:
          $ref: '#/components/schemas/api_docs_15_ResultsResponse'
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_WidgetResponse'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_ParticipantResponse'
        startTime:
          type: string
          format: date-time
        markets:
          type: array
          description: Market grouped by market type
          items:
            $ref: '#/components/schemas/api_docs_15_GroupedMarketResponse'
        totalMarketCount:
          type: integer
          format: int64
        category:
          $ref: '#/components/schemas/api_docs_15_IdName'
        region:
          $ref: '#/components/schemas/api_docs_15_IdName'
        competition:
          $ref: '#/components/schemas/api_docs_15_IdName'
        additionalInfo:
          $ref: '#/components/schemas/api_docs_15_EventAdditionalInfo'
        score:
          type: number
          format: double
        neutralVenue:
          type: boolean
        inplayBooked:
          type: boolean
        version:
          type: integer
          format: int64
    api_docs_15_GenericListResponseEventWithPricesByMarketResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_EventWithPricesByMarketResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_15_GroupedMarketResponse:
      type: object
      properties:
        marketType:
          $ref: '#/components/schemas/api_docs_15_MarketType'
        row:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_MarketDto'
        displayNameRows:
          type: array
          description: If markets has row-names to display we put it to this array
          items:
            type: string
        displayNameColumns:
          type: array
          description: If markets has column-names to display we put it to this array
          items:
            type: string
        additionalInfo:
          $ref: '#/components/schemas/api_docs_15_MarketAdditionalInfo'
    api_docs_15_MarketAdditionalInfo:
      type: object
      properties:
        boosted:
          type: boolean
        cashoutable:
          type: boolean
        twoUp:
          type: boolean
    api_docs_15_MarketDto:
      type: object
      properties:
        id:
          type: string
        handicap:
          type: integer
          format: int32
        formattedHandicap:
          type: string
        prices:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_PriceResponse'
    api_docs_15_MarketType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
        explainer:
          type: string
        priority:
          type: integer
          format: int32
        tabs:
          type: array
          items:
            type: string
        handicapType:
          type: string
        priceColumnCount:
          type: integer
          format: int32
        priceSortingMethod:
          type: string
    api_docs_15_ParticipantPeriodResultResponse:
      type: object
      properties:
        participant:
          $ref: '#/components/schemas/api_docs_15_ParticipantResponse'
        periodResults:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_PeriodResultResponse'
    api_docs_15_ParticipantResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        position:
          type: integer
          format: int32
    api_docs_15_PeriodResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
    api_docs_15_PeriodResultResponse:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/api_docs_15_PeriodResponse'
        result:
          type: string
        type:
          type: string
    api_docs_15_ResultsResponse:
      type: object
      properties:
        display:
          $ref: '#/components/schemas/api_docs_15_DisplayResponse'
        participantPeriodResults:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_ParticipantPeriodResultResponse'
    api_docs_15_WidgetResponse:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
    api_docs_15_CompetitionStandingResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        participantStandings:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_ParticipantStandingResponse'
    api_docs_15_ParticipantStandingResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        position:
          type: integer
          format: int32
        points:
          $ref: '#/components/schemas/api_docs_15_PointsStandingResponse'
        scoreStanding:
          $ref: '#/components/schemas/api_docs_15_ScoreStandingResponse'
        form:
          type: array
          items:
            type: string
    api_docs_15_PointsStandingResponse:
      type: object
      properties:
        total:
          type: integer
          format: int32
        won:
          type: integer
          format: int32
        drew:
          type: integer
          format: int32
        lost:
          type: integer
          format: int32
    api_docs_15_ScoreStandingResponse:
      type: object
      properties:
        scored:
          type: integer
          format: int32
        conceded:
          type: integer
          format: int32
    api_docs_15_StandingResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        competitionStandings:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_CompetitionStandingResponse'
    api_docs_15_GenericListResponseSeasonResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_SeasonResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_15_RoundResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        tradingTime:
          $ref: '#/components/schemas/api_docs_15_TradingInfoResponse'
    api_docs_15_SeasonResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        matchSeconds:
          type: integer
          format: int32
        realWorldMatchSeconds:
          type: integer
          format: int32
        tradingTime:
          $ref: '#/components/schemas/api_docs_15_TradingInfoResponse'
        rounds:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_RoundResponse'
    api_docs_15_TradingInfoResponse:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    api_docs_15_CurrentPeriodResponse:
      type: object
      properties:
        historicId:
          type: integer
          format: int32
    api_docs_15_EventWithPricesResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        results:
          $ref: '#/components/schemas/api_docs_15_ResultsResponse'
        scoreboard:
          $ref: '#/components/schemas/api_docs_15_ScoreboardResponse'
          deprecated: true
        widget:
          $ref: '#/components/schemas/api_docs_15_WidgetResponse'
          deprecated: true
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_WidgetResponse'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_ParticipantResponse'
        startTime:
          type: string
          format: date-time
        markets:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_MarketResponse'
        totalMarketCount:
          type: integer
          format: int32
        category:
          $ref: '#/components/schemas/api_docs_15_IdName'
        region:
          $ref: '#/components/schemas/api_docs_15_IdName'
        competition:
          $ref: '#/components/schemas/api_docs_15_IdName'
        additionalInfo:
          $ref: '#/components/schemas/api_docs_15_EventAdditionalInfo'
        score:
          type: number
          format: double
        neutralVenue:
          type: boolean
        version:
          type: integer
          format: int64
    api_docs_15_GenericListResponseEventWithPricesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_EventWithPricesResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_15_MarketResponse:
      type: object
      properties:
        marketType:
          $ref: '#/components/schemas/api_docs_15_MarketType'
        handicap:
          type: integer
          format: int32
        handicapType:
          type: string
        pricePresentation:
          type: string
          deprecated: true
        prices:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_15_PriceResponse'
        additionalInfo:
          $ref: '#/components/schemas/api_docs_15_MarketAdditionalInfo'
    api_docs_15_MatchScoreResponse:
      type: object
      properties:
        scoreHome:
          type: string
        scoreAway:
          type: string
    api_docs_15_MatchStateResponse:
      type: object
      properties:
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
    api_docs_15_ScoreboardResponse:
      type: object
      properties:
        matchState:
          $ref: '#/components/schemas/api_docs_15_MatchStateResponse'
        matchScore:
          $ref: '#/components/schemas/api_docs_15_MatchScoreResponse'
        display:
          $ref: '#/components/schemas/api_docs_15_DisplayResponse'
        currentPeriod:
          $ref: '#/components/schemas/api_docs_15_CurrentPeriodResponse'
    api_docs_16_SearchRequest:
      type: object
      properties:
        name:
          type: string
          example: eng
          maxLength: 2147483647
          minLength: 3
      required:
      - name
    api_docs_16_CategoryStaticMeta:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        priority:
          type: integer
          format: int32
    api_docs_16_CompetitionSearchResponse:
      type: object
      properties:
        competition:
          $ref: '#/components/schemas/api_docs_16_CompetitionStaticMeta'
        region:
          $ref: '#/components/schemas/api_docs_16_RegionStaticMeta'
        category:
          $ref: '#/components/schemas/api_docs_16_CategoryStaticMeta'
    api_docs_16_CompetitionStaticMeta:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        priority:
          type: integer
          format: int32
    api_docs_16_DisplayResponse:
      type: object
      properties:
        minute:
          type: string
        currentPeriod:
          $ref: '#/components/schemas/api_docs_16_PeriodResponse'
        currentServer:
          type: string
    api_docs_16_EventAdditionalInfo:
      type: object
      properties:
        live:
          type: boolean
    api_docs_16_EventWithPricesByMarketResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        results:
          $ref: '#/components/schemas/api_docs_16_ResultsResponse'
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_WidgetResponse'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_ParticipantResponse'
        startTime:
          type: string
          format: date-time
        markets:
          type: array
          description: Market grouped by market type
          items:
            $ref: '#/components/schemas/api_docs_16_GroupedMarketResponse'
        totalMarketCount:
          type: integer
          format: int64
        category:
          $ref: '#/components/schemas/api_docs_16_IdName'
        region:
          $ref: '#/components/schemas/api_docs_16_IdName'
        competition:
          $ref: '#/components/schemas/api_docs_16_IdName'
        additionalInfo:
          $ref: '#/components/schemas/api_docs_16_EventAdditionalInfo'
        score:
          type: number
          format: double
        neutralVenue:
          type: boolean
        inplayBooked:
          type: boolean
        version:
          type: integer
          format: int64
    api_docs_16_GroupedMarketResponse:
      type: object
      properties:
        marketType:
          $ref: '#/components/schemas/api_docs_16_MarketType'
        row:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_MarketDto'
        displayNameRows:
          type: array
          description: If markets has row-names to display we put it to this array
          items:
            type: string
        displayNameColumns:
          type: array
          description: If markets has column-names to display we put it to this array
          items:
            type: string
        additionalInfo:
          $ref: '#/components/schemas/api_docs_16_MarketAdditionalInfo'
    api_docs_16_IdName:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    api_docs_16_MarketAdditionalInfo:
      type: object
      properties:
        boosted:
          type: boolean
        cashoutable:
          type: boolean
        twoUp:
          type: boolean
    api_docs_16_MarketDto:
      type: object
      properties:
        id:
          type: string
        handicap:
          type: integer
          format: int32
        formattedHandicap:
          type: string
        prices:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_PriceResponse'
    api_docs_16_MarketType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
        explainer:
          type: string
        priority:
          type: integer
          format: int32
        tabs:
          type: array
          items:
            type: string
        handicapType:
          type: string
        priceColumnCount:
          type: integer
          format: int32
        priceSortingMethod:
          type: string
    api_docs_16_ParticipantPeriodResultResponse:
      type: object
      properties:
        participant:
          $ref: '#/components/schemas/api_docs_16_ParticipantResponse'
        periodResults:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_PeriodResultResponse'
    api_docs_16_ParticipantResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        position:
          type: integer
          format: int32
    api_docs_16_PeriodResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
    api_docs_16_PeriodResultResponse:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/api_docs_16_PeriodResponse'
        result:
          type: string
        type:
          type: string
    api_docs_16_PriceAdditionalInfo:
      type: object
      properties:
        hot:
          type: boolean
    api_docs_16_PriceResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        typeId:
          type: string
        price:
          type: number
        suspended:
          type: boolean
        handicap:
          type: string
        position:
          type: integer
          format: int32
        displayName:
          type: string
        additionalInfo:
          $ref: '#/components/schemas/api_docs_16_PriceAdditionalInfo'
        probability:
          $ref: '#/components/schemas/api_docs_16_Probability'
    api_docs_16_Probability:
      type: object
      properties:
        win:
          type: number
          format: double
        refund:
          type: number
          format: double
    api_docs_16_RegionStaticMeta:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        iso:
          type: string
        slug:
          type: string
        parentId:
          type: string
        parentSlug:
          type: string
    api_docs_16_ResultsResponse:
      type: object
      properties:
        display:
          $ref: '#/components/schemas/api_docs_16_DisplayResponse'
        participantPeriodResults:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_ParticipantPeriodResultResponse'
    api_docs_16_SearchResponseV2:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_EventWithPricesByMarketResponse'
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_CompetitionSearchResponse'
    api_docs_16_WidgetResponse:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
    api_docs_16_SelectionListRequest:
      type: object
      properties:
        selections:
          type: array
          example:
          - 100500
          items:
            type: string
          maxItems: 100
          minItems: 1
      required:
      - selections
    api_docs_16_GenericListResponseOddsSelectionResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_OddsSelectionResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_16_OddsSelectionResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        typeId:
          type: string
        price:
          type: number
        suspended:
          type: boolean
        handicap:
          type: string
        probability:
          $ref: '#/components/schemas/api_docs_16_Probability'
    api_docs_16_EventSelectionTupleResponse:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/api_docs_16_EventShortInfo'
        market:
          $ref: '#/components/schemas/api_docs_16_MarketShortInfo'
        price:
          $ref: '#/components/schemas/api_docs_16_PriceResponse'
    api_docs_16_EventShortAdditionalInfo:
      type: object
      properties:
        live:
          type: boolean
    api_docs_16_EventShortInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        startTime:
          type: string
          format: date-time
        additionalInfo:
          $ref: '#/components/schemas/api_docs_16_EventShortAdditionalInfo'
    api_docs_16_GenericListResponseEventSelectionTupleResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_EventSelectionTupleResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_16_MarketShortAdditionalInfo:
      type: object
      properties:
        cashoutable:
          type: boolean
        twoUp:
          type: boolean
    api_docs_16_MarketShortInfo:
      type: object
      properties:
        marketType:
          $ref: '#/components/schemas/api_docs_16_MarketTypeShortInfo'
        handicap:
          type: integer
          format: int32
        handicapType:
          type: string
        additionalInfo:
          $ref: '#/components/schemas/api_docs_16_MarketShortAdditionalInfo'
    api_docs_16_MarketTypeShortInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        displayName:
          type: string
    api_docs_16_BookingCodeResponse:
      type: object
      properties:
        code:
          type: string
    api_docs_16_JWTResponse:
      type: object
      properties:
        jwt:
          type: string
    api_docs_16_PerformAuthorizationRequest:
      type: object
      properties:
        streamUuid:
          type: string
      required:
      - streamUuid
    api_docs_16_VideoStreamResponse:
      type: object
      properties:
        outletAuthKey:
          type: string
        accessToken:
          type: string
        expirationDate:
          type: string
          format: date-time
    api_docs_16_CurrentPeriodResponse:
      type: object
      properties:
        historicId:
          type: integer
          format: int32
    api_docs_16_EventWithPricesResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        results:
          $ref: '#/components/schemas/api_docs_16_ResultsResponse'
        scoreboard:
          $ref: '#/components/schemas/api_docs_16_ScoreboardResponse'
          deprecated: true
        widget:
          $ref: '#/components/schemas/api_docs_16_WidgetResponse'
          deprecated: true
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_WidgetResponse'
        participants:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_ParticipantResponse'
        startTime:
          type: string
          format: date-time
        markets:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_MarketResponse'
        totalMarketCount:
          type: integer
          format: int32
        category:
          $ref: '#/components/schemas/api_docs_16_IdName'
        region:
          $ref: '#/components/schemas/api_docs_16_IdName'
        competition:
          $ref: '#/components/schemas/api_docs_16_IdName'
        additionalInfo:
          $ref: '#/components/schemas/api_docs_16_EventAdditionalInfo'
        score:
          type: number
          format: double
        neutralVenue:
          type: boolean
        version:
          type: integer
          format: int64
    api_docs_16_MarketResponse:
      type: object
      properties:
        marketType:
          $ref: '#/components/schemas/api_docs_16_MarketType'
        handicap:
          type: integer
          format: int32
        handicapType:
          type: string
        pricePresentation:
          type: string
          deprecated: true
        prices:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_PriceResponse'
        additionalInfo:
          $ref: '#/components/schemas/api_docs_16_MarketAdditionalInfo'
    api_docs_16_MatchScoreResponse:
      type: object
      properties:
        scoreHome:
          type: string
        scoreAway:
          type: string
    api_docs_16_MatchStateResponse:
      type: object
      properties:
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
    api_docs_16_ScoreboardResponse:
      type: object
      properties:
        matchState:
          $ref: '#/components/schemas/api_docs_16_MatchStateResponse'
        matchScore:
          $ref: '#/components/schemas/api_docs_16_MatchScoreResponse'
        display:
          $ref: '#/components/schemas/api_docs_16_DisplayResponse'
        currentPeriod:
          $ref: '#/components/schemas/api_docs_16_CurrentPeriodResponse'
    api_docs_16_SearchResponse:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_EventWithPricesResponse'
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_CompetitionSearchResponse'
    api_docs_16_GenericListResponsePriceResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_PriceResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_16_EventSelectionAdditionalInfo:
      type: object
      properties:
        live:
          type: boolean
        cashoutable:
          type: boolean
        twoUp:
          type: boolean
    api_docs_16_EventSelectionResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        typeId:
          type: string
        category:
          $ref: '#/components/schemas/api_docs_16_IdName'
        region:
          $ref: '#/components/schemas/api_docs_16_IdName'
        competition:
          $ref: '#/components/schemas/api_docs_16_IdName'
        event:
          $ref: '#/components/schemas/api_docs_16_IdName'
        startTime:
          type: string
          format: date-time
        market:
          $ref: '#/components/schemas/api_docs_16_ShortMarketInfo'
        price:
          type: number
        additionalInfo:
          $ref: '#/components/schemas/api_docs_16_EventSelectionAdditionalInfo'
    api_docs_16_GenericListResponseEventSelectionResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_EventSelectionResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_16_Handicap:
      type: object
      properties:
        value:
          type: integer
          format: int32
        type:
          type: string
        text:
          type: string
    api_docs_16_ShortMarketInfo:
      type: object
      properties:
        typeId:
          type: string
        name:
          type: string
        displayName:
          type: string
        handicap:
          $ref: '#/components/schemas/api_docs_16_Handicap'
    api_docs_16_BooleanFilter:
      type: object
      properties:
        value:
          type: boolean
          example: true
    api_docs_16_FilteredUpcomingEventsBatchRequest:
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_FilteredUpcomingEventsRequest'
      required:
      - requests
    api_docs_16_FilteredUpcomingEventsRequest:
      type: object
      properties:
        categoryIds:
          type: array
          example:
          - 2
          items:
            type: string
        eventType:
          type: string
          description: One of {UPCOMING, LIVE}
          example: UPCOMING
        take:
          type: integer
          format: int32
          example: 10
          maximum: 100
          minimum: 1
        filters:
          $ref: '#/components/schemas/api_docs_16_Filters'
      required:
      - categoryIds
      - filters
    api_docs_16_Filters:
      type: object
      properties:
        boosted:
          $ref: '#/components/schemas/api_docs_16_BooleanFilter'
    api_docs_16_FilteredUpcomingEventsBatch:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/api_docs_16_FilteredUpcomingEventsRequest'
        responses:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_EventWithPricesResponse'
    api_docs_16_FilteredUpcomingEventsBatchResponse:
      type: object
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_FilteredUpcomingEventsBatch'
    api_docs_16_ShortFilteredUpcomingEventsRequest:
      type: object
      properties:
        categoryId:
          type: string
          example: 2
        take:
          type: integer
          format: int32
          example: 10
          maximum: 4200
          minimum: 1
        markets:
          type: array
          description: 3743 is 1X2
          example:
          - 3743
          items:
            type: string
      required:
      - categoryId
      - markets
    api_docs_16_GenericListResponseShortEventResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_ShortEventResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_16_ShortEventResponse:
      type: object
      properties:
        id:
          type: string
        competitionId:
          type: string
        startTime:
          type: string
          format: date-time
        availableMarkets:
          type: array
          items:
            type: string
    api_docs_16_EventsListRequest:
      type: object
      properties:
        categoryId:
          type: string
          example: 2
        regionId:
          type: array
          example:
          - 448
          - 449
          items:
            type: string
        onlyPopular:
          type: boolean
          default: 'false'
        showLive:
          type: boolean
          default: 'false'
        competitions:
          type: array
          example: en
          items:
            type: string
        marketFilters:
          $ref: '#/components/schemas/api_docs_16_MarketFilters'
        take:
          type: integer
          format: int32
          maximum: 100
          minimum: 1
      required:
      - marketFilters
    api_docs_16_MarketFilters:
      type: object
      properties:
        marketPreference:
          type: string
          description: One of {ALL, MAIN, DEFINED}
          example: DEFINED
        marketTypeIds:
          type: array
          description: 3743 is 1X2
          example:
          - 3743
          items:
            type: string
      required:
      - marketPreference
    api_docs_16_EventsListResponse:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_EventWithPricesResponse'
        nextEventIds:
          type: array
          items:
            type: string
        total:
          type: integer
          format: int64
        meta:
          $ref: '#/components/schemas/api_docs_16_EventsListResponseMeta'
    api_docs_16_EventsListResponseMeta:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/api_docs_16_CategoryStaticMeta'
        region:
          $ref: '#/components/schemas/api_docs_16_RegionStaticMeta'
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_CompetitionStaticMeta'
    api_docs_16_EventsByIdsRequest:
      type: object
      properties:
        eventIds:
          type: array
          example:
          - 4
          - 5
          - 6
          items:
            type: string
        marketFilters:
          $ref: '#/components/schemas/api_docs_16_MarketFilters'
      required:
      - eventIds
      - marketFilters
    api_docs_16_GenericListResponseEventWithPricesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_EventWithPricesResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_16_ShowLiveToggle:
      type: object
      properties:
        enabled:
          type: boolean
    api_docs_16_EventsBatchRequest:
      type: object
      properties:
        queries:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_EventsRequest'
          maxItems: 21
          minItems: 1
    api_docs_16_EventsRequest:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/api_docs_16_Query'
          description: all fields in query merged like '&&'; arrays fields in query
            merge they data as '||'
        view:
          $ref: '#/components/schemas/api_docs_16_View'
          description: data that should be kept in the event
        sort:
          $ref: '#/components/schemas/api_docs_16_Sort'
        take:
          type: integer
          format: int32
          example: 10
          maximum: 100
          minimum: 1
        skip:
          type: integer
          format: int32
          example: 100
          minimum: 0
      required:
      - query
    api_docs_16_Query:
      type: object
      properties:
        eventType:
          type: string
          description: One of {UPCOMING, LIVE} or null
          example: UPCOMING
        categories:
          type: array
          description: Sport categories
          example:
          - 2
          items:
            type: string
          maxItems: 7
          minItems: 1
        zones:
          $ref: '#/components/schemas/api_docs_16_ZonesRequest'
          description: all fields in zones merged '||'
        marketTypes:
          type: array
          description: Filter events with one of this markets is available and has
            a price.
          example:
          - 3743
          items:
            type: string
          maxItems: 7
          minItems: 1
        hasOdds:
          type: boolean
          description: Check that event have any price.
        startTime:
          $ref: '#/components/schemas/api_docs_16_StartTimeSubQuery'
        popular:
          type: boolean
          description: To filter event with hot price. Nullable field.
        boosted:
          type: boolean
          description: To filter event with boosted markets. Nullable field.
      required:
      - categories
    api_docs_16_Sort:
      type: object
      properties:
        startTime:
          type: string
          description: One of {ASC, DESC} or null, ASC by default
          example: ASC
        competitionPriority:
          type: string
          description: One of {ASC, DESC} or null, null by default
          example: ASC
        competitionAbc:
          type: string
    api_docs_16_StartTimeSubQuery:
      type: object
      properties:
        gte:
          type: string
          format: date-time
        lt:
          type: string
          format: date-time
    api_docs_16_View:
      type: object
      properties:
        marketTypes:
          type: array
          description: 'Remove other markets from response. If this field is null
            we use ''query.marketTypes''. If this field & ''query.marketTypes'' is
            null we keep only main markets. If this field is empty we remove all markets. '
          example:
          - 3743
          items:
            type: string
          maxItems: 7
          minItems: 0
    api_docs_16_ZonesRequest:
      type: object
      properties:
        regions:
          type: array
          description: Countries / Regions
          example:
          - 448
          - 449
          items:
            type: string
          maxItems: 18
          minItems: 1
        competitions:
          type: array
          description: Tournaments / Competition / Leagues
          example:
          - 11965
          - 12546
          items:
            type: string
          maxItems: 42
          minItems: 1
    api_docs_16_EventsBatch:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/api_docs_16_EventsRequest'
        responses:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_EventWithPricesByMarketResponse'
    api_docs_16_EventsBatchResponseV3:
      type: object
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_EventsBatch'
    api_docs_16_CategoriesRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
      required:
      - ids
    api_docs_16_AllCategoriesResponseV3:
      type: object
      properties:
        withRegions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_CategoryResponseV3'
        onlyMeta:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_CategoryResponseV3'
    api_docs_16_CategoryResponseV3:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/api_docs_16_CategoryStaticMeta'
        regions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_RegionResponseV3'
        eventCounts:
          $ref: '#/components/schemas/api_docs_16_EventCounts'
        week:
          $ref: '#/components/schemas/api_docs_16_CountCalendar'
    api_docs_16_CompetitionResponseV3:
      type: object
      properties:
        competition:
          $ref: '#/components/schemas/api_docs_16_CompetitionStaticMeta'
        eventCounts:
          $ref: '#/components/schemas/api_docs_16_EventCounts'
        week:
          $ref: '#/components/schemas/api_docs_16_CountCalendar'
    api_docs_16_CountCalendar:
      type: object
      description: contain array of days for next week that has any type of events
      properties:
        days:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_EventCountsPerDay'
    api_docs_16_EventCounts:
      type: object
      properties:
        live:
          type: integer
          format: int64
        upcoming:
          type: integer
          format: int64
        boosted:
          type: integer
          format: int64
        hot:
          type: integer
          format: int64
    api_docs_16_EventCountsPerDay:
      type: object
      properties:
        day:
          type: string
          format: date
        counts:
          $ref: '#/components/schemas/api_docs_16_EventCounts'
    api_docs_16_RegionResponseV3:
      type: object
      properties:
        region:
          $ref: '#/components/schemas/api_docs_16_RegionStaticMeta'
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_CompetitionResponseV3'
        eventCounts:
          $ref: '#/components/schemas/api_docs_16_EventCounts'
        week:
          $ref: '#/components/schemas/api_docs_16_CountCalendar'
    api_docs_16_EventsBatchResponse:
      type: object
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_EventsBatch'
    api_docs_16_AllCategoriesResponseV2:
      type: object
      properties:
        withRegions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_CategoryResponseV2'
        onlyMeta:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_CategoryResponseV2'
    api_docs_16_CategoryResponseV2:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/api_docs_16_CategoryStaticMeta'
        regions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_RegionResponseV2'
        liveEventCount:
          type: integer
          format: int64
        upcomingEventCount:
          type: integer
          format: int64
        boostedEventCount:
          type: integer
          format: int64
        hotEventCount:
          type: integer
          format: int64
    api_docs_16_CompetitionResponseV2:
      type: object
      properties:
        competition:
          $ref: '#/components/schemas/api_docs_16_CompetitionStaticMeta'
        eventCount:
          type: integer
          format: int64
        liveEventCount:
          type: integer
          format: int64
        upcomingEventCount:
          type: integer
          format: int64
        boostedEventCount:
          type: integer
          format: int64
        popularEventCount:
          type: integer
          format: int64
    api_docs_16_RegionResponseV2:
      type: object
      properties:
        region:
          $ref: '#/components/schemas/api_docs_16_RegionStaticMeta'
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_CompetitionResponseV2'
    api_docs_16_GenericListResponseScoreboardWithEventResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_ScoreboardWithEventResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_16_ScoreboardWithEventResponse:
      type: object
      properties:
        id:
          type: string
        scoreboard:
          $ref: '#/components/schemas/api_docs_16_ScoreboardResponse'
    api_docs_16_GenericListResponseResultsWithEventResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_ResultsWithEventResponse'
        totalCount:
          type: integer
          format: int32
    api_docs_16_ResultsWithEventResponse:
      type: object
      properties:
        id:
          type: string
        results:
          $ref: '#/components/schemas/api_docs_16_ResultsResponse'
    api_docs_16_CategoryActiveRegionsResponse:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/api_docs_16_CategoryStaticMeta'
        countries:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_RegionResponse'
        liveEventsCount:
          type: integer
          format: int64
        upcomingEventsCount:
          type: integer
          format: int64
    api_docs_16_CompetitionResponse:
      type: object
      properties:
        competition:
          $ref: '#/components/schemas/api_docs_16_CompetitionStaticMeta'
        eventCount:
          type: integer
          format: int64
    api_docs_16_RegionResponse:
      type: object
      properties:
        region:
          $ref: '#/components/schemas/api_docs_16_RegionStaticMeta'
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_CompetitionResponse'
    api_docs_16_CategoryEventCount:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/api_docs_16_CategoryStaticMeta'
        liveEventCount:
          type: integer
          format: int64
        upcomingEventCount:
          type: integer
          format: int64
    api_docs_16_GenericListResponseCategoryEventCount:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_CategoryEventCount'
        totalCount:
          type: integer
          format: int32
    api_docs_16_AggregatedCategoryResponse:
      type: object
      properties:
        regions:
          $ref: '#/components/schemas/api_docs_16_CategoryActiveRegionsResponse'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_CategoryEventCount'
    api_docs_16_BookingNumberResponse:
      type: object
      properties:
        selectionResponses:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_16_EventSelectionResponse'
    api_docs_17_ManualHotEventCreationDto:
      type: object
      properties:
        enabled:
          type: boolean
    api_docs_17_ManualHotEventDto:
      type: object
      properties:
        eventId:
          type: string
        enabled:
          type: boolean
      required:
      - eventId
    api_docs_17_ChangeRecord:
      type: object
      properties:
        changeType:
          type: string
        timestamp:
          type: string
          format: date-time
        propertyName:
          type: string
        left:
          type: object
        right:
          type: object
        author:
          type: string
    api_docs_17_GenericListResponseChangeRecord:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_17_ChangeRecord'
        totalCount:
          type: integer
          format: int32
    api_docs_18_BankAccountDetails:
      type: object
      properties:
        bankName:
          type: string
        accountNumber:
          type: string
    api_docs_18_SelfExcludeRequest:
      type: object
      properties:
        password:
          type: string
        selfExcludedUntil:
          type: string
          format: date-time
          description: Self excluded until in ISO-8601 format. Default value is set
            to 99 years
        bankAccountDetails:
          $ref: '#/components/schemas/api_docs_18_BankAccountDetails'
      required:
      - password
    api_docs_18_UserDetailsUpdateRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        nin:
          type: string
        nationality:
          type: string
        documentNr:
          type: string
        brandIdentifier:
          type: string
          description: User's brand. For v2 endpoint only
    api_docs_18_RemoveSelfExclusionRequest:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        userNote:
          type: string
          description: Comment on the reason of this action
        brandIdentifier:
          type: string
          description: User's brand. For v2 endpoint only
      required:
      - userNote
      - userUuid
    api_docs_18_CloseRequest:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        userNote:
          type: string
          description: Comment on the reason of this action
        accountClosed:
          type: boolean
          description: Default value true. To open account set value to false
        brandIdentifier:
          type: string
          description: User's brand. For v2 endpoint only
      required:
      - userNote
      - userUuid
    api_docs_18_CloseResponse:
      type: object
      properties:
        accountClosed:
          type: boolean
        banned:
          type: boolean
    api_docs_18_BanRequest:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        userNote:
          type: string
          description: Comment on the reason of this action
        banned:
          type: boolean
          description: Default value true. To unban user set value to false
        bannedUntil:
          type: string
          format: date-time
          description: If banned is true, default value current time plus 100 years
        brandIdentifier:
          type: string
          description: User's brand. For v2 endpoint only
      required:
      - userNote
      - userUuid
    api_docs_18_ArchiveRequest:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        userNote:
          type: string
          description: Comment on the reason of user deletion
        brandIdentifier:
          type: string
          description: User's brand
      required:
      - userNote
      - userUuid
    api_docs_18_UserNoteCreateRequest:
      type: object
      properties:
        userUUID:
          type: string
          format: uuid
        text:
          type: string
        brandIdentifier:
          type: string
          description: User's brand. For v2 endpoint only
    api_docs_18_VerifyAndAuthenticateRequest:
      type: object
      properties:
        phoneNumber:
          type: string
          description: User's phone number
        verificationCode:
          type: string
          description: Verification code from message
      required:
      - phoneNumber
      - verificationCode
    api_docs_18_AuthenticationResponseV3:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
    api_docs_18_ErrorResponse:
      type: object
      properties:
        error:
          type: string
        uuid:
          type: string
        params:
          type: array
          items:
            type: string
        payload:
          type: object
          additionalProperties:
            type: object
    api_docs_18_SignUpRequestV2:
      type: object
      properties:
        phoneNumber:
          type: string
        password:
          type: string
          maxLength: 1000
          minLength: 4
      required:
      - password
      - phoneNumber
    api_docs_18_PasswordRequestV3:
      type: object
      properties:
        phoneNumber:
          type: string
          description: Phone number to update password. Also it is key for call limiter
        resetMethodName:
          type: string
          description: 'One of possible methods to reset password. It could be: SMS,
            VOICE, WHATSAPP, ....'
      required:
      - phoneNumber
      - resetMethodName
    api_docs_18_LimitsCollectionResponse:
      type: object
      properties:
        limit:
          $ref: '#/components/schemas/api_docs_18_LimitsResponse'
        otherLimits:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api_docs_18_LimitsResponse'
    api_docs_18_LimitsResponse:
      type: object
      properties:
        attemptsLimit:
          type: integer
          format: int32
        attemptsLeft:
          type: integer
          format: int32
        attemptsPeriodMin:
          type: integer
          format: int64
        allowed:
          type: boolean
          description: This flag indicates state of executed operation but not related
            to next attempt.
    api_docs_18_VerifyOtpRequest:
      type: object
      properties:
        phoneNumber:
          type: string
          description: Phone number to update password. Also it is key for call limiter
        otpCode:
          type: string
          description: Received OPT code
      required:
      - otpCode
      - phoneNumber
    api_docs_18_VerifyOtpResponse:
      type: object
      properties:
        valid:
          type: boolean
        limits:
          $ref: '#/components/schemas/api_docs_18_LimitsResponse'
    api_docs_18_SetPasswordRequestV3:
      type: object
      properties:
        phoneNumber:
          type: string
          description: Phone number to update password. Also it is key for call limiter
        otpCode:
          type: string
          description: Received OPT code
        newPassword:
          type: string
          description: Length at least 4 characters
        rememberMe:
          type: boolean
          description: When true token will be saved for extended time, e.g. 30 days
      required:
      - newPassword
      - otpCode
      - phoneNumber
    api_docs_18_AuthenticationRequest:
      type: object
      properties:
        username:
          type: string
          description: Usually its a phone number
        password:
          type: string
        rememberMe:
          type: boolean
          description: When true token will be saved for extended time, e.g. 30 days
      required:
      - password
      - username
    api_docs_18_ConnectedUserAuthenticationRequest:
      type: object
      properties:
        connectedUserUuid:
          type: string
          format: uuid
    api_docs_18_AuthenticationResponse:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        forcePasswordUpdate:
          type: boolean
        phoneNumber:
          type: string
        region:
          type: string
        signedUpAt:
          type: string
          format: date-time
        connectedUser:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_18_ConnectedUserResponse'
    api_docs_18_ConnectedUserResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        phoneNumber:
          type: string
        type:
          type: string
          enum:
          - UNVERIFIED
          - VERIFIED
          - CONNECTED
    api_docs_18_UserChangePasswordRequest:
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
          description: Length at least 4 characters
      required:
      - currentPassword
      - newPassword
    api_docs_18_UserConnectionRequest:
      type: object
      properties:
        otherPhoneNumber:
          type: string
    api_docs_18_ConnectedUsersResponse:
      type: object
      properties:
        connectedUsers:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_18_ConnectedUserResponse'
    api_docs_18_UserConnectionVerificationRequest:
      type: object
      properties:
        verificationCode:
          type: string
    api_docs_18_UserDetailRequest:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        brandIdentifier:
          type: string
        archived:
          type: boolean
      required:
      - brandIdentifier
      - userUuid
    api_docs_18_NoteResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        noteUuid:
          type: string
          format: uuid
        userUuid:
          type: string
          format: uuid
        Name:
          type: string
        Note:
          type: string
        Created:
          type: string
          format: date-time
    api_docs_18_UserDetailsResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        username:
          type: string
        fullnameExternal:
          type: string
        fullnamesExternal:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api_docs_18_UserExternalName'
        phoneNumber:
          type: string
        active:
          type: boolean
        name:
          type: string
        isoCountryCode:
          type: string
        brandIdentifier:
          type: string
        email:
          type: string
        banned:
          type: boolean
        bannedUntil:
          type: string
          format: date-time
        accountClosed:
          type: boolean
        archived:
          type: boolean
        notes:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_18_NoteResponse'
        verified:
          type: boolean
        verifiedDate:
          type: string
          format: date-time
        registrationDate:
          type: string
          format: date-time
        firstname:
          type: string
        lastname:
          type: string
        nin:
          type: string
        nationality:
          type: string
        documentNr:
          type: string
        faceId:
          type: string
        values:
          type: object
          additionalProperties:
            type: string
    api_docs_18_UserExternalName:
      type: object
      properties:
        correspondent:
          type: string
        externalName:
          type: string
        timestamp:
          type: string
          format: date-time
    api_docs_18_Query:
      type: object
      properties:
        brandIdentifier:
          type: string
        name:
          type: string
        phoneNumber:
          type: string
    api_docs_18_UsersSearchRequest:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/api_docs_18_Query'
        archived:
          type: boolean
        queryNullOrEmpty:
          type: boolean
    api_docs_18_ListResponseUserSearchResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_18_UserSearchResponse'
    api_docs_18_UserSearchResponse:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        brandIdentifier:
          type: string
    api_docs_18_UserDetailsRequest:
      type: object
      properties:
        userUuids:
          type: array
          items:
            type: string
            format: uuid
        brandIdentifier:
          type: string
        archived:
          type: boolean
      required:
      - brandIdentifier
      - userUuids
    api_docs_18_ListResponseUserSearchDetailsResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_18_UserSearchDetailsResponse'
    api_docs_18_UserSearchDetailsResponse:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        phoneNumber:
          type: string
        name:
          type: string
          example: alex.lexus
        registrationDate:
          type: string
          format: date-time
        lastSignIn:
          type: string
          format: date-time
        brandIdentifier:
          type: string
    api_docs_18_UserNoteResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        userUuid:
          type: string
          format: uuid
        note:
          type: string
        created:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
    api_docs_18_UserNotesRequest:
      type: object
      properties:
        userUUID:
          type: string
          format: uuid
        brandIdentifier:
          type: string
          description: User's brand. For v2 endpoint only
        skip:
          type: integer
          format: int32
        take:
          type: integer
          format: int32
          maximum: 100
          minimum: 1
      required:
      - skip
      - take
      - userUUID
    api_docs_18_ListResponseUserNoteResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_18_UserNoteResponse'
    api_docs_18_OtpConfigurationRequest:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        method:
          type: string
        brandIdentifier:
          type: string
        position:
          type: integer
          format: int32
        activeUsersCallLimit:
          type: integer
          format: int32
        inactiveUsersCallLimit:
          type: integer
          format: int32
        callLimitDuration:
          type: string
        enabled:
          type: boolean
      required:
      - activeUsersCallLimit
      - brandIdentifier
      - enabled
      - inactiveUsersCallLimit
      - method
      - position
    api_docs_18_OtpConfigurationResponse:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        brandIdentifier:
          type: string
        method:
          type: string
        position:
          type: integer
          format: int32
        enabled:
          type: boolean
        activeUsersCallLimit:
          type: integer
          format: int32
        inactiveUsersCallLimit:
          type: integer
          format: int32
        callLimitDuration:
          type: string
    api_docs_18_ListResponseOtpConfigurationResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_18_OtpConfigurationResponse'
    api_docs_18_IntegerResponse:
      type: object
      properties:
        value:
          type: integer
          format: int32
    api_docs_18_UserConnectionDeletionRequest:
      type: object
      properties:
        userUuid:
          type: string
          format: uuid
        brandIdentifier:
          type: string
    api_docs_19_LeagueIdRequest:
      type: object
      properties:
        leagueId:
          type: integer
          format: int64
    api_docs_19_ErrorResponse:
      type: object
      properties:
        error:
          type: string
        uuid:
          type: string
        params:
          type: array
          items:
            type: string
        payload:
          type: object
          additionalProperties:
            type: object
    api_docs_19_LeagueStatusDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        status:
          type: string
          enum:
          - ENABLED
          - DISABLED
    api_docs_19_GameRoundDto:
      type: object
      properties:
        gameRoundId:
          type: integer
          format: int64
        gameRoundName:
          type: string
    api_docs_19_LeagueDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    api_docs_19_LeagueStanding:
      type: object
      properties:
        league:
          $ref: '#/components/schemas/api_docs_19_LeagueDto'
        teams:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api_docs_19_TeamDto'
        gameRounds:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_19_GameRoundDto'
        leagueStandings:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_19_LeagueTableRow'
    api_docs_19_LeagueTableRow:
      type: object
      properties:
        position:
          type: integer
          format: int32
        teamId:
          type: integer
          format: int64
        played:
          type: integer
          format: int32
        won:
          type: integer
          format: int32
        drew:
          type: integer
          format: int32
        lost:
          type: integer
          format: int32
        scored:
          type: integer
          format: int32
        conceded:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        form:
          type: array
          items:
            type: string
            enum:
            - W
            - D
            - L
    api_docs_19_SeasonDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    api_docs_19_Standing:
      type: object
      properties:
        season:
          $ref: '#/components/schemas/api_docs_19_SeasonDto'
        standings:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_19_LeagueStanding'
    api_docs_19_TeamDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    api_docs_19_MatchUpDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        gameRoundId:
          type: integer
          format: int64
        homeId:
          type: integer
          format: int64
        awayId:
          type: integer
          format: int64
        homeScore:
          type: integer
          format: int32
        awayScore:
          type: integer
          format: int32
        homeHT:
          type: integer
          format: int32
        awayHT:
          type: integer
          format: int32
        status:
          type: string
          enum:
          - NOT_STARTED
          - IN_PLAY
          - FINISHED
    api_docs_19_MatchUpLeague:
      type: object
      properties:
        league:
          $ref: '#/components/schemas/api_docs_19_LeagueDto'
        matchUps:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_19_MatchUpDto'
    api_docs_19_MatchUps:
      type: object
      properties:
        teams:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api_docs_19_TeamDto'
        rounds:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api_docs_19_GameRoundDto'
        leagues:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_19_MatchUpLeague'
    api_docs_19_InPlay:
      type: object
      properties:
        season:
          $ref: '#/components/schemas/api_docs_19_SeasonDto'
        gameRoundId:
          type: integer
          format: int64
        gameRoundName:
          type: string
        gameMinute:
          type: integer
          format: int32
        finished:
          type: boolean
        inPlayLeagues:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_19_InPlayLeague'
    api_docs_19_InPlayLeague:
      type: object
      properties:
        league:
          $ref: '#/components/schemas/api_docs_19_LeagueDto'
        matches:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_19_InPlayMatch'
    api_docs_19_InPlayMatch:
      type: object
      properties:
        id:
          type: integer
          format: int64
        homeTeam:
          $ref: '#/components/schemas/api_docs_19_TeamDto'
        awayTeam:
          $ref: '#/components/schemas/api_docs_19_TeamDto'
        homeHTScore:
          type: integer
          format: int32
        awayHTScore:
          type: integer
          format: int32
        homeScore:
          type: integer
          format: int32
        awayScore:
          type: integer
          format: int32
    api_docs_19_FrontPage:
      type: object
      properties:
        seasons:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/api_docs_19_SeasonDto'
        gameRounds:
          type: array
          items:
            $ref: '#/components/schemas/api_docs_19_FrontPageGameRound'
    api_docs_19_FrontPageGameRound:
      type: object
      properties:
        seasonId:
          type: integer
          format: int64
        gameRoundId:
          type: integer
          format: int64
        gameRoundName:
          type: string
        bettingClosesTime:
          type: integer
          format: int64
        bettingClosesSeconds:
          type: integer
          format: int64
        gameRoundStatus:
          type: string
          enum:
          - BETTING_NOT_OPEN
          - BETTING_ACTIVE
          - IN_PLAY
          - PAST_GAME_ROUND
  securitySchemes:
    api_docs_Token:
      type: apiKey
      name: x-pawa-token
      in: cookie
    api_docs_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_2_Token:
      type: apiKey
      name: x-pawa-token
      in: cookie
    api_docs_2_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_3_Token:
      type: apiKey
      name: x-pawa-token
      in: cookie
    api_docs_3_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_4_AdminToken:
      type: apiKey
      name: x-pawa-token-admin
      in: cookie
    api_docs_4_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_5_token:
      type: apiKey
      name: x-pawa-token
      in: cookie
    api_docs_5_admin-token:
      type: apiKey
      name: x-pawa-token-admin
      in: cookie
    api_docs_5_brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_6_Token:
      type: apiKey
      name: x-pawa-token
      in: cookie
    api_docs_6_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_7_Token:
      type: apiKey
      name: x-pawa-token
      in: cookie
    api_docs_7_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_8_Token:
      type: apiKey
      name: x-pawa-token
      in: cookie
    api_docs_8_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_9_Token:
      type: apiKey
      name: x-pawa-token
      in: cookie
    api_docs_9_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_11_Admin-Token:
      type: apiKey
      name: x-pawa-token-admin
      in: cookie
    api_docs_11_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_12_Token:
      type: apiKey
      name: x-pawa-token
      in: cookie
    api_docs_12_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_13_Token:
      type: apiKey
      name: x-pawa-token
      in: cookie
    api_docs_13_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_14_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_15_Token:
      type: apiKey
      name: x-pawa-token
      in: cookie
    api_docs_15_Admin-token:
      type: apiKey
      name: x-pawa-token-admin
      in: cookie
    api_docs_15_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_16_Token:
      type: apiKey
      name: x-pawa-token
      in: cookie
    api_docs_16_Admin-token:
      type: apiKey
      name: x-pawa-token-admin
      in: cookie
    api_docs_16_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_17_Token:
      type: apiKey
      name: x-pawa-token
      in: cookie
    api_docs_17_Admin-token:
      type: apiKey
      name: x-pawa-token-admin
      in: cookie
    api_docs_17_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_18_Token:
      type: apiKey
      name: x-pawa-token
      in: cookie
    api_docs_18_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
    api_docs_19_Admin Token:
      type: apiKey
      name: x-pawa-token-admin
      in: cookie
    api_docs_19_Brand:
      type: apiKey
      name: x-pawa-brand
      in: header
